{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nvar CSSDataProvider =\n/** @class */\nfunction () {\n  /**\n   * Currently, unversioned data uses the V1 implementation\n   * In the future when the provider handles multiple versions of HTML custom data,\n   * use the latest implementation for unversioned data\n   */\n  function CSSDataProvider(data) {\n    this._properties = [];\n    this._atDirectives = [];\n    this._pseudoClasses = [];\n    this._pseudoElements = [];\n    this.addData(data);\n  }\n\n  CSSDataProvider.prototype.provideProperties = function () {\n    return this._properties;\n  };\n\n  CSSDataProvider.prototype.provideAtDirectives = function () {\n    return this._atDirectives;\n  };\n\n  CSSDataProvider.prototype.providePseudoClasses = function () {\n    return this._pseudoClasses;\n  };\n\n  CSSDataProvider.prototype.providePseudoElements = function () {\n    return this._pseudoElements;\n  };\n\n  CSSDataProvider.prototype.addData = function (data) {\n    if (data.properties) {\n      this._properties = this._properties.concat(data.properties);\n    }\n\n    if (data.atDirectives) {\n      this._atDirectives = this._atDirectives.concat(data.atDirectives);\n    }\n\n    if (data.pseudoClasses) {\n      this._pseudoClasses = this._pseudoClasses.concat(data.pseudoClasses);\n    }\n\n    if (data.pseudoElements) {\n      this._pseudoElements = this._pseudoElements.concat(data.pseudoElements);\n    }\n  };\n\n  return CSSDataProvider;\n}();\n\nexport { CSSDataProvider };","map":null,"metadata":{},"sourceType":"module"}