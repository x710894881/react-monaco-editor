{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar monaco = _interopRequireWildcard(require(\"monaco-editor/esm/vs/editor/editor.api\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj[\"default\"] = obj;\n    return newObj;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar MonacoEditor =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MonacoEditor, _React$Component);\n\n  function MonacoEditor(props) {\n    var _this;\n\n    _classCallCheck(this, MonacoEditor);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MonacoEditor).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"assignRef\", function (component) {\n      _this.containerElement = component;\n    });\n\n    _this.containerElement = undefined;\n    return _this;\n  }\n\n  _createClass(MonacoEditor, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.initMonaco();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          value = _this$props.value,\n          language = _this$props.language,\n          theme = _this$props.theme,\n          height = _this$props.height,\n          options = _this$props.options,\n          width = _this$props.width;\n      var editor = this.editor;\n      var model = editor.getModel();\n\n      if (this.props.value != null && this.props.value !== model.getValue()) {\n        this.__prevent_trigger_change_event = true;\n        this.editor.pushUndoStop();\n        model.pushEditOperations([], [{\n          range: model.getFullModelRange(),\n          text: value\n        }]);\n        this.editor.pushUndoStop();\n        this.__prevent_trigger_change_event = false;\n      }\n\n      if (prevProps.language !== language) {\n        monaco.editor.setModelLanguage(model, language);\n      }\n\n      if (prevProps.theme !== theme) {\n        monaco.editor.setTheme(theme);\n      }\n\n      if (editor && (width !== prevProps.width || height !== prevProps.height)) {\n        editor.layout();\n      }\n\n      if (prevProps.options !== options) {\n        editor.updateOptions(options);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.destroyMonaco();\n    }\n  }, {\n    key: \"destroyMonaco\",\n    value: function destroyMonaco() {\n      if (this.editor) {\n        this.editor.dispose();\n        var model = this.editor.getModel();\n\n        if (model) {\n          model.dispose();\n        }\n      }\n\n      if (this._subscription) {\n        this._subscription.dispose();\n      }\n    }\n  }, {\n    key: \"initMonaco\",\n    value: function initMonaco() {\n      var value = this.props.value != null ? this.props.value : this.props.defaultValue;\n      var _this$props2 = this.props,\n          language = _this$props2.language,\n          theme = _this$props2.theme,\n          options = _this$props2.options,\n          overrideServices = _this$props2.overrideServices;\n\n      if (this.containerElement) {\n        // Before initializing monaco editor\n        Object.assign(options, this.editorWillMount());\n        this.editor = monaco.editor.create(this.containerElement, _objectSpread({\n          value: value,\n          language: language\n        }, options, {}, theme ? {\n          theme: theme\n        } : {}), overrideServices); // After initializing monaco editor\n\n        this.editorDidMount(this.editor);\n      }\n    }\n  }, {\n    key: \"editorWillMount\",\n    value: function editorWillMount() {\n      var editorWillMount = this.props.editorWillMount;\n      var options = editorWillMount(monaco);\n      return options || {};\n    }\n  }, {\n    key: \"editorDidMount\",\n    value: function editorDidMount(editor) {\n      var _this2 = this;\n\n      this.props.editorDidMount(editor, monaco);\n      this._subscription = editor.onDidChangeModelContent(function (event) {\n        if (!_this2.__prevent_trigger_change_event) {\n          _this2.props.onChange(editor.getValue(), event);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          width = _this$props3.width,\n          height = _this$props3.height;\n      var fixedWidth = (0, _utils.processSize)(width);\n      var fixedHeight = (0, _utils.processSize)(height);\n      var style = {\n        width: fixedWidth,\n        height: fixedHeight\n      };\n      return _react[\"default\"].createElement(\"div\", {\n        ref: this.assignRef,\n        style: style,\n        className: \"react-monaco-editor-container\"\n      });\n    }\n  }]);\n\n  return MonacoEditor;\n}(_react[\"default\"].Component);\n\nMonacoEditor.propTypes = {\n  width: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].number]),\n  height: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].number]),\n  value: _propTypes[\"default\"].string,\n  defaultValue: _propTypes[\"default\"].string,\n  language: _propTypes[\"default\"].string,\n  theme: _propTypes[\"default\"].string,\n  options: _propTypes[\"default\"].object,\n  overrideServices: _propTypes[\"default\"].object,\n  editorDidMount: _propTypes[\"default\"].func,\n  editorWillMount: _propTypes[\"default\"].func,\n  onChange: _propTypes[\"default\"].func\n};\nMonacoEditor.defaultProps = {\n  width: \"100%\",\n  height: \"100%\",\n  value: null,\n  defaultValue: \"\",\n  language: \"javascript\",\n  theme: null,\n  options: {},\n  overrideServices: {},\n  editorDidMount: _utils.noop,\n  editorWillMount: _utils.noop,\n  onChange: _utils.noop\n};\nvar _default = MonacoEditor;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}