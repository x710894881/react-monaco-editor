{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { alert } from '../../../base/browser/ui/aria/aria.js';\nimport { createCancelablePromise, raceCancellation } from '../../../base/common/async.js';\nimport { KeyChord } from '../../../base/common/keyCodes.js';\nimport * as platform from '../../../base/common/platform.js';\nimport { EditorAction, registerEditorAction } from '../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\nimport { Range } from '../../common/core/range.js';\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\nimport { isLocationLink } from '../../common/modes.js';\nimport { MessageController } from '../message/messageController.js';\nimport { PeekContext } from '../referenceSearch/peekViewWidget.js';\nimport { ReferencesController } from '../referenceSearch/referencesController.js';\nimport { ReferencesModel } from '../referenceSearch/referencesModel.js';\nimport * as nls from '../../../nls.js';\nimport { MenuRegistry } from '../../../platform/actions/common/actions.js';\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\nimport { getDefinitionsAtPosition, getImplementationsAtPosition, getTypeDefinitionsAtPosition, getDeclarationsAtPosition } from './goToDefinition.js';\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\nimport { EditorStateCancellationTokenSource } from '../../browser/core/editorState.js';\nimport { ISymbolNavigationService } from './goToDefinitionResultsNavigation.js';\n\nvar DefinitionActionConfig =\n/** @class */\nfunction () {\n  function DefinitionActionConfig(openToSide, openInPeek, filterCurrent, showMessage) {\n    if (openToSide === void 0) {\n      openToSide = false;\n    }\n\n    if (openInPeek === void 0) {\n      openInPeek = false;\n    }\n\n    if (filterCurrent === void 0) {\n      filterCurrent = true;\n    }\n\n    if (showMessage === void 0) {\n      showMessage = true;\n    }\n\n    this.openToSide = openToSide;\n    this.openInPeek = openInPeek;\n    this.filterCurrent = filterCurrent;\n    this.showMessage = showMessage; //\n  }\n\n  return DefinitionActionConfig;\n}();\n\nexport { DefinitionActionConfig };\n\nvar DefinitionAction =\n/** @class */\nfunction (_super) {\n  __extends(DefinitionAction, _super);\n\n  function DefinitionAction(configuration, opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this._configuration = configuration;\n    return _this;\n  }\n\n  DefinitionAction.prototype.run = function (accessor, editor) {\n    var _this = this;\n\n    if (!editor.hasModel()) {\n      return Promise.resolve(undefined);\n    }\n\n    var notificationService = accessor.get(INotificationService);\n    var editorService = accessor.get(ICodeEditorService);\n    var progressService = accessor.get(IEditorProgressService);\n    var symbolNavService = accessor.get(ISymbolNavigationService);\n    var model = editor.getModel();\n    var pos = editor.getPosition();\n    var cts = new EditorStateCancellationTokenSource(editor, 1\n    /* Value */\n    | 4\n    /* Position */\n    );\n    var definitionPromise = raceCancellation(this._getTargetLocationForPosition(model, pos, cts.token), cts.token).then(function (references) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var idxOfCurrent, result, _i, references_1, reference, newLen, info, current;\n\n        return __generator(this, function (_a) {\n          if (!references || model.isDisposed()) {\n            // new model, no more model\n            return [2\n            /*return*/\n            ];\n          }\n\n          idxOfCurrent = -1;\n          result = [];\n\n          for (_i = 0, references_1 = references; _i < references_1.length; _i++) {\n            reference = references_1[_i];\n\n            if (!reference || !reference.range) {\n              continue;\n            }\n\n            newLen = result.push(reference);\n\n            if (this._configuration.filterCurrent && reference.uri.toString() === model.uri.toString() && Range.containsPosition(reference.range, pos) && idxOfCurrent === -1) {\n              idxOfCurrent = newLen - 1;\n            }\n          }\n\n          if (result.length === 0) {\n            // no result -> show message\n            if (this._configuration.showMessage) {\n              info = model.getWordAtPosition(pos);\n              MessageController.get(editor).showMessage(this._getNoResultFoundMessage(info), pos);\n            }\n          } else if (result.length === 1 && idxOfCurrent !== -1) {\n            current = result[0];\n            return [2\n            /*return*/\n            , this._openReference(editor, editorService, current, false).then(function () {\n              return undefined;\n            })];\n          } else {\n            // handle multile results\n            return [2\n            /*return*/\n            , this._onResult(editorService, symbolNavService, editor, new ReferencesModel(result))];\n          }\n\n          return [2\n          /*return*/\n          ];\n        });\n      });\n    }, function (err) {\n      // report an error\n      notificationService.error(err);\n    }).finally(function () {\n      cts.dispose();\n    });\n    progressService.showWhile(definitionPromise, 250);\n    return definitionPromise;\n  };\n\n  DefinitionAction.prototype._getTargetLocationForPosition = function (model, position, token) {\n    return getDefinitionsAtPosition(model, position, token);\n  };\n\n  DefinitionAction.prototype._getNoResultFoundMessage = function (info) {\n    return info && info.word ? nls.localize('noResultWord', \"No definition found for '{0}'\", info.word) : nls.localize('generic.noResults', \"No definition found\");\n  };\n\n  DefinitionAction.prototype._getMetaTitle = function (model) {\n    return model.references.length > 1 ? nls.localize('meta.title', \" – {0} definitions\", model.references.length) : '';\n  };\n\n  DefinitionAction.prototype._onResult = function (editorService, symbolNavService, editor, model) {\n    return __awaiter(this, void 0, void 0, function () {\n      var msg, gotoLocation, next, targetEditor;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            msg = model.getAriaMessage();\n            alert(msg);\n            gotoLocation = editor.getConfiguration().contribInfo.gotoLocation;\n            if (!(this._configuration.openInPeek || gotoLocation.multiple === 'peek' && model.references.length > 1)) return [3\n            /*break*/\n            , 1];\n\n            this._openInPeek(editorService, editor, model);\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 1:\n            if (!editor.hasModel()) return [3\n            /*break*/\n            , 3];\n            next = model.firstReference();\n\n            if (!next) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            return [4\n            /*yield*/\n            , this._openReference(editor, editorService, next, this._configuration.openToSide)];\n\n          case 2:\n            targetEditor = _a.sent();\n\n            if (targetEditor && model.references.length > 1 && gotoLocation.multiple === 'gotoAndPeek') {\n              this._openInPeek(editorService, targetEditor, model);\n            } else {\n              model.dispose();\n            } // keep remaining locations around when using\n            // 'goto'-mode\n\n\n            if (gotoLocation.multiple === 'goto') {\n              symbolNavService.put(next);\n            }\n\n            _a.label = 3;\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  DefinitionAction.prototype._openReference = function (editor, editorService, reference, sideBySide) {\n    // range is the target-selection-range when we have one\n    // and the the fallback is the 'full' range\n    var range = undefined;\n\n    if (isLocationLink(reference)) {\n      range = reference.targetSelectionRange;\n    }\n\n    if (!range) {\n      range = reference.range;\n    }\n\n    return editorService.openCodeEditor({\n      resource: reference.uri,\n      options: {\n        selection: Range.collapseToStart(range),\n        revealInCenterIfOutsideViewport: true\n      }\n    }, editor, sideBySide);\n  };\n\n  DefinitionAction.prototype._openInPeek = function (editorService, target, model) {\n    var _this = this;\n\n    var controller = ReferencesController.get(target);\n\n    if (controller && target.hasModel()) {\n      controller.toggleWidget(target.getSelection(), createCancelablePromise(function (_) {\n        return Promise.resolve(model);\n      }), {\n        getMetaTitle: function (model) {\n          return _this._getMetaTitle(model);\n        },\n        onGoto: function (reference) {\n          controller.closeWidget();\n          return _this._openReference(target, editorService, reference, false);\n        }\n      });\n    } else {\n      model.dispose();\n    }\n  };\n\n  return DefinitionAction;\n}(EditorAction);\n\nexport { DefinitionAction };\nvar goToDefinitionKb = platform.isWeb ? 2048\n/* CtrlCmd */\n| 70\n/* F12 */\n: 70\n/* F12 */\n;\n\nvar GoToDefinitionAction =\n/** @class */\nfunction (_super) {\n  __extends(GoToDefinitionAction, _super);\n\n  function GoToDefinitionAction() {\n    var _this = _super.call(this, new DefinitionActionConfig(), {\n      id: GoToDefinitionAction.id,\n      label: nls.localize('actions.goToDecl.label', \"Go to Definition\"),\n      alias: 'Go to Definition',\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasDefinitionProvider, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: goToDefinitionKb,\n        weight: 100\n        /* EditorContrib */\n\n      },\n      menuOpts: {\n        group: 'navigation',\n        order: 1.1\n      }\n    }) || this;\n\n    CommandsRegistry.registerCommandAlias('editor.action.goToDeclaration', GoToDefinitionAction.id);\n    return _this;\n  }\n\n  GoToDefinitionAction.id = 'editor.action.revealDefinition';\n  return GoToDefinitionAction;\n}(DefinitionAction);\n\nexport { GoToDefinitionAction };\n\nvar OpenDefinitionToSideAction =\n/** @class */\nfunction (_super) {\n  __extends(OpenDefinitionToSideAction, _super);\n\n  function OpenDefinitionToSideAction() {\n    var _this = _super.call(this, new DefinitionActionConfig(true), {\n      id: OpenDefinitionToSideAction.id,\n      label: nls.localize('actions.goToDeclToSide.label', \"Open Definition to the Side\"),\n      alias: 'Open Definition to the Side',\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasDefinitionProvider, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: KeyChord(2048\n        /* CtrlCmd */\n        | 41\n        /* KEY_K */\n        , goToDefinitionKb),\n        weight: 100\n        /* EditorContrib */\n\n      }\n    }) || this;\n\n    CommandsRegistry.registerCommandAlias('editor.action.openDeclarationToTheSide', OpenDefinitionToSideAction.id);\n    return _this;\n  }\n\n  OpenDefinitionToSideAction.id = 'editor.action.revealDefinitionAside';\n  return OpenDefinitionToSideAction;\n}(DefinitionAction);\n\nexport { OpenDefinitionToSideAction };\n\nvar PeekDefinitionAction =\n/** @class */\nfunction (_super) {\n  __extends(PeekDefinitionAction, _super);\n\n  function PeekDefinitionAction() {\n    var _this = _super.call(this, new DefinitionActionConfig(undefined, true, false), {\n      id: PeekDefinitionAction.id,\n      label: nls.localize('actions.previewDecl.label', \"Peek Definition\"),\n      alias: 'Peek Definition',\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasDefinitionProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 512\n        /* Alt */\n        | 70\n        /* F12 */\n        ,\n        linux: {\n          primary: 2048\n          /* CtrlCmd */\n          | 1024\n          /* Shift */\n          | 68\n          /* F10 */\n\n        },\n        weight: 100\n        /* EditorContrib */\n\n      },\n      menuOpts: {\n        group: 'navigation',\n        order: 1.2\n      }\n    }) || this;\n\n    CommandsRegistry.registerCommandAlias('editor.action.previewDeclaration', PeekDefinitionAction.id);\n    return _this;\n  }\n\n  PeekDefinitionAction.id = 'editor.action.peekDefinition';\n  return PeekDefinitionAction;\n}(DefinitionAction);\n\nexport { PeekDefinitionAction };\n\nvar DeclarationAction =\n/** @class */\nfunction (_super) {\n  __extends(DeclarationAction, _super);\n\n  function DeclarationAction() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  DeclarationAction.prototype._getTargetLocationForPosition = function (model, position, token) {\n    return getDeclarationsAtPosition(model, position, token);\n  };\n\n  DeclarationAction.prototype._getNoResultFoundMessage = function (info) {\n    return info && info.word ? nls.localize('decl.noResultWord', \"No declaration found for '{0}'\", info.word) : nls.localize('decl.generic.noResults', \"No declaration found\");\n  };\n\n  DeclarationAction.prototype._getMetaTitle = function (model) {\n    return model.references.length > 1 ? nls.localize('decl.meta.title', \" – {0} declarations\", model.references.length) : '';\n  };\n\n  return DeclarationAction;\n}(DefinitionAction);\n\nexport { DeclarationAction };\n\nvar GoToDeclarationAction =\n/** @class */\nfunction (_super) {\n  __extends(GoToDeclarationAction, _super);\n\n  function GoToDeclarationAction() {\n    return _super.call(this, new DefinitionActionConfig(), {\n      id: GoToDeclarationAction.id,\n      label: nls.localize('actions.goToDeclaration.label', \"Go to Declaration\"),\n      alias: 'Go to Declaration',\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasDeclarationProvider, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n      menuOpts: {\n        group: 'navigation',\n        order: 1.3\n      }\n    }) || this;\n  }\n\n  GoToDeclarationAction.prototype._getNoResultFoundMessage = function (info) {\n    return info && info.word ? nls.localize('decl.noResultWord', \"No declaration found for '{0}'\", info.word) : nls.localize('decl.generic.noResults', \"No declaration found\");\n  };\n\n  GoToDeclarationAction.prototype._getMetaTitle = function (model) {\n    return model.references.length > 1 ? nls.localize('decl.meta.title', \" – {0} declarations\", model.references.length) : '';\n  };\n\n  GoToDeclarationAction.id = 'editor.action.revealDeclaration';\n  return GoToDeclarationAction;\n}(DeclarationAction);\n\nexport { GoToDeclarationAction };\n\nvar PeekDeclarationAction =\n/** @class */\nfunction (_super) {\n  __extends(PeekDeclarationAction, _super);\n\n  function PeekDeclarationAction() {\n    return _super.call(this, new DefinitionActionConfig(undefined, true, false), {\n      id: 'editor.action.peekDeclaration',\n      label: nls.localize('actions.peekDecl.label', \"Peek Declaration\"),\n      alias: 'Peek Declaration',\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasDeclarationProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n      menuOpts: {\n        group: 'navigation',\n        order: 1.31\n      }\n    }) || this;\n  }\n\n  return PeekDeclarationAction;\n}(DeclarationAction);\n\nexport { PeekDeclarationAction };\n\nvar ImplementationAction =\n/** @class */\nfunction (_super) {\n  __extends(ImplementationAction, _super);\n\n  function ImplementationAction() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ImplementationAction.prototype._getTargetLocationForPosition = function (model, position, token) {\n    return getImplementationsAtPosition(model, position, token);\n  };\n\n  ImplementationAction.prototype._getNoResultFoundMessage = function (info) {\n    return info && info.word ? nls.localize('goToImplementation.noResultWord', \"No implementation found for '{0}'\", info.word) : nls.localize('goToImplementation.generic.noResults', \"No implementation found\");\n  };\n\n  ImplementationAction.prototype._getMetaTitle = function (model) {\n    return model.references.length > 1 ? nls.localize('meta.implementations.title', \" – {0} implementations\", model.references.length) : '';\n  };\n\n  return ImplementationAction;\n}(DefinitionAction);\n\nexport { ImplementationAction };\n\nvar GoToImplementationAction =\n/** @class */\nfunction (_super) {\n  __extends(GoToImplementationAction, _super);\n\n  function GoToImplementationAction() {\n    return _super.call(this, new DefinitionActionConfig(), {\n      id: GoToImplementationAction.ID,\n      label: nls.localize('actions.goToImplementation.label', \"Go to Implementation\"),\n      alias: 'Go to Implementation',\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasImplementationProvider, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 2048\n        /* CtrlCmd */\n        | 70\n        /* F12 */\n        ,\n        weight: 100\n        /* EditorContrib */\n\n      }\n    }) || this;\n  }\n\n  GoToImplementationAction.ID = 'editor.action.goToImplementation';\n  return GoToImplementationAction;\n}(ImplementationAction);\n\nexport { GoToImplementationAction };\n\nvar PeekImplementationAction =\n/** @class */\nfunction (_super) {\n  __extends(PeekImplementationAction, _super);\n\n  function PeekImplementationAction() {\n    return _super.call(this, new DefinitionActionConfig(false, true, false), {\n      id: PeekImplementationAction.ID,\n      label: nls.localize('actions.peekImplementation.label', \"Peek Implementation\"),\n      alias: 'Peek Implementation',\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasImplementationProvider, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 2048\n        /* CtrlCmd */\n        | 1024\n        /* Shift */\n        | 70\n        /* F12 */\n        ,\n        weight: 100\n        /* EditorContrib */\n\n      }\n    }) || this;\n  }\n\n  PeekImplementationAction.ID = 'editor.action.peekImplementation';\n  return PeekImplementationAction;\n}(ImplementationAction);\n\nexport { PeekImplementationAction };\n\nvar TypeDefinitionAction =\n/** @class */\nfunction (_super) {\n  __extends(TypeDefinitionAction, _super);\n\n  function TypeDefinitionAction() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TypeDefinitionAction.prototype._getTargetLocationForPosition = function (model, position, token) {\n    return getTypeDefinitionsAtPosition(model, position, token);\n  };\n\n  TypeDefinitionAction.prototype._getNoResultFoundMessage = function (info) {\n    return info && info.word ? nls.localize('goToTypeDefinition.noResultWord', \"No type definition found for '{0}'\", info.word) : nls.localize('goToTypeDefinition.generic.noResults', \"No type definition found\");\n  };\n\n  TypeDefinitionAction.prototype._getMetaTitle = function (model) {\n    return model.references.length > 1 ? nls.localize('meta.typeDefinitions.title', \" – {0} type definitions\", model.references.length) : '';\n  };\n\n  return TypeDefinitionAction;\n}(DefinitionAction);\n\nexport { TypeDefinitionAction };\n\nvar GoToTypeDefinitionAction =\n/** @class */\nfunction (_super) {\n  __extends(GoToTypeDefinitionAction, _super);\n\n  function GoToTypeDefinitionAction() {\n    return _super.call(this, new DefinitionActionConfig(), {\n      id: GoToTypeDefinitionAction.ID,\n      label: nls.localize('actions.goToTypeDefinition.label', \"Go to Type Definition\"),\n      alias: 'Go to Type Definition',\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasTypeDefinitionProvider, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 0,\n        weight: 100\n        /* EditorContrib */\n\n      },\n      menuOpts: {\n        group: 'navigation',\n        order: 1.4\n      }\n    }) || this;\n  }\n\n  GoToTypeDefinitionAction.ID = 'editor.action.goToTypeDefinition';\n  return GoToTypeDefinitionAction;\n}(TypeDefinitionAction);\n\nexport { GoToTypeDefinitionAction };\n\nvar PeekTypeDefinitionAction =\n/** @class */\nfunction (_super) {\n  __extends(PeekTypeDefinitionAction, _super);\n\n  function PeekTypeDefinitionAction() {\n    return _super.call(this, new DefinitionActionConfig(false, true, false), {\n      id: PeekTypeDefinitionAction.ID,\n      label: nls.localize('actions.peekTypeDefinition.label', \"Peek Type Definition\"),\n      alias: 'Peek Type Definition',\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasTypeDefinitionProvider, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 0,\n        weight: 100\n        /* EditorContrib */\n\n      }\n    }) || this;\n  }\n\n  PeekTypeDefinitionAction.ID = 'editor.action.peekTypeDefinition';\n  return PeekTypeDefinitionAction;\n}(TypeDefinitionAction);\n\nexport { PeekTypeDefinitionAction };\nregisterEditorAction(GoToDefinitionAction);\nregisterEditorAction(OpenDefinitionToSideAction);\nregisterEditorAction(PeekDefinitionAction);\nregisterEditorAction(GoToDeclarationAction);\nregisterEditorAction(PeekDeclarationAction);\nregisterEditorAction(GoToImplementationAction);\nregisterEditorAction(PeekImplementationAction);\nregisterEditorAction(GoToTypeDefinitionAction);\nregisterEditorAction(PeekTypeDefinitionAction); // Go to menu\n\nMenuRegistry.appendMenuItem(16\n/* MenubarGoMenu */\n, {\n  group: '4_symbol_nav',\n  command: {\n    id: 'editor.action.goToDeclaration',\n    title: nls.localize({\n      key: 'miGotoDefinition',\n      comment: ['&& denotes a mnemonic']\n    }, \"Go to &&Definition\")\n  },\n  order: 2\n});\nMenuRegistry.appendMenuItem(16\n/* MenubarGoMenu */\n, {\n  group: '4_symbol_nav',\n  command: {\n    id: 'editor.action.goToTypeDefinition',\n    title: nls.localize({\n      key: 'miGotoTypeDefinition',\n      comment: ['&& denotes a mnemonic']\n    }, \"Go to &&Type Definition\")\n  },\n  order: 3\n});\nMenuRegistry.appendMenuItem(16\n/* MenubarGoMenu */\n, {\n  group: '4_symbol_nav',\n  command: {\n    id: 'editor.action.goToImplementation',\n    title: nls.localize({\n      key: 'miGotoImplementation',\n      comment: ['&& denotes a mnemonic']\n    }, \"Go to &&Implementation\")\n  },\n  order: 4\n});","map":null,"metadata":{},"sourceType":"module"}