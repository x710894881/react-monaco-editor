{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './aria.css';\nimport * as nls from '../../../../nls.js';\nimport { isMacintosh } from '../../../common/platform.js';\nimport * as dom from '../../dom.js';\nvar ariaContainer;\nvar alertContainer;\nvar statusContainer;\nexport function setARIAContainer(parent) {\n  ariaContainer = document.createElement('div');\n  ariaContainer.className = 'monaco-aria-container';\n  alertContainer = document.createElement('div');\n  alertContainer.className = 'monaco-alert';\n  alertContainer.setAttribute('role', 'alert');\n  alertContainer.setAttribute('aria-atomic', 'true');\n  ariaContainer.appendChild(alertContainer);\n  statusContainer = document.createElement('div');\n  statusContainer.className = 'monaco-status';\n  statusContainer.setAttribute('role', 'status');\n  statusContainer.setAttribute('aria-atomic', 'true');\n  ariaContainer.appendChild(statusContainer);\n  parent.appendChild(ariaContainer);\n}\n/**\n * Given the provided message, will make sure that it is read as alert to screen readers.\n */\n\nexport function alert(msg, disableRepeat) {\n  insertMessage(alertContainer, msg, disableRepeat);\n}\n/**\n * Given the provided message, will make sure that it is read as status to screen readers.\n */\n\nexport function status(msg, disableRepeat) {\n  if (isMacintosh) {\n    alert(msg, disableRepeat); // VoiceOver does not seem to support status role\n  } else {\n    insertMessage(statusContainer, msg, disableRepeat);\n  }\n}\nvar repeatedTimes = 0;\nvar prevText = undefined;\n\nfunction insertMessage(target, msg, disableRepeat) {\n  if (!ariaContainer) {\n    return;\n  } // If the same message should be inserted that is already present, a screen reader would\n  // not announce this message because it matches the previous one. As a workaround, we\n  // alter the message with the number of occurences unless this is explicitly disabled\n  // via the disableRepeat flag.\n\n\n  if (!disableRepeat) {\n    if (prevText === msg) {\n      repeatedTimes++;\n    } else {\n      prevText = msg;\n      repeatedTimes = 0;\n    }\n\n    switch (repeatedTimes) {\n      case 0:\n        break;\n\n      case 1:\n        msg = nls.localize('repeated', \"{0} (occurred again)\", msg);\n        break;\n\n      default:\n        msg = nls.localize('repeatedNtimes', \"{0} (occurred {1} times)\", msg, repeatedTimes);\n        break;\n    }\n  }\n\n  dom.clearNode(target);\n  target.textContent = msg; // See https://www.paciellogroup.com/blog/2012/06/html5-accessibility-chops-aria-rolealert-browser-support/\n\n  target.style.visibility = 'hidden';\n  target.style.visibility = 'visible';\n}","map":null,"metadata":{},"sourceType":"module"}