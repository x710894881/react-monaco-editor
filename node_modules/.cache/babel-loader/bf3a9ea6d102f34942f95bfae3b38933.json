{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as nls from '../../../nls.js';\nimport { alert } from '../../../base/browser/ui/aria/aria.js';\nimport { EditorAction, registerEditorAction } from '../../browser/editorExtensions.js';\nimport { TabFocus } from '../../common/config/commonEditorConfig.js';\n\nvar ToggleTabFocusModeAction =\n/** @class */\nfunction (_super) {\n  __extends(ToggleTabFocusModeAction, _super);\n\n  function ToggleTabFocusModeAction() {\n    return _super.call(this, {\n      id: ToggleTabFocusModeAction.ID,\n      label: nls.localize({\n        key: 'toggle.tabMovesFocus',\n        comment: ['Turn on/off use of tab key for moving focus around VS Code']\n      }, \"Toggle Tab Key Moves Focus\"),\n      alias: 'Toggle Tab Key Moves Focus',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: null,\n        primary: 2048\n        /* CtrlCmd */\n        | 43\n        /* KEY_M */\n        ,\n        mac: {\n          primary: 256\n          /* WinCtrl */\n          | 1024\n          /* Shift */\n          | 43\n          /* KEY_M */\n\n        },\n        weight: 100\n        /* EditorContrib */\n\n      }\n    }) || this;\n  }\n\n  ToggleTabFocusModeAction.prototype.run = function (accessor, editor) {\n    var oldValue = TabFocus.getTabFocusMode();\n    var newValue = !oldValue;\n    TabFocus.setTabFocusMode(newValue);\n\n    if (newValue) {\n      alert(nls.localize('toggle.tabMovesFocus.on', \"Pressing Tab will now move focus to the next focusable element\"));\n    } else {\n      alert(nls.localize('toggle.tabMovesFocus.off', \"Pressing Tab will now insert the tab character\"));\n    }\n  };\n\n  ToggleTabFocusModeAction.ID = 'editor.action.toggleTabFocusMode';\n  return ToggleTabFocusModeAction;\n}(EditorAction);\n\nexport { ToggleTabFocusModeAction };\nregisterEditorAction(ToggleTabFocusModeAction);","map":null,"metadata":{},"sourceType":"module"}