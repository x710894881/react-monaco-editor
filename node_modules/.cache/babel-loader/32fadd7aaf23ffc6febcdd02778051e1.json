{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function createScopedLineTokens(context, offset) {\n  var tokenCount = context.getCount();\n  var tokenIndex = context.findTokenIndexAtOffset(offset);\n  var desiredLanguageId = context.getLanguageId(tokenIndex);\n  var lastTokenIndex = tokenIndex;\n\n  while (lastTokenIndex + 1 < tokenCount && context.getLanguageId(lastTokenIndex + 1) === desiredLanguageId) {\n    lastTokenIndex++;\n  }\n\n  var firstTokenIndex = tokenIndex;\n\n  while (firstTokenIndex > 0 && context.getLanguageId(firstTokenIndex - 1) === desiredLanguageId) {\n    firstTokenIndex--;\n  }\n\n  return new ScopedLineTokens(context, desiredLanguageId, firstTokenIndex, lastTokenIndex + 1, context.getStartOffset(firstTokenIndex), context.getEndOffset(lastTokenIndex));\n}\n\nvar ScopedLineTokens =\n/** @class */\nfunction () {\n  function ScopedLineTokens(actual, languageId, firstTokenIndex, lastTokenIndex, firstCharOffset, lastCharOffset) {\n    this._actual = actual;\n    this.languageId = languageId;\n    this._firstTokenIndex = firstTokenIndex;\n    this._lastTokenIndex = lastTokenIndex;\n    this.firstCharOffset = firstCharOffset;\n    this._lastCharOffset = lastCharOffset;\n  }\n\n  ScopedLineTokens.prototype.getLineContent = function () {\n    var actualLineContent = this._actual.getLineContent();\n\n    return actualLineContent.substring(this.firstCharOffset, this._lastCharOffset);\n  };\n\n  ScopedLineTokens.prototype.getTokenCount = function () {\n    return this._lastTokenIndex - this._firstTokenIndex;\n  };\n\n  ScopedLineTokens.prototype.findTokenIndexAtOffset = function (offset) {\n    return this._actual.findTokenIndexAtOffset(offset + this.firstCharOffset) - this._firstTokenIndex;\n  };\n\n  ScopedLineTokens.prototype.getStandardTokenType = function (tokenIndex) {\n    return this._actual.getStandardTokenType(tokenIndex + this._firstTokenIndex);\n  };\n\n  return ScopedLineTokens;\n}();\n\nexport { ScopedLineTokens };\nexport function ignoreBracketsInToken(standardTokenType) {\n  return (standardTokenType & 7\n  /* value */\n  ) !== 0;\n}","map":null,"metadata":{},"sourceType":"module"}