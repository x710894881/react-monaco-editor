{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { localize } from '../../../nls.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { basename } from '../../../base/common/resources.js';\nimport { dispose, DisposableStore } from '../../../base/common/lifecycle.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { defaultGenerator } from '../../../base/common/idGenerator.js';\nimport { Range } from '../../common/core/range.js';\n\nvar OneReference =\n/** @class */\nfunction () {\n  function OneReference(parent, _range, isProviderFirst) {\n    this.parent = parent;\n    this._range = _range;\n    this.isProviderFirst = isProviderFirst;\n    this._onRefChanged = new Emitter();\n    this.onRefChanged = this._onRefChanged.event;\n    this.id = defaultGenerator.nextId();\n  }\n\n  Object.defineProperty(OneReference.prototype, \"uri\", {\n    get: function () {\n      return this.parent.uri;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OneReference.prototype, \"range\", {\n    get: function () {\n      return this._range;\n    },\n    set: function (value) {\n      this._range = value;\n\n      this._onRefChanged.fire(this);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  OneReference.prototype.getAriaMessage = function () {\n    return localize('aria.oneReference', \"symbol in {0} on line {1} at column {2}\", basename(this.uri), this.range.startLineNumber, this.range.startColumn);\n  };\n\n  return OneReference;\n}();\n\nexport { OneReference };\n\nvar FilePreview =\n/** @class */\nfunction () {\n  function FilePreview(_modelReference) {\n    this._modelReference = _modelReference;\n  }\n\n  FilePreview.prototype.dispose = function () {\n    dispose(this._modelReference);\n  };\n\n  FilePreview.prototype.preview = function (range, n) {\n    if (n === void 0) {\n      n = 8;\n    }\n\n    var model = this._modelReference.object.textEditorModel;\n\n    if (!model) {\n      return undefined;\n    }\n\n    var startLineNumber = range.startLineNumber,\n        startColumn = range.startColumn,\n        endLineNumber = range.endLineNumber,\n        endColumn = range.endColumn;\n    var word = model.getWordUntilPosition({\n      lineNumber: startLineNumber,\n      column: startColumn - n\n    });\n    var beforeRange = new Range(startLineNumber, word.startColumn, startLineNumber, startColumn);\n    var afterRange = new Range(endLineNumber, endColumn, endLineNumber, Number.MAX_VALUE);\n    var before = model.getValueInRange(beforeRange).replace(/^\\s+/, strings.empty);\n    var inside = model.getValueInRange(range);\n    var after = model.getValueInRange(afterRange).replace(/\\s+$/, strings.empty);\n    return {\n      value: before + inside + after,\n      highlight: {\n        start: before.length,\n        end: before.length + inside.length\n      }\n    };\n  };\n\n  return FilePreview;\n}();\n\nexport { FilePreview };\n\nvar FileReferences =\n/** @class */\nfunction () {\n  function FileReferences(_parent, _uri) {\n    this._parent = _parent;\n    this._uri = _uri;\n    this._children = [];\n  }\n\n  Object.defineProperty(FileReferences.prototype, \"id\", {\n    get: function () {\n      return this._uri.toString();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FileReferences.prototype, \"parent\", {\n    get: function () {\n      return this._parent;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FileReferences.prototype, \"children\", {\n    get: function () {\n      return this._children;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FileReferences.prototype, \"uri\", {\n    get: function () {\n      return this._uri;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FileReferences.prototype, \"preview\", {\n    get: function () {\n      return this._preview;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FileReferences.prototype, \"failure\", {\n    get: function () {\n      return this._loadFailure;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  FileReferences.prototype.getAriaMessage = function () {\n    var len = this.children.length;\n\n    if (len === 1) {\n      return localize('aria.fileReferences.1', \"1 symbol in {0}, full path {1}\", basename(this.uri), this.uri.fsPath);\n    } else {\n      return localize('aria.fileReferences.N', \"{0} symbols in {1}, full path {2}\", len, basename(this.uri), this.uri.fsPath);\n    }\n  };\n\n  FileReferences.prototype.resolve = function (textModelResolverService) {\n    var _this = this;\n\n    if (this._resolved) {\n      return Promise.resolve(this);\n    }\n\n    return Promise.resolve(textModelResolverService.createModelReference(this._uri).then(function (modelReference) {\n      var model = modelReference.object;\n\n      if (!model) {\n        modelReference.dispose();\n        throw new Error();\n      }\n\n      _this._preview = new FilePreview(modelReference);\n      _this._resolved = true;\n      return _this;\n    }, function (err) {\n      // something wrong here\n      _this._children = [];\n      _this._resolved = true;\n      _this._loadFailure = err;\n      return _this;\n    }));\n  };\n\n  FileReferences.prototype.dispose = function () {\n    if (this._preview) {\n      this._preview.dispose();\n\n      this._preview = undefined;\n    }\n  };\n\n  return FileReferences;\n}();\n\nexport { FileReferences };\n\nvar ReferencesModel =\n/** @class */\nfunction () {\n  function ReferencesModel(references) {\n    var _this = this;\n\n    this._disposables = new DisposableStore();\n    this.groups = [];\n    this.references = [];\n    this._onDidChangeReferenceRange = new Emitter();\n    this.onDidChangeReferenceRange = this._onDidChangeReferenceRange.event; // grouping and sorting\n\n    var providersFirst = references[0];\n    references.sort(ReferencesModel._compareReferences);\n    var current;\n\n    for (var _i = 0, references_1 = references; _i < references_1.length; _i++) {\n      var ref = references_1[_i];\n\n      if (!current || current.uri.toString() !== ref.uri.toString()) {\n        // new group\n        current = new FileReferences(this, ref.uri);\n        this.groups.push(current);\n      } // append, check for equality first!\n\n\n      if (current.children.length === 0 || !Range.equalsRange(ref.range, current.children[current.children.length - 1].range)) {\n        var oneRef = new OneReference(current, ref.targetSelectionRange || ref.range, providersFirst === ref);\n\n        this._disposables.add(oneRef.onRefChanged(function (e) {\n          return _this._onDidChangeReferenceRange.fire(e);\n        }));\n\n        this.references.push(oneRef);\n        current.children.push(oneRef);\n      }\n    }\n  }\n\n  Object.defineProperty(ReferencesModel.prototype, \"empty\", {\n    get: function () {\n      return this.groups.length === 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ReferencesModel.prototype.getAriaMessage = function () {\n    if (this.empty) {\n      return localize('aria.result.0', \"No results found\");\n    } else if (this.references.length === 1) {\n      return localize('aria.result.1', \"Found 1 symbol in {0}\", this.references[0].uri.fsPath);\n    } else if (this.groups.length === 1) {\n      return localize('aria.result.n1', \"Found {0} symbols in {1}\", this.references.length, this.groups[0].uri.fsPath);\n    } else {\n      return localize('aria.result.nm', \"Found {0} symbols in {1} files\", this.references.length, this.groups.length);\n    }\n  };\n\n  ReferencesModel.prototype.nextOrPreviousReference = function (reference, next) {\n    var parent = reference.parent;\n    var idx = parent.children.indexOf(reference);\n    var childCount = parent.children.length;\n    var groupCount = parent.parent.groups.length;\n\n    if (groupCount === 1 || next && idx + 1 < childCount || !next && idx > 0) {\n      // cycling within one file\n      if (next) {\n        idx = (idx + 1) % childCount;\n      } else {\n        idx = (idx + childCount - 1) % childCount;\n      }\n\n      return parent.children[idx];\n    }\n\n    idx = parent.parent.groups.indexOf(parent);\n\n    if (next) {\n      idx = (idx + 1) % groupCount;\n      return parent.parent.groups[idx].children[0];\n    } else {\n      idx = (idx + groupCount - 1) % groupCount;\n      return parent.parent.groups[idx].children[parent.parent.groups[idx].children.length - 1];\n    }\n  };\n\n  ReferencesModel.prototype.nearestReference = function (resource, position) {\n    var nearest = this.references.map(function (ref, idx) {\n      return {\n        idx: idx,\n        prefixLen: strings.commonPrefixLength(ref.uri.toString(), resource.toString()),\n        offsetDist: Math.abs(ref.range.startLineNumber - position.lineNumber) * 100 + Math.abs(ref.range.startColumn - position.column)\n      };\n    }).sort(function (a, b) {\n      if (a.prefixLen > b.prefixLen) {\n        return -1;\n      } else if (a.prefixLen < b.prefixLen) {\n        return 1;\n      } else if (a.offsetDist < b.offsetDist) {\n        return -1;\n      } else if (a.offsetDist > b.offsetDist) {\n        return 1;\n      } else {\n        return 0;\n      }\n    })[0];\n\n    if (nearest) {\n      return this.references[nearest.idx];\n    }\n\n    return undefined;\n  };\n\n  ReferencesModel.prototype.firstReference = function () {\n    for (var _i = 0, _a = this.references; _i < _a.length; _i++) {\n      var ref = _a[_i];\n\n      if (ref.isProviderFirst) {\n        return ref;\n      }\n    }\n\n    return this.references[0];\n  };\n\n  ReferencesModel.prototype.dispose = function () {\n    dispose(this.groups);\n\n    this._disposables.dispose();\n\n    this.groups.length = 0;\n  };\n\n  ReferencesModel._compareReferences = function (a, b) {\n    var auri = a.uri.toString();\n    var buri = b.uri.toString();\n\n    if (auri < buri) {\n      return -1;\n    } else if (auri > buri) {\n      return 1;\n    } else {\n      return Range.compareRangesUsingStarts(a.range, b.range);\n    }\n  };\n\n  return ReferencesModel;\n}();\n\nexport { ReferencesModel };","map":null,"metadata":{},"sourceType":"module"}