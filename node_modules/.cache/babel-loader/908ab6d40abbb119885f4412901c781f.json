{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as browser from './browser.js';\nimport { domEvent } from './event.js';\nimport { StandardKeyboardEvent } from './keyboardEvent.js';\nimport { StandardMouseEvent } from './mouseEvent.js';\nimport { TimeoutTimer } from '../common/async.js';\nimport { onUnexpectedError } from '../common/errors.js';\nimport { Emitter } from '../common/event.js';\nimport { Disposable, toDisposable } from '../common/lifecycle.js';\nimport * as platform from '../common/platform.js';\nimport { coalesce } from '../common/arrays.js';\nimport { Schemas, RemoteAuthorities } from '../common/network.js';\nexport function clearNode(node) {\n  while (node.firstChild) {\n    node.removeChild(node.firstChild);\n  }\n}\nexport function removeNode(node) {\n  if (node.parentNode) {\n    node.parentNode.removeChild(node);\n  }\n}\nexport function isInDOM(node) {\n  while (node) {\n    if (node === document.body) {\n      return true;\n    }\n\n    node = node.parentNode || node.host;\n  }\n\n  return false;\n}\n\nvar _manualClassList = new (\n/** @class */\nfunction () {\n  function class_1() {\n    this._lastStart = -1;\n    this._lastEnd = -1;\n  }\n\n  class_1.prototype._findClassName = function (node, className) {\n    var classes = node.className;\n\n    if (!classes) {\n      this._lastStart = -1;\n      return;\n    }\n\n    className = className.trim();\n    var classesLen = classes.length,\n        classLen = className.length;\n\n    if (classLen === 0) {\n      this._lastStart = -1;\n      return;\n    }\n\n    if (classesLen < classLen) {\n      this._lastStart = -1;\n      return;\n    }\n\n    if (classes === className) {\n      this._lastStart = 0;\n      this._lastEnd = classesLen;\n      return;\n    }\n\n    var idx = -1,\n        idxEnd;\n\n    while ((idx = classes.indexOf(className, idx + 1)) >= 0) {\n      idxEnd = idx + classLen; // a class that is followed by another class\n\n      if ((idx === 0 || classes.charCodeAt(idx - 1) === 32\n      /* Space */\n      ) && classes.charCodeAt(idxEnd) === 32\n      /* Space */\n      ) {\n          this._lastStart = idx;\n          this._lastEnd = idxEnd + 1;\n          return;\n        } // last class\n\n\n      if (idx > 0 && classes.charCodeAt(idx - 1) === 32\n      /* Space */\n      && idxEnd === classesLen) {\n        this._lastStart = idx - 1;\n        this._lastEnd = idxEnd;\n        return;\n      } // equal - duplicate of cmp above\n\n\n      if (idx === 0 && idxEnd === classesLen) {\n        this._lastStart = 0;\n        this._lastEnd = idxEnd;\n        return;\n      }\n    }\n\n    this._lastStart = -1;\n  };\n\n  class_1.prototype.hasClass = function (node, className) {\n    this._findClassName(node, className);\n\n    return this._lastStart !== -1;\n  };\n\n  class_1.prototype.addClasses = function (node) {\n    var _this = this;\n\n    var classNames = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      classNames[_i - 1] = arguments[_i];\n    }\n\n    classNames.forEach(function (nameValue) {\n      return nameValue.split(' ').forEach(function (name) {\n        return _this.addClass(node, name);\n      });\n    });\n  };\n\n  class_1.prototype.addClass = function (node, className) {\n    if (!node.className) {\n      // doesn't have it for sure\n      node.className = className;\n    } else {\n      this._findClassName(node, className); // see if it's already there\n\n\n      if (this._lastStart === -1) {\n        node.className = node.className + ' ' + className;\n      }\n    }\n  };\n\n  class_1.prototype.removeClass = function (node, className) {\n    this._findClassName(node, className);\n\n    if (this._lastStart === -1) {\n      return; // Prevent styles invalidation if not necessary\n    } else {\n      node.className = node.className.substring(0, this._lastStart) + node.className.substring(this._lastEnd);\n    }\n  };\n\n  class_1.prototype.removeClasses = function (node) {\n    var _this = this;\n\n    var classNames = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      classNames[_i - 1] = arguments[_i];\n    }\n\n    classNames.forEach(function (nameValue) {\n      return nameValue.split(' ').forEach(function (name) {\n        return _this.removeClass(node, name);\n      });\n    });\n  };\n\n  class_1.prototype.toggleClass = function (node, className, shouldHaveIt) {\n    this._findClassName(node, className);\n\n    if (this._lastStart !== -1 && (shouldHaveIt === undefined || !shouldHaveIt)) {\n      this.removeClass(node, className);\n    }\n\n    if (this._lastStart === -1 && (shouldHaveIt === undefined || shouldHaveIt)) {\n      this.addClass(node, className);\n    }\n  };\n\n  return class_1;\n}())();\n\nvar _nativeClassList = new (\n/** @class */\nfunction () {\n  function class_2() {}\n\n  class_2.prototype.hasClass = function (node, className) {\n    return Boolean(className) && node.classList && node.classList.contains(className);\n  };\n\n  class_2.prototype.addClasses = function (node) {\n    var _this = this;\n\n    var classNames = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      classNames[_i - 1] = arguments[_i];\n    }\n\n    classNames.forEach(function (nameValue) {\n      return nameValue.split(' ').forEach(function (name) {\n        return _this.addClass(node, name);\n      });\n    });\n  };\n\n  class_2.prototype.addClass = function (node, className) {\n    if (className && node.classList) {\n      node.classList.add(className);\n    }\n  };\n\n  class_2.prototype.removeClass = function (node, className) {\n    if (className && node.classList) {\n      node.classList.remove(className);\n    }\n  };\n\n  class_2.prototype.removeClasses = function (node) {\n    var _this = this;\n\n    var classNames = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      classNames[_i - 1] = arguments[_i];\n    }\n\n    classNames.forEach(function (nameValue) {\n      return nameValue.split(' ').forEach(function (name) {\n        return _this.removeClass(node, name);\n      });\n    });\n  };\n\n  class_2.prototype.toggleClass = function (node, className, shouldHaveIt) {\n    if (node.classList) {\n      node.classList.toggle(className, shouldHaveIt);\n    }\n  };\n\n  return class_2;\n}())(); // In IE11 there is only partial support for `classList` which makes us keep our\n// custom implementation. Otherwise use the native implementation, see: http://caniuse.com/#search=classlist\n\n\nvar _classList = browser.isIE ? _manualClassList : _nativeClassList;\n\nexport var hasClass = _classList.hasClass.bind(_classList);\nexport var addClass = _classList.addClass.bind(_classList);\nexport var addClasses = _classList.addClasses.bind(_classList);\nexport var removeClass = _classList.removeClass.bind(_classList);\nexport var removeClasses = _classList.removeClasses.bind(_classList);\nexport var toggleClass = _classList.toggleClass.bind(_classList);\n\nvar DomListener =\n/** @class */\nfunction () {\n  function DomListener(node, type, handler, useCapture) {\n    this._node = node;\n    this._type = type;\n    this._handler = handler;\n    this._useCapture = useCapture || false;\n\n    this._node.addEventListener(this._type, this._handler, this._useCapture);\n  }\n\n  DomListener.prototype.dispose = function () {\n    if (!this._handler) {\n      // Already disposed\n      return;\n    }\n\n    this._node.removeEventListener(this._type, this._handler, this._useCapture); // Prevent leakers from holding on to the dom or handler func\n\n\n    this._node = null;\n    this._handler = null;\n  };\n\n  return DomListener;\n}();\n\nexport function addDisposableListener(node, type, handler, useCapture) {\n  return new DomListener(node, type, handler, useCapture);\n}\n\nfunction _wrapAsStandardMouseEvent(handler) {\n  return function (e) {\n    return handler(new StandardMouseEvent(e));\n  };\n}\n\nfunction _wrapAsStandardKeyboardEvent(handler) {\n  return function (e) {\n    return handler(new StandardKeyboardEvent(e));\n  };\n}\n\nexport var addStandardDisposableListener = function addStandardDisposableListener(node, type, handler, useCapture) {\n  var wrapHandler = handler;\n\n  if (type === 'click' || type === 'mousedown') {\n    wrapHandler = _wrapAsStandardMouseEvent(handler);\n  } else if (type === 'keydown' || type === 'keypress' || type === 'keyup') {\n    wrapHandler = _wrapAsStandardKeyboardEvent(handler);\n  }\n\n  return addDisposableListener(node, type, wrapHandler, useCapture);\n};\nexport function addDisposableNonBubblingMouseOutListener(node, handler) {\n  return addDisposableListener(node, 'mouseout', function (e) {\n    // Mouse out bubbles, so this is an attempt to ignore faux mouse outs coming from children elements\n    var toElement = e.relatedTarget || e.target;\n\n    while (toElement && toElement !== node) {\n      toElement = toElement.parentNode;\n    }\n\n    if (toElement === node) {\n      return;\n    }\n\n    handler(e);\n  });\n}\nvar _animationFrame = null;\n\nfunction doRequestAnimationFrame(callback) {\n  if (!_animationFrame) {\n    var emulatedRequestAnimationFrame = function (callback) {\n      return setTimeout(function () {\n        return callback(new Date().getTime());\n      }, 0);\n    };\n\n    _animationFrame = self.requestAnimationFrame || self.msRequestAnimationFrame || self.webkitRequestAnimationFrame || self.mozRequestAnimationFrame || self.oRequestAnimationFrame || emulatedRequestAnimationFrame;\n  }\n\n  return _animationFrame.call(self, callback);\n}\n/**\n * Schedule a callback to be run at the next animation frame.\n * This allows multiple parties to register callbacks that should run at the next animation frame.\n * If currently in an animation frame, `runner` will be executed immediately.\n * @return token that can be used to cancel the scheduled runner (only if `runner` was not executed immediately).\n */\n\n\nexport var runAtThisOrScheduleAtNextAnimationFrame;\n/**\n * Schedule a callback to be run at the next animation frame.\n * This allows multiple parties to register callbacks that should run at the next animation frame.\n * If currently in an animation frame, `runner` will be executed at the next animation frame.\n * @return token that can be used to cancel the scheduled runner.\n */\n\nexport var scheduleAtNextAnimationFrame;\n\nvar AnimationFrameQueueItem =\n/** @class */\nfunction () {\n  function AnimationFrameQueueItem(runner, priority) {\n    if (priority === void 0) {\n      priority = 0;\n    }\n\n    this._runner = runner;\n    this.priority = priority;\n    this._canceled = false;\n  }\n\n  AnimationFrameQueueItem.prototype.dispose = function () {\n    this._canceled = true;\n  };\n\n  AnimationFrameQueueItem.prototype.execute = function () {\n    if (this._canceled) {\n      return;\n    }\n\n    try {\n      this._runner();\n    } catch (e) {\n      onUnexpectedError(e);\n    }\n  }; // Sort by priority (largest to lowest)\n\n\n  AnimationFrameQueueItem.sort = function (a, b) {\n    return b.priority - a.priority;\n  };\n\n  return AnimationFrameQueueItem;\n}();\n\n(function () {\n  /**\n   * The runners scheduled at the next animation frame\n   */\n  var NEXT_QUEUE = [];\n  /**\n   * The runners scheduled at the current animation frame\n   */\n\n  var CURRENT_QUEUE = null;\n  /**\n   * A flag to keep track if the native requestAnimationFrame was already called\n   */\n\n  var animFrameRequested = false;\n  /**\n   * A flag to indicate if currently handling a native requestAnimationFrame callback\n   */\n\n  var inAnimationFrameRunner = false;\n\n  var animationFrameRunner = function () {\n    animFrameRequested = false;\n    CURRENT_QUEUE = NEXT_QUEUE;\n    NEXT_QUEUE = [];\n    inAnimationFrameRunner = true;\n\n    while (CURRENT_QUEUE.length > 0) {\n      CURRENT_QUEUE.sort(AnimationFrameQueueItem.sort);\n      var top_1 = CURRENT_QUEUE.shift();\n      top_1.execute();\n    }\n\n    inAnimationFrameRunner = false;\n  };\n\n  scheduleAtNextAnimationFrame = function (runner, priority) {\n    if (priority === void 0) {\n      priority = 0;\n    }\n\n    var item = new AnimationFrameQueueItem(runner, priority);\n    NEXT_QUEUE.push(item);\n\n    if (!animFrameRequested) {\n      animFrameRequested = true;\n      doRequestAnimationFrame(animationFrameRunner);\n    }\n\n    return item;\n  };\n\n  runAtThisOrScheduleAtNextAnimationFrame = function (runner, priority) {\n    if (inAnimationFrameRunner) {\n      var item = new AnimationFrameQueueItem(runner, priority);\n      CURRENT_QUEUE.push(item);\n      return item;\n    } else {\n      return scheduleAtNextAnimationFrame(runner, priority);\n    }\n  };\n})();\n\nvar MINIMUM_TIME_MS = 16;\n\nvar DEFAULT_EVENT_MERGER = function (lastEvent, currentEvent) {\n  return currentEvent;\n};\n\nvar TimeoutThrottledDomListener =\n/** @class */\nfunction (_super) {\n  __extends(TimeoutThrottledDomListener, _super);\n\n  function TimeoutThrottledDomListener(node, type, handler, eventMerger, minimumTimeMs) {\n    if (eventMerger === void 0) {\n      eventMerger = DEFAULT_EVENT_MERGER;\n    }\n\n    if (minimumTimeMs === void 0) {\n      minimumTimeMs = MINIMUM_TIME_MS;\n    }\n\n    var _this = _super.call(this) || this;\n\n    var lastEvent = null;\n    var lastHandlerTime = 0;\n\n    var timeout = _this._register(new TimeoutTimer());\n\n    var invokeHandler = function () {\n      lastHandlerTime = new Date().getTime();\n      handler(lastEvent);\n      lastEvent = null;\n    };\n\n    _this._register(addDisposableListener(node, type, function (e) {\n      lastEvent = eventMerger(lastEvent, e);\n      var elapsedTime = new Date().getTime() - lastHandlerTime;\n\n      if (elapsedTime >= minimumTimeMs) {\n        timeout.cancel();\n        invokeHandler();\n      } else {\n        timeout.setIfNotSet(invokeHandler, minimumTimeMs - elapsedTime);\n      }\n    }));\n\n    return _this;\n  }\n\n  return TimeoutThrottledDomListener;\n}(Disposable);\n\nexport function addDisposableThrottledListener(node, type, handler, eventMerger, minimumTimeMs) {\n  return new TimeoutThrottledDomListener(node, type, handler, eventMerger, minimumTimeMs);\n}\nexport function getComputedStyle(el) {\n  return document.defaultView.getComputedStyle(el, null);\n}\n\nvar SizeUtils =\n/** @class */\nfunction () {\n  function SizeUtils() {} // Adapted from WinJS\n  // Converts a CSS positioning string for the specified element to pixels.\n\n\n  SizeUtils.convertToPixels = function (element, value) {\n    return parseFloat(value) || 0;\n  };\n\n  SizeUtils.getDimension = function (element, cssPropertyName, jsPropertyName) {\n    var computedStyle = getComputedStyle(element);\n    var value = '0';\n\n    if (computedStyle) {\n      if (computedStyle.getPropertyValue) {\n        value = computedStyle.getPropertyValue(cssPropertyName);\n      } else {\n        // IE8\n        value = computedStyle.getAttribute(jsPropertyName);\n      }\n    }\n\n    return SizeUtils.convertToPixels(element, value);\n  };\n\n  SizeUtils.getBorderLeftWidth = function (element) {\n    return SizeUtils.getDimension(element, 'border-left-width', 'borderLeftWidth');\n  };\n\n  SizeUtils.getBorderRightWidth = function (element) {\n    return SizeUtils.getDimension(element, 'border-right-width', 'borderRightWidth');\n  };\n\n  SizeUtils.getBorderTopWidth = function (element) {\n    return SizeUtils.getDimension(element, 'border-top-width', 'borderTopWidth');\n  };\n\n  SizeUtils.getBorderBottomWidth = function (element) {\n    return SizeUtils.getDimension(element, 'border-bottom-width', 'borderBottomWidth');\n  };\n\n  SizeUtils.getPaddingLeft = function (element) {\n    return SizeUtils.getDimension(element, 'padding-left', 'paddingLeft');\n  };\n\n  SizeUtils.getPaddingRight = function (element) {\n    return SizeUtils.getDimension(element, 'padding-right', 'paddingRight');\n  };\n\n  SizeUtils.getPaddingTop = function (element) {\n    return SizeUtils.getDimension(element, 'padding-top', 'paddingTop');\n  };\n\n  SizeUtils.getPaddingBottom = function (element) {\n    return SizeUtils.getDimension(element, 'padding-bottom', 'paddingBottom');\n  };\n\n  SizeUtils.getMarginLeft = function (element) {\n    return SizeUtils.getDimension(element, 'margin-left', 'marginLeft');\n  };\n\n  SizeUtils.getMarginTop = function (element) {\n    return SizeUtils.getDimension(element, 'margin-top', 'marginTop');\n  };\n\n  SizeUtils.getMarginRight = function (element) {\n    return SizeUtils.getDimension(element, 'margin-right', 'marginRight');\n  };\n\n  SizeUtils.getMarginBottom = function (element) {\n    return SizeUtils.getDimension(element, 'margin-bottom', 'marginBottom');\n  };\n\n  return SizeUtils;\n}(); // ----------------------------------------------------------------------------------------\n// Position & Dimension\n\n\nvar Dimension =\n/** @class */\nfunction () {\n  function Dimension(width, height) {\n    this.width = width;\n    this.height = height;\n  }\n\n  return Dimension;\n}();\n\nexport { Dimension };\nexport function getTopLeftOffset(element) {\n  // Adapted from WinJS.Utilities.getPosition\n  // and added borders to the mix\n  var offsetParent = element.offsetParent,\n      top = element.offsetTop,\n      left = element.offsetLeft;\n\n  while ((element = element.parentNode) !== null && element !== document.body && element !== document.documentElement) {\n    top -= element.scrollTop;\n    var c = getComputedStyle(element);\n\n    if (c) {\n      left -= c.direction !== 'rtl' ? element.scrollLeft : -element.scrollLeft;\n    }\n\n    if (element === offsetParent) {\n      left += SizeUtils.getBorderLeftWidth(element);\n      top += SizeUtils.getBorderTopWidth(element);\n      top += element.offsetTop;\n      left += element.offsetLeft;\n      offsetParent = element.offsetParent;\n    }\n  }\n\n  return {\n    left: left,\n    top: top\n  };\n}\n/**\n * Returns the position of a dom node relative to the entire page.\n */\n\nexport function getDomNodePagePosition(domNode) {\n  var bb = domNode.getBoundingClientRect();\n  return {\n    left: bb.left + StandardWindow.scrollX,\n    top: bb.top + StandardWindow.scrollY,\n    width: bb.width,\n    height: bb.height\n  };\n}\nexport var StandardWindow = new (\n/** @class */\nfunction () {\n  function class_3() {}\n\n  Object.defineProperty(class_3.prototype, \"scrollX\", {\n    get: function () {\n      if (typeof window.scrollX === 'number') {\n        // modern browsers\n        return window.scrollX;\n      } else {\n        return document.body.scrollLeft + document.documentElement.scrollLeft;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(class_3.prototype, \"scrollY\", {\n    get: function () {\n      if (typeof window.scrollY === 'number') {\n        // modern browsers\n        return window.scrollY;\n      } else {\n        return document.body.scrollTop + document.documentElement.scrollTop;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return class_3;\n}())(); // Adapted from WinJS\n// Gets the width of the element, including margins.\n\nexport function getTotalWidth(element) {\n  var margin = SizeUtils.getMarginLeft(element) + SizeUtils.getMarginRight(element);\n  return element.offsetWidth + margin;\n}\nexport function getContentWidth(element) {\n  var border = SizeUtils.getBorderLeftWidth(element) + SizeUtils.getBorderRightWidth(element);\n  var padding = SizeUtils.getPaddingLeft(element) + SizeUtils.getPaddingRight(element);\n  return element.offsetWidth - border - padding;\n} // Adapted from WinJS\n// Gets the height of the content of the specified element. The content height does not include borders or padding.\n\nexport function getContentHeight(element) {\n  var border = SizeUtils.getBorderTopWidth(element) + SizeUtils.getBorderBottomWidth(element);\n  var padding = SizeUtils.getPaddingTop(element) + SizeUtils.getPaddingBottom(element);\n  return element.offsetHeight - border - padding;\n} // Adapted from WinJS\n// Gets the height of the element, including its margins.\n\nexport function getTotalHeight(element) {\n  var margin = SizeUtils.getMarginTop(element) + SizeUtils.getMarginBottom(element);\n  return element.offsetHeight + margin;\n} // ----------------------------------------------------------------------------------------\n\nexport function isAncestor(testChild, testAncestor) {\n  while (testChild) {\n    if (testChild === testAncestor) {\n      return true;\n    }\n\n    testChild = testChild.parentNode;\n  }\n\n  return false;\n}\nexport function findParentWithClass(node, clazz, stopAtClazzOrNode) {\n  while (node) {\n    if (hasClass(node, clazz)) {\n      return node;\n    }\n\n    if (stopAtClazzOrNode) {\n      if (typeof stopAtClazzOrNode === 'string') {\n        if (hasClass(node, stopAtClazzOrNode)) {\n          return null;\n        }\n      } else {\n        if (node === stopAtClazzOrNode) {\n          return null;\n        }\n      }\n    }\n\n    node = node.parentNode;\n  }\n\n  return null;\n}\nexport function createStyleSheet(container) {\n  if (container === void 0) {\n    container = document.getElementsByTagName('head')[0];\n  }\n\n  var style = document.createElement('style');\n  style.type = 'text/css';\n  style.media = 'screen';\n  container.appendChild(style);\n  return style;\n}\nvar _sharedStyleSheet = null;\n\nfunction getSharedStyleSheet() {\n  if (!_sharedStyleSheet) {\n    _sharedStyleSheet = createStyleSheet();\n  }\n\n  return _sharedStyleSheet;\n}\n\nfunction getDynamicStyleSheetRules(style) {\n  if (style && style.sheet && style.sheet.rules) {\n    // Chrome, IE\n    return style.sheet.rules;\n  }\n\n  if (style && style.sheet && style.sheet.cssRules) {\n    // FF\n    return style.sheet.cssRules;\n  }\n\n  return [];\n}\n\nexport function createCSSRule(selector, cssText, style) {\n  if (style === void 0) {\n    style = getSharedStyleSheet();\n  }\n\n  if (!style || !cssText) {\n    return;\n  }\n\n  style.sheet.insertRule(selector + '{' + cssText + '}', 0);\n}\nexport function removeCSSRulesContainingSelector(ruleName, style) {\n  if (style === void 0) {\n    style = getSharedStyleSheet();\n  }\n\n  if (!style) {\n    return;\n  }\n\n  var rules = getDynamicStyleSheetRules(style);\n  var toDelete = [];\n\n  for (var i = 0; i < rules.length; i++) {\n    var rule = rules[i];\n\n    if (rule.selectorText.indexOf(ruleName) !== -1) {\n      toDelete.push(i);\n    }\n  }\n\n  for (var i = toDelete.length - 1; i >= 0; i--) {\n    style.sheet.deleteRule(toDelete[i]);\n  }\n}\nexport function isHTMLElement(o) {\n  if (typeof HTMLElement === 'object') {\n    return o instanceof HTMLElement;\n  }\n\n  return o && typeof o === 'object' && o.nodeType === 1 && typeof o.nodeName === 'string';\n}\nexport var EventType = {\n  // Mouse\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  MOUSE_UP: 'mouseup',\n  MOUSE_DOWN: 'mousedown',\n  MOUSE_OVER: 'mouseover',\n  MOUSE_MOVE: 'mousemove',\n  MOUSE_OUT: 'mouseout',\n  MOUSE_ENTER: 'mouseenter',\n  MOUSE_LEAVE: 'mouseleave',\n  CONTEXT_MENU: 'contextmenu',\n  WHEEL: 'wheel',\n  // Keyboard\n  KEY_DOWN: 'keydown',\n  KEY_PRESS: 'keypress',\n  KEY_UP: 'keyup',\n  // HTML Document\n  LOAD: 'load',\n  BEFORE_UNLOAD: 'beforeunload',\n  UNLOAD: 'unload',\n  ABORT: 'abort',\n  ERROR: 'error',\n  RESIZE: 'resize',\n  SCROLL: 'scroll',\n  FULLSCREEN_CHANGE: 'fullscreenchange',\n  WK_FULLSCREEN_CHANGE: 'webkitfullscreenchange',\n  // Form\n  SELECT: 'select',\n  CHANGE: 'change',\n  SUBMIT: 'submit',\n  RESET: 'reset',\n  FOCUS: 'focus',\n  FOCUS_IN: 'focusin',\n  FOCUS_OUT: 'focusout',\n  BLUR: 'blur',\n  INPUT: 'input',\n  // Local Storage\n  STORAGE: 'storage',\n  // Drag\n  DRAG_START: 'dragstart',\n  DRAG: 'drag',\n  DRAG_ENTER: 'dragenter',\n  DRAG_LEAVE: 'dragleave',\n  DRAG_OVER: 'dragover',\n  DROP: 'drop',\n  DRAG_END: 'dragend',\n  // Animation\n  ANIMATION_START: browser.isWebKit ? 'webkitAnimationStart' : 'animationstart',\n  ANIMATION_END: browser.isWebKit ? 'webkitAnimationEnd' : 'animationend',\n  ANIMATION_ITERATION: browser.isWebKit ? 'webkitAnimationIteration' : 'animationiteration'\n};\nexport var EventHelper = {\n  stop: function (e, cancelBubble) {\n    if (e.preventDefault) {\n      e.preventDefault();\n    } else {\n      // IE8\n      e.returnValue = false;\n    }\n\n    if (cancelBubble) {\n      if (e.stopPropagation) {\n        e.stopPropagation();\n      } else {\n        // IE8\n        e.cancelBubble = true;\n      }\n    }\n  }\n};\nexport function saveParentsScrollTop(node) {\n  var r = [];\n\n  for (var i = 0; node && node.nodeType === node.ELEMENT_NODE; i++) {\n    r[i] = node.scrollTop;\n    node = node.parentNode;\n  }\n\n  return r;\n}\nexport function restoreParentsScrollTop(node, state) {\n  for (var i = 0; node && node.nodeType === node.ELEMENT_NODE; i++) {\n    if (node.scrollTop !== state[i]) {\n      node.scrollTop = state[i];\n    }\n\n    node = node.parentNode;\n  }\n}\n\nvar FocusTracker =\n/** @class */\nfunction (_super) {\n  __extends(FocusTracker, _super);\n\n  function FocusTracker(element) {\n    var _this = _super.call(this) || this;\n\n    _this._onDidFocus = _this._register(new Emitter());\n    _this.onDidFocus = _this._onDidFocus.event;\n    _this._onDidBlur = _this._register(new Emitter());\n    _this.onDidBlur = _this._onDidBlur.event;\n    var hasFocus = isAncestor(document.activeElement, element);\n    var loosingFocus = false;\n\n    var onFocus = function () {\n      loosingFocus = false;\n\n      if (!hasFocus) {\n        hasFocus = true;\n\n        _this._onDidFocus.fire();\n      }\n    };\n\n    var onBlur = function () {\n      if (hasFocus) {\n        loosingFocus = true;\n        window.setTimeout(function () {\n          if (loosingFocus) {\n            loosingFocus = false;\n            hasFocus = false;\n\n            _this._onDidBlur.fire();\n          }\n        }, 0);\n      }\n    };\n\n    _this._register(domEvent(element, EventType.FOCUS, true)(onFocus));\n\n    _this._register(domEvent(element, EventType.BLUR, true)(onBlur));\n\n    return _this;\n  }\n\n  return FocusTracker;\n}(Disposable);\n\nexport function trackFocus(element) {\n  return new FocusTracker(element);\n}\nexport function append(parent) {\n  var children = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    children[_i - 1] = arguments[_i];\n  }\n\n  children.forEach(function (child) {\n    return parent.appendChild(child);\n  });\n  return children[children.length - 1];\n}\nvar SELECTOR_REGEX = /([\\w\\-]+)?(#([\\w\\-]+))?((.([\\w\\-]+))*)/;\nexport var Namespace;\n\n(function (Namespace) {\n  Namespace[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n  Namespace[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n})(Namespace || (Namespace = {}));\n\nfunction _$(namespace, description, attrs) {\n  var children = [];\n\n  for (var _i = 3; _i < arguments.length; _i++) {\n    children[_i - 3] = arguments[_i];\n  }\n\n  var match = SELECTOR_REGEX.exec(description);\n\n  if (!match) {\n    throw new Error('Bad use of emmet');\n  }\n\n  attrs = __assign({}, attrs || {});\n  var tagName = match[1] || 'div';\n  var result;\n\n  if (namespace !== Namespace.HTML) {\n    result = document.createElementNS(namespace, tagName);\n  } else {\n    result = document.createElement(tagName);\n  }\n\n  if (match[3]) {\n    result.id = match[3];\n  }\n\n  if (match[4]) {\n    result.className = match[4].replace(/\\./g, ' ').trim();\n  }\n\n  Object.keys(attrs).forEach(function (name) {\n    var value = attrs[name];\n\n    if (/^on\\w+$/.test(name)) {\n      result[name] = value;\n    } else if (name === 'selected') {\n      if (value) {\n        result.setAttribute(name, 'true');\n      }\n    } else {\n      result.setAttribute(name, value);\n    }\n  });\n  coalesce(children).forEach(function (child) {\n    if (child instanceof Node) {\n      result.appendChild(child);\n    } else {\n      result.appendChild(document.createTextNode(child));\n    }\n  });\n  return result;\n}\n\nexport function $(description, attrs) {\n  var children = [];\n\n  for (var _i = 2; _i < arguments.length; _i++) {\n    children[_i - 2] = arguments[_i];\n  }\n\n  return _$.apply(void 0, [Namespace.HTML, description, attrs].concat(children));\n}\n\n$.SVG = function (description, attrs) {\n  var children = [];\n\n  for (var _i = 2; _i < arguments.length; _i++) {\n    children[_i - 2] = arguments[_i];\n  }\n\n  return _$.apply(void 0, [Namespace.SVG, description, attrs].concat(children));\n};\n\nexport function show() {\n  var elements = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    elements[_i] = arguments[_i];\n  }\n\n  for (var _a = 0, elements_1 = elements; _a < elements_1.length; _a++) {\n    var element = elements_1[_a];\n    element.style.display = '';\n    element.removeAttribute('aria-hidden');\n  }\n}\nexport function hide() {\n  var elements = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    elements[_i] = arguments[_i];\n  }\n\n  for (var _a = 0, elements_2 = elements; _a < elements_2.length; _a++) {\n    var element = elements_2[_a];\n    element.style.display = 'none';\n    element.setAttribute('aria-hidden', 'true');\n  }\n}\n\nfunction findParentWithAttribute(node, attribute) {\n  while (node) {\n    if (node instanceof HTMLElement && node.hasAttribute(attribute)) {\n      return node;\n    }\n\n    node = node.parentNode;\n  }\n\n  return null;\n}\n\nexport function removeTabIndexAndUpdateFocus(node) {\n  if (!node || !node.hasAttribute('tabIndex')) {\n    return;\n  } // If we are the currently focused element and tabIndex is removed,\n  // standard DOM behavior is to move focus to the <body> element. We\n  // typically never want that, rather put focus to the closest element\n  // in the hierarchy of the parent DOM nodes.\n\n\n  if (document.activeElement === node) {\n    var parentFocusable = findParentWithAttribute(node.parentElement, 'tabIndex');\n\n    if (parentFocusable) {\n      parentFocusable.focus();\n    }\n  }\n\n  node.removeAttribute('tabindex');\n}\nexport function getElementsByTagName(tag) {\n  return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\n/**\n * Find a value usable for a dom node size such that the likelihood that it would be\n * displayed with constant screen pixels size is as high as possible.\n *\n * e.g. We would desire for the cursors to be 2px (CSS px) wide. Under a devicePixelRatio\n * of 1.25, the cursor will be 2.5 screen pixels wide. Depending on how the dom node aligns/\"snaps\"\n * with the screen pixels, it will sometimes be rendered with 2 screen pixels, and sometimes with 3 screen pixels.\n */\n\nexport function computeScreenAwareSize(cssPx) {\n  var screenPx = window.devicePixelRatio * cssPx;\n  return Math.max(1, Math.floor(screenPx)) / window.devicePixelRatio;\n}\n/**\n * See https://github.com/Microsoft/monaco-editor/issues/601\n * To protect against malicious code in the linked site, particularly phishing attempts,\n * the window.opener should be set to null to prevent the linked site from having access\n * to change the location of the current page.\n * See https://mathiasbynens.github.io/rel-noopener/\n */\n\nexport function windowOpenNoOpener(url) {\n  if (platform.isNative || browser.isEdgeWebView) {\n    // In VSCode, window.open() always returns null...\n    // The same is true for a WebView (see https://github.com/Microsoft/monaco-editor/issues/628)\n    window.open(url);\n  } else {\n    var newTab = window.open();\n\n    if (newTab) {\n      newTab.opener = null;\n      newTab.location.href = url;\n    }\n  }\n}\nexport function animate(fn) {\n  var step = function () {\n    fn();\n    stepDisposable = scheduleAtNextAnimationFrame(step);\n  };\n\n  var stepDisposable = scheduleAtNextAnimationFrame(step);\n  return toDisposable(function () {\n    return stepDisposable.dispose();\n  });\n}\nRemoteAuthorities.setPreferredWebSchema(/^https:/.test(window.location.href) ? 'https' : 'http');\nexport function asDomUri(uri) {\n  if (!uri) {\n    return uri;\n  }\n\n  if (Schemas.vscodeRemote === uri.scheme) {\n    return RemoteAuthorities.rewrite(uri.authority, uri.path);\n  }\n\n  return uri;\n}\n/**\n * returns url('...')\n */\n\nexport function asCSSUrl(uri) {\n  if (!uri) {\n    return \"url('')\";\n  }\n\n  return \"url('\" + asDomUri(uri).toString(true).replace(/'/g, '%27') + \"')\";\n}","map":null,"metadata":{},"sourceType":"module"}