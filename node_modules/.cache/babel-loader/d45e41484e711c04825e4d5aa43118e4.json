{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { illegalArgument } from '../../../base/common/errors.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Range } from '../../common/core/range.js';\nimport { registerLanguageCommand } from '../../browser/editorExtensions.js';\nimport { IModelService } from '../../common/services/modelService.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { ITextModelService } from '../../common/services/resolverService.js';\nimport { OutlineModel, OutlineElement } from '../documentSymbols/outlineModel.js';\nimport { values } from '../../../base/common/collections.js';\nexport function getDocumentSymbols(document, flat, token) {\n  return __awaiter(this, void 0, void 0, function () {\n    var model, roots, _i, _a, child, flatEntries;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , OutlineModel.create(document, token)];\n\n        case 1:\n          model = _b.sent();\n          roots = [];\n\n          for (_i = 0, _a = values(model.children); _i < _a.length; _i++) {\n            child = _a[_i];\n\n            if (child instanceof OutlineElement) {\n              roots.push(child.symbol);\n            } else {\n              roots.push.apply(roots, values(child.children).map(function (child) {\n                return child.symbol;\n              }));\n            }\n          }\n\n          flatEntries = [];\n\n          if (token.isCancellationRequested) {\n            return [2\n            /*return*/\n            , flatEntries];\n          }\n\n          if (flat) {\n            flatten(flatEntries, roots, '');\n          } else {\n            flatEntries = roots;\n          }\n\n          return [2\n          /*return*/\n          , flatEntries.sort(compareEntriesUsingStart)];\n      }\n    });\n  });\n}\n\nfunction compareEntriesUsingStart(a, b) {\n  return Range.compareRangesUsingStarts(a.range, b.range);\n}\n\nfunction flatten(bucket, entries, overrideContainerLabel) {\n  for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {\n    var entry = entries_1[_i];\n    bucket.push({\n      kind: entry.kind,\n      tags: entry.tags,\n      name: entry.name,\n      detail: entry.detail,\n      containerName: entry.containerName || overrideContainerLabel,\n      range: entry.range,\n      selectionRange: entry.selectionRange,\n      children: undefined\n    });\n\n    if (entry.children) {\n      flatten(bucket, entry.children, entry.name);\n    }\n  }\n}\n\nregisterLanguageCommand('_executeDocumentSymbolProvider', function (accessor, args) {\n  var resource = args.resource;\n\n  if (!(resource instanceof URI)) {\n    throw illegalArgument('resource');\n  }\n\n  var model = accessor.get(IModelService).getModel(resource);\n\n  if (model) {\n    return getDocumentSymbols(model, false, CancellationToken.None);\n  }\n\n  return accessor.get(ITextModelService).createModelReference(resource).then(function (reference) {\n    return new Promise(function (resolve, reject) {\n      try {\n        var result = getDocumentSymbols(reference.object.textEditorModel, false, CancellationToken.None);\n        resolve(result);\n      } catch (err) {\n        reject(err);\n      }\n    }).finally(function () {\n      reference.dispose();\n    });\n  });\n});","map":null,"metadata":{},"sourceType":"module"}