{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { flatten, coalesce } from '../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../base/common/errors.js';\nimport { registerDefaultLanguageCommand } from '../../browser/editorExtensions.js';\nimport { DefinitionProviderRegistry, ImplementationProviderRegistry, TypeDefinitionProviderRegistry, DeclarationProviderRegistry } from '../../common/modes.js';\n\nfunction getDefinitions(model, position, registry, provide) {\n  var provider = registry.ordered(model); // get results\n\n  var promises = provider.map(function (provider) {\n    return Promise.resolve(provide(provider, model, position)).then(undefined, function (err) {\n      onUnexpectedExternalError(err);\n      return undefined;\n    });\n  });\n  return Promise.all(promises).then(flatten).then(coalesce);\n}\n\nexport function getDefinitionsAtPosition(model, position, token) {\n  return getDefinitions(model, position, DefinitionProviderRegistry, function (provider, model, position) {\n    return provider.provideDefinition(model, position, token);\n  });\n}\nexport function getDeclarationsAtPosition(model, position, token) {\n  return getDefinitions(model, position, DeclarationProviderRegistry, function (provider, model, position) {\n    return provider.provideDeclaration(model, position, token);\n  });\n}\nexport function getImplementationsAtPosition(model, position, token) {\n  return getDefinitions(model, position, ImplementationProviderRegistry, function (provider, model, position) {\n    return provider.provideImplementation(model, position, token);\n  });\n}\nexport function getTypeDefinitionsAtPosition(model, position, token) {\n  return getDefinitions(model, position, TypeDefinitionProviderRegistry, function (provider, model, position) {\n    return provider.provideTypeDefinition(model, position, token);\n  });\n}\nregisterDefaultLanguageCommand('_executeDefinitionProvider', function (model, position) {\n  return getDefinitionsAtPosition(model, position, CancellationToken.None);\n});\nregisterDefaultLanguageCommand('_executeDeclarationProvider', function (model, position) {\n  return getDeclarationsAtPosition(model, position, CancellationToken.None);\n});\nregisterDefaultLanguageCommand('_executeImplementationProvider', function (model, position) {\n  return getImplementationsAtPosition(model, position, CancellationToken.None);\n});\nregisterDefaultLanguageCommand('_executeTypeDefinitionProvider', function (model, position) {\n  return getTypeDefinitionsAtPosition(model, position, CancellationToken.None);\n});","map":null,"metadata":{},"sourceType":"module"}