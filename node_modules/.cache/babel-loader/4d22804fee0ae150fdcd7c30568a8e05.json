{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nimport { toDisposable } from '../../../base/common/lifecycle.js';\nimport { withUndefinedAsNull } from '../../../base/common/types.js';\nimport { keys } from '../../../base/common/map.js';\n\nvar TokenizationRegistryImpl =\n/** @class */\nfunction () {\n  function TokenizationRegistryImpl() {\n    this._map = new Map();\n    this._promises = new Map();\n    this._onDidChange = new Emitter();\n    this.onDidChange = this._onDidChange.event;\n    this._colorMap = null;\n  }\n\n  TokenizationRegistryImpl.prototype.fire = function (languages) {\n    this._onDidChange.fire({\n      changedLanguages: languages,\n      changedColorMap: false\n    });\n  };\n\n  TokenizationRegistryImpl.prototype.register = function (language, support) {\n    var _this = this;\n\n    this._map.set(language, support);\n\n    this.fire([language]);\n    return toDisposable(function () {\n      if (_this._map.get(language) !== support) {\n        return;\n      }\n\n      _this._map.delete(language);\n\n      _this.fire([language]);\n    });\n  };\n\n  TokenizationRegistryImpl.prototype.registerPromise = function (language, supportPromise) {\n    var _this = this;\n\n    var registration = null;\n    var isDisposed = false;\n\n    this._promises.set(language, supportPromise.then(function (support) {\n      _this._promises.delete(language);\n\n      if (isDisposed || !support) {\n        return;\n      }\n\n      registration = _this.register(language, support);\n    }));\n\n    return toDisposable(function () {\n      isDisposed = true;\n\n      if (registration) {\n        registration.dispose();\n      }\n    });\n  };\n\n  TokenizationRegistryImpl.prototype.getPromise = function (language) {\n    var _this = this;\n\n    var support = this.get(language);\n\n    if (support) {\n      return Promise.resolve(support);\n    }\n\n    var promise = this._promises.get(language);\n\n    if (promise) {\n      return promise.then(function (_) {\n        return _this.get(language);\n      });\n    }\n\n    return null;\n  };\n\n  TokenizationRegistryImpl.prototype.get = function (language) {\n    return withUndefinedAsNull(this._map.get(language));\n  };\n\n  TokenizationRegistryImpl.prototype.setColorMap = function (colorMap) {\n    this._colorMap = colorMap;\n\n    this._onDidChange.fire({\n      changedLanguages: keys(this._map),\n      changedColorMap: true\n    });\n  };\n\n  TokenizationRegistryImpl.prototype.getColorMap = function () {\n    return this._colorMap;\n  };\n\n  TokenizationRegistryImpl.prototype.getDefaultBackground = function () {\n    if (this._colorMap && this._colorMap.length > 2\n    /* DefaultBackground */\n    ) {\n        return this._colorMap[2\n        /* DefaultBackground */\n        ];\n      }\n\n    return null;\n  };\n\n  return TokenizationRegistryImpl;\n}();\n\nexport { TokenizationRegistryImpl };","map":null,"metadata":{},"sourceType":"module"}