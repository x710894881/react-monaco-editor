{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport var conf = {\n  brackets: [['{', '}'], ['[', ']'], ['(', ')']],\n  autoClosingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: '\\'',\n    close: '\\''\n  }],\n  surroundingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: '\\'',\n    close: '\\''\n  }]\n};\nexport var language = {\n  defaultToken: '',\n  tokenPostfix: '.dockerfile',\n  variable: /\\${?[\\w]+}?/,\n  tokenizer: {\n    root: [{\n      include: '@whitespace'\n    }, {\n      include: '@comment'\n    }, [/(ONBUILD)(\\s+)/, ['keyword', '']], [/(ENV)(\\s+)([\\w]+)/, ['keyword', '', {\n      token: 'variable',\n      next: '@arguments'\n    }]], [/(FROM|MAINTAINER|RUN|EXPOSE|ENV|ADD|ARG|VOLUME|LABEL|USER|WORKDIR|COPY|CMD|STOPSIGNAL|SHELL|HEALTHCHECK|ENTRYPOINT)/, {\n      token: 'keyword',\n      next: '@arguments'\n    }]],\n    arguments: [{\n      include: '@whitespace'\n    }, {\n      include: '@strings'\n    }, [/(@variable)/, {\n      cases: {\n        '@eos': {\n          token: 'variable',\n          next: '@popall'\n        },\n        '@default': 'variable'\n      }\n    }], [/\\\\/, {\n      cases: {\n        '@eos': '',\n        '@default': ''\n      }\n    }], [/./, {\n      cases: {\n        '@eos': {\n          token: '',\n          next: '@popall'\n        },\n        '@default': ''\n      }\n    }]],\n    // Deal with white space, including comments\n    whitespace: [[/\\s+/, {\n      cases: {\n        '@eos': {\n          token: '',\n          next: '@popall'\n        },\n        '@default': ''\n      }\n    }]],\n    comment: [[/(^#.*$)/, 'comment', '@popall']],\n    // Recognize strings, including those broken across lines with \\ (but not without)\n    strings: [[/'$/, 'string', '@popall'], [/'/, 'string', '@stringBody'], [/\"$/, 'string', '@popall'], [/\"/, 'string', '@dblStringBody']],\n    stringBody: [[/[^\\\\\\$']/, {\n      cases: {\n        '@eos': {\n          token: 'string',\n          next: '@popall'\n        },\n        '@default': 'string'\n      }\n    }], [/\\\\./, 'string.escape'], [/'$/, 'string', '@popall'], [/'/, 'string', '@pop'], [/(@variable)/, 'variable'], [/\\\\$/, 'string'], [/$/, 'string', '@popall']],\n    dblStringBody: [[/[^\\\\\\$\"]/, {\n      cases: {\n        '@eos': {\n          token: 'string',\n          next: '@popall'\n        },\n        '@default': 'string'\n      }\n    }], [/\\\\./, 'string.escape'], [/\"$/, 'string', '@popall'], [/\"/, 'string', '@pop'], [/(@variable)/, 'variable'], [/\\\\$/, 'string'], [/$/, 'string', '@popall']]\n  }\n};","map":null,"metadata":{},"sourceType":"module"}