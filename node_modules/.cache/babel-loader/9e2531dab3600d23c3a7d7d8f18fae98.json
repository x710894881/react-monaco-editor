{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { URI } from './uri.js';\nimport * as platform from './platform.js';\nexport var Schemas;\n\n(function (Schemas) {\n  /**\n   * A schema that is used for models that exist in memory\n   * only and that have no correspondence on a server or such.\n   */\n  Schemas.inMemory = 'inmemory';\n  /**\n   * A schema that is used for setting files\n   */\n\n  Schemas.vscode = 'vscode';\n  /**\n   * A schema that is used for internal private files\n   */\n\n  Schemas.internal = 'private';\n  /**\n   * A walk-through document.\n   */\n\n  Schemas.walkThrough = 'walkThrough';\n  /**\n   * An embedded code snippet.\n   */\n\n  Schemas.walkThroughSnippet = 'walkThroughSnippet';\n  Schemas.http = 'http';\n  Schemas.https = 'https';\n  Schemas.file = 'file';\n  Schemas.mailto = 'mailto';\n  Schemas.untitled = 'untitled';\n  Schemas.data = 'data';\n  Schemas.command = 'command';\n  Schemas.vscodeRemote = 'vscode-remote';\n  Schemas.vscodeRemoteResource = 'vscode-remote-resource';\n  Schemas.userData = 'vscode-userdata';\n})(Schemas || (Schemas = {}));\n\nvar RemoteAuthoritiesImpl =\n/** @class */\nfunction () {\n  function RemoteAuthoritiesImpl() {\n    this._hosts = Object.create(null);\n    this._ports = Object.create(null);\n    this._connectionTokens = Object.create(null);\n    this._preferredWebSchema = 'http';\n  }\n\n  RemoteAuthoritiesImpl.prototype.setPreferredWebSchema = function (schema) {\n    this._preferredWebSchema = schema;\n  };\n\n  RemoteAuthoritiesImpl.prototype.rewrite = function (authority, path) {\n    var host = this._hosts[authority];\n    var port = this._ports[authority];\n    var connectionToken = this._connectionTokens[authority];\n    return URI.from({\n      scheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n      authority: host + \":\" + port,\n      path: \"/vscode-remote-resource\",\n      query: \"path=\" + encodeURIComponent(path) + \"&tkn=\" + encodeURIComponent(connectionToken)\n    });\n  };\n\n  return RemoteAuthoritiesImpl;\n}();\n\nexport var RemoteAuthorities = new RemoteAuthoritiesImpl();","map":null,"metadata":{},"sourceType":"module"}