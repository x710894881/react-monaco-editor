{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport './checkbox.css';\nimport * as DOM from '../../dom.js';\nimport { Widget } from '../widget.js';\nimport { Color } from '../../../common/color.js';\nimport { Emitter } from '../../../common/event.js';\nimport * as objects from '../../../common/objects.js';\nvar defaultOpts = {\n  inputActiveOptionBorder: Color.fromHex('#007ACC00'),\n  inputActiveOptionBackground: Color.fromHex('#0E639C50')\n};\n\nvar Checkbox =\n/** @class */\nfunction (_super) {\n  __extends(Checkbox, _super);\n\n  function Checkbox(opts) {\n    var _this = _super.call(this) || this;\n\n    _this._onChange = _this._register(new Emitter());\n    _this.onChange = _this._onChange.event;\n    _this._onKeyDown = _this._register(new Emitter());\n    _this.onKeyDown = _this._onKeyDown.event;\n    _this._opts = objects.deepClone(opts);\n    objects.mixin(_this._opts, defaultOpts, false);\n    _this._checked = _this._opts.isChecked;\n    _this.domNode = document.createElement('div');\n    _this.domNode.title = _this._opts.title;\n    _this.domNode.className = 'monaco-custom-checkbox ' + (_this._opts.actionClassName || '') + ' ' + (_this._checked ? 'checked' : 'unchecked');\n    _this.domNode.tabIndex = 0;\n\n    _this.domNode.setAttribute('role', 'checkbox');\n\n    _this.domNode.setAttribute('aria-checked', String(_this._checked));\n\n    _this.domNode.setAttribute('aria-label', _this._opts.title);\n\n    _this.applyStyles();\n\n    _this.onclick(_this.domNode, function (ev) {\n      _this.checked = !_this._checked;\n\n      _this._onChange.fire(false);\n\n      ev.preventDefault();\n    });\n\n    _this.onkeydown(_this.domNode, function (keyboardEvent) {\n      if (keyboardEvent.keyCode === 10\n      /* Space */\n      || keyboardEvent.keyCode === 3\n      /* Enter */\n      ) {\n          _this.checked = !_this._checked;\n\n          _this._onChange.fire(true);\n\n          keyboardEvent.preventDefault();\n          return;\n        }\n\n      _this._onKeyDown.fire(keyboardEvent);\n    });\n\n    return _this;\n  }\n\n  Checkbox.prototype.focus = function () {\n    this.domNode.focus();\n  };\n\n  Object.defineProperty(Checkbox.prototype, \"checked\", {\n    get: function () {\n      return this._checked;\n    },\n    set: function (newIsChecked) {\n      this._checked = newIsChecked;\n      this.domNode.setAttribute('aria-checked', String(this._checked));\n\n      if (this._checked) {\n        this.domNode.classList.add('checked');\n      } else {\n        this.domNode.classList.remove('checked');\n      }\n\n      this.applyStyles();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Checkbox.prototype.width = function () {\n    return 2\n    /*marginleft*/\n    + 2\n    /*border*/\n    + 2\n    /*padding*/\n    + 16\n    /* icon width */\n    ;\n  };\n\n  Checkbox.prototype.style = function (styles) {\n    if (styles.inputActiveOptionBorder) {\n      this._opts.inputActiveOptionBorder = styles.inputActiveOptionBorder;\n    }\n\n    if (styles.inputActiveOptionBackground) {\n      this._opts.inputActiveOptionBackground = styles.inputActiveOptionBackground;\n    }\n\n    this.applyStyles();\n  };\n\n  Checkbox.prototype.applyStyles = function () {\n    if (this.domNode) {\n      this.domNode.style.borderColor = this._checked && this._opts.inputActiveOptionBorder ? this._opts.inputActiveOptionBorder.toString() : 'transparent';\n      this.domNode.style.backgroundColor = this._checked && this._opts.inputActiveOptionBackground ? this._opts.inputActiveOptionBackground.toString() : 'transparent';\n    }\n  };\n\n  Checkbox.prototype.enable = function () {\n    this.domNode.tabIndex = 0;\n    this.domNode.setAttribute('aria-disabled', String(false));\n  };\n\n  Checkbox.prototype.disable = function () {\n    DOM.removeTabIndexAndUpdateFocus(this.domNode);\n    this.domNode.setAttribute('aria-disabled', String(true));\n  };\n\n  return Checkbox;\n}(Widget);\n\nexport { Checkbox };","map":null,"metadata":{},"sourceType":"module"}