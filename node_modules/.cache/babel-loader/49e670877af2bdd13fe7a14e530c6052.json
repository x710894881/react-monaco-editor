{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\n\nexport function findFirst(array, p) {\n  var low = 0,\n      high = array.length;\n\n  if (high === 0) {\n    return 0; // no children\n  }\n\n  while (low < high) {\n    var mid = Math.floor((low + high) / 2);\n\n    if (p(array[mid])) {\n      high = mid;\n    } else {\n      low = mid + 1;\n    }\n  }\n\n  return low;\n}\nexport function includes(array, item) {\n  return array.indexOf(item) !== -1;\n}\nexport function union() {\n  var arrays = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    arrays[_i] = arguments[_i];\n  }\n\n  var result = [];\n\n  for (var _a = 0, arrays_1 = arrays; _a < arrays_1.length; _a++) {\n    var array = arrays_1[_a];\n\n    for (var _b = 0, array_1 = array; _b < array_1.length; _b++) {\n      var item = array_1[_b];\n\n      if (!includes(result, item)) {\n        result.push(item);\n      }\n    }\n  }\n\n  return result;\n}","map":null,"metadata":{},"sourceType":"module"}