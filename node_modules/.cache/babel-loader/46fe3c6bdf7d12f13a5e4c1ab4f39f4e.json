{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { Disposable } from './lifecycle.js';\nimport { Emitter } from './event.js';\n\nvar Action =\n/** @class */\nfunction (_super) {\n  __extends(Action, _super);\n\n  function Action(id, label, cssClass, enabled, actionCallback) {\n    if (label === void 0) {\n      label = '';\n    }\n\n    if (cssClass === void 0) {\n      cssClass = '';\n    }\n\n    if (enabled === void 0) {\n      enabled = true;\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this._onDidChange = _this._register(new Emitter());\n    _this.onDidChange = _this._onDidChange.event;\n    _this._enabled = true;\n    _this._checked = false;\n    _this._radio = false;\n    _this._id = id;\n    _this._label = label;\n    _this._cssClass = cssClass;\n    _this._enabled = enabled;\n    _this._actionCallback = actionCallback;\n    return _this;\n  }\n\n  Object.defineProperty(Action.prototype, \"id\", {\n    get: function () {\n      return this._id;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Action.prototype, \"label\", {\n    get: function () {\n      return this._label;\n    },\n    set: function (value) {\n      this._setLabel(value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Action.prototype._setLabel = function (value) {\n    if (this._label !== value) {\n      this._label = value;\n\n      this._onDidChange.fire({\n        label: value\n      });\n    }\n  };\n\n  Object.defineProperty(Action.prototype, \"tooltip\", {\n    get: function () {\n      return this._tooltip || '';\n    },\n    set: function (value) {\n      this._setTooltip(value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Action.prototype._setTooltip = function (value) {\n    if (this._tooltip !== value) {\n      this._tooltip = value;\n\n      this._onDidChange.fire({\n        tooltip: value\n      });\n    }\n  };\n\n  Object.defineProperty(Action.prototype, \"class\", {\n    get: function () {\n      return this._cssClass;\n    },\n    set: function (value) {\n      this._setClass(value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Action.prototype._setClass = function (value) {\n    if (this._cssClass !== value) {\n      this._cssClass = value;\n\n      this._onDidChange.fire({\n        class: value\n      });\n    }\n  };\n\n  Object.defineProperty(Action.prototype, \"enabled\", {\n    get: function () {\n      return this._enabled;\n    },\n    set: function (value) {\n      this._setEnabled(value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Action.prototype._setEnabled = function (value) {\n    if (this._enabled !== value) {\n      this._enabled = value;\n\n      this._onDidChange.fire({\n        enabled: value\n      });\n    }\n  };\n\n  Object.defineProperty(Action.prototype, \"checked\", {\n    get: function () {\n      return this._checked;\n    },\n    set: function (value) {\n      this._setChecked(value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Action.prototype, \"radio\", {\n    get: function () {\n      return this._radio;\n    },\n    set: function (value) {\n      this._setRadio(value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Action.prototype._setChecked = function (value) {\n    if (this._checked !== value) {\n      this._checked = value;\n\n      this._onDidChange.fire({\n        checked: value\n      });\n    }\n  };\n\n  Action.prototype._setRadio = function (value) {\n    if (this._radio !== value) {\n      this._radio = value;\n\n      this._onDidChange.fire({\n        radio: value\n      });\n    }\n  };\n\n  Action.prototype.run = function (event, _data) {\n    if (this._actionCallback) {\n      return this._actionCallback(event);\n    }\n\n    return Promise.resolve(true);\n  };\n\n  return Action;\n}(Disposable);\n\nexport { Action };\n\nvar ActionRunner =\n/** @class */\nfunction (_super) {\n  __extends(ActionRunner, _super);\n\n  function ActionRunner() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._onDidBeforeRun = _this._register(new Emitter());\n    _this.onDidBeforeRun = _this._onDidBeforeRun.event;\n    _this._onDidRun = _this._register(new Emitter());\n    _this.onDidRun = _this._onDidRun.event;\n    return _this;\n  }\n\n  ActionRunner.prototype.run = function (action, context) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result, error_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!action.enabled) {\n              return [2\n              /*return*/\n              , Promise.resolve(null)];\n            }\n\n            this._onDidBeforeRun.fire({\n              action: action\n            });\n\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this.runAction(action, context)];\n\n          case 2:\n            result = _a.sent();\n\n            this._onDidRun.fire({\n              action: action,\n              result: result\n            });\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            error_1 = _a.sent();\n\n            this._onDidRun.fire({\n              action: action,\n              error: error_1\n            });\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  ActionRunner.prototype.runAction = function (action, context) {\n    var res = context ? action.run(context) : action.run();\n    return Promise.resolve(res);\n  };\n\n  return ActionRunner;\n}(Disposable);\n\nexport { ActionRunner };","map":null,"metadata":{},"sourceType":"module"}