{"ast":null,"code":"import _defineProperty from \"/Users/yuanshaokai/Desktop/workspace/editor/react-monaco-editor/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/yuanshaokai/Desktop/workspace/editor/react-monaco-editor/src/editor.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport * as monaco from 'monaco-editor/esm/vs/editor/editor.api';\nimport MonacoEditor from 'react-monaco-editor';\n\nclass DEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onBlur = () => {\n      const calculateValue = this.state.calculateValue;\n      this.props.value(calculateValue);\n    };\n\n    this.onChangeHandle = (value, e) => {\n      this.setState({\n        calculateValue: value\n      });\n    };\n\n    this.editorDidMountHandle = (editor, monaco) => {\n      const _this$state = this.state,\n            suggestions = _this$state.suggestions,\n            tipList = _this$state.tipList;\n      monaco.languages.registerCompletionItemProvider('plaintext', {\n        provideCompletionItems() {\n          return {\n            suggestions: suggestions.map(item => _objectSpread({}, item, {\n              kind: monaco.languages.CompletionItemKind.Variable\n            }))\n          };\n        },\n\n        triggerCharacters: tipList\n      });\n      this.timeouter = setTimeout(() => {\n        editor.getAction('editor.action.formatDocument').run();\n      }, 300);\n    };\n\n    this.options = {\n      selectOnLineNumbers: true,\n      renderSideBySide: false\n    };\n\n    this.click = () => {\n      const editor = this.monacoEditorRef.current.editor;\n      const p = editor.getPosition();\n      editor.executeEdits('', [{\n        range: new monaco.Range(p.lineNumber, p.column, p.lineNumber, p.column),\n        text: '我是根据光标位置插入的值'\n      }]);\n    };\n\n    this.monacoEditorRef = React.createRef();\n    this.state = {\n      setRuleContent: [],\n      // 规则导入的中文 插入到计算框\n      tipList: [':', 't', 'c', 's'],\n      // 储存计算框提示语的首字母\n      suggestions: [{\n        label: 'tan',\n        insertText: 'tan',\n        // 不写的时候不展示。。\n        detail: '提示的文字'\n      }, {\n        label: 'cos',\n        insertText: 'cos',\n        detail: '提示的文字'\n      }, {\n        label: 'sin',\n        insertText: 'sin',\n        detail: '提示的文字'\n      }],\n      // 储存提示语\n      calculateValue: ''\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // 编辑框的值\n    if (this.state.calculateValue !== nextProps.calculateValue) {\n      this.setState({\n        calculateValue: nextProps.calculateValue\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      onBlur: this.onBlur,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(MonacoEditor, {\n      ref: this.monacoEditorRef,\n      width: \"900\",\n      height: \"200\",\n      language: \"plaintext\",\n      theme: \"vs-dark\",\n      value: this.state.calculateValue,\n      options: this.options,\n      onChange: this.onChangeHandle,\n      editorDidMount: this.editorDidMountHandle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.click,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"\\u6839\\u636E\\u5149\\u6807\\u63D2\\u5165\"));\n  }\n\n}\n\nexport default DEditor;","map":{"version":3,"sources":["/Users/yuanshaokai/Desktop/workspace/editor/react-monaco-editor/src/editor.js"],"names":["React","monaco","MonacoEditor","DEditor","Component","constructor","props","onBlur","calculateValue","state","value","onChangeHandle","e","setState","editorDidMountHandle","editor","suggestions","tipList","languages","registerCompletionItemProvider","provideCompletionItems","map","item","kind","CompletionItemKind","Variable","triggerCharacters","timeouter","setTimeout","getAction","run","options","selectOnLineNumbers","renderSideBySide","click","monacoEditorRef","current","p","getPosition","executeEdits","range","Range","lineNumber","column","text","createRef","setRuleContent","label","insertText","detail","componentWillReceiveProps","nextProps","render"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport * as monaco from 'monaco-editor/esm/vs/editor/editor.api'\nimport MonacoEditor from 'react-monaco-editor'\n\nclass DEditor extends React.Component {\n  constructor(props) {\n    super(props)\n    this.monacoEditorRef = React.createRef()\n    this.state = {\n      setRuleContent: [], // 规则导入的中文 插入到计算框\n      tipList: [':', 't', 'c', 's'], // 储存计算框提示语的首字母\n      suggestions: [\n        {\n          label: 'tan',\n          insertText: 'tan', // 不写的时候不展示。。\n          detail: '提示的文字'\n        },\n        {\n          label: 'cos',\n          insertText: 'cos',\n          detail: '提示的文字'\n        },\n        {\n          label: 'sin',\n          insertText: 'sin',\n          detail: '提示的文字'\n        }\n      ], // 储存提示语\n      calculateValue: ''\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // 编辑框的值\n    if (this.state.calculateValue !== nextProps.calculateValue) {\n      this.setState({\n        calculateValue: nextProps.calculateValue\n      })\n    }\n  }\n\n  onBlur = () => {\n    const { calculateValue } = this.state\n    this.props.value(calculateValue)\n  }\n\n  onChangeHandle = (value, e) => {\n    this.setState({\n      calculateValue: value\n    })\n  }\n\n  editorDidMountHandle = (editor, monaco) => {\n    const { suggestions, tipList } = this.state\n    monaco.languages.registerCompletionItemProvider('plaintext', {\n      provideCompletionItems() {\n        return {\n          suggestions: suggestions.map(item => ({ ...item, kind: monaco.languages.CompletionItemKind.Variable }))\n        }\n      },\n      triggerCharacters: tipList\n    })\n    this.timeouter = setTimeout(() => {\n      editor.getAction('editor.action.formatDocument').run()\n    }, 300)\n  }\n\n  options = {\n    selectOnLineNumbers: true,\n    renderSideBySide: false\n  }\n\n  click = () => {\n    const editor = this.monacoEditorRef.current.editor\n    const p = editor.getPosition()\n    editor.executeEdits('',\n      [\n        {\n          range: new monaco.Range(p.lineNumber,\n            p.column,\n            p.lineNumber,\n            p.column),\n          text: '我是根据光标位置插入的值'\n        }\n      ]\n    )\n  }\n\n  render() {\n    return (\n      <>\n        <div onBlur={this.onBlur}>\n          <MonacoEditor\n            ref={this.monacoEditorRef}\n            width='900'\n            height='200'\n            language='plaintext'\n            theme='vs-dark'\n            value={this.state.calculateValue}\n            options={this.options}\n            onChange={this.onChangeHandle}\n            editorDidMount={this.editorDidMountHandle}\n          />\n        </div>\n        <button onClick={this.click}>根据光标插入</button>\n      </>\n    )\n  }\n}\n\nexport default DEditor\n"]},"metadata":{},"sourceType":"module"}