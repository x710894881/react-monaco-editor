{"ast":null,"code":"import '../../editor/editor.api.js';\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport { typescriptVersion } from './lib/typescriptServicesMetadata.js'; // do not import the whole typescriptServices here\n\nvar Emitter = monaco.Emitter;\n\nvar LanguageServiceDefaultsImpl =\n/** @class */\nfunction () {\n  function LanguageServiceDefaultsImpl(compilerOptions, diagnosticsOptions) {\n    this._onDidChange = new Emitter();\n    this._onDidExtraLibsChange = new Emitter();\n    this._extraLibs = Object.create(null);\n    this._workerMaxIdleTime = 2 * 60 * 1000;\n    this.setCompilerOptions(compilerOptions);\n    this.setDiagnosticsOptions(diagnosticsOptions);\n    this._onDidExtraLibsChangeTimeout = -1;\n  }\n\n  Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"onDidChange\", {\n    get: function () {\n      return this._onDidChange.event;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"onDidExtraLibsChange\", {\n    get: function () {\n      return this._onDidExtraLibsChange.event;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  LanguageServiceDefaultsImpl.prototype.getExtraLibs = function () {\n    return this._extraLibs;\n  };\n\n  LanguageServiceDefaultsImpl.prototype.addExtraLib = function (content, filePath) {\n    var _this = this;\n\n    if (typeof filePath === 'undefined') {\n      filePath = \"ts:extralib-\" + Math.random().toString(36).substring(2, 15);\n    }\n\n    if (this._extraLibs[filePath] && this._extraLibs[filePath].content === content) {\n      // no-op, there already exists an extra lib with this content\n      return {\n        dispose: function () {}\n      };\n    }\n\n    var myVersion = 1;\n\n    if (this._extraLibs[filePath]) {\n      myVersion = this._extraLibs[filePath].version + 1;\n    }\n\n    this._extraLibs[filePath] = {\n      content: content,\n      version: myVersion\n    };\n\n    this._fireOnDidExtraLibsChangeSoon();\n\n    return {\n      dispose: function () {\n        var extraLib = _this._extraLibs[filePath];\n\n        if (!extraLib) {\n          return;\n        }\n\n        if (extraLib.version !== myVersion) {\n          return;\n        }\n\n        delete _this._extraLibs[filePath];\n\n        _this._fireOnDidExtraLibsChangeSoon();\n      }\n    };\n  };\n\n  LanguageServiceDefaultsImpl.prototype._fireOnDidExtraLibsChangeSoon = function () {\n    var _this = this;\n\n    if (this._onDidExtraLibsChangeTimeout !== -1) {\n      // already scheduled\n      return;\n    }\n\n    this._onDidExtraLibsChangeTimeout = setTimeout(function () {\n      _this._onDidExtraLibsChangeTimeout = -1;\n\n      _this._onDidExtraLibsChange.fire(undefined);\n    }, 0);\n  };\n\n  LanguageServiceDefaultsImpl.prototype.getCompilerOptions = function () {\n    return this._compilerOptions;\n  };\n\n  LanguageServiceDefaultsImpl.prototype.setCompilerOptions = function (options) {\n    this._compilerOptions = options || Object.create(null);\n\n    this._onDidChange.fire(undefined);\n  };\n\n  LanguageServiceDefaultsImpl.prototype.getDiagnosticsOptions = function () {\n    return this._diagnosticsOptions;\n  };\n\n  LanguageServiceDefaultsImpl.prototype.setDiagnosticsOptions = function (options) {\n    this._diagnosticsOptions = options || Object.create(null);\n\n    this._onDidChange.fire(undefined);\n  };\n\n  LanguageServiceDefaultsImpl.prototype.setMaximumWorkerIdleTime = function (value) {\n    // doesn't fire an event since no\n    // worker restart is required here\n    this._workerMaxIdleTime = value;\n  };\n\n  LanguageServiceDefaultsImpl.prototype.getWorkerMaxIdleTime = function () {\n    return this._workerMaxIdleTime;\n  };\n\n  LanguageServiceDefaultsImpl.prototype.setEagerModelSync = function (value) {\n    // doesn't fire an event since no\n    // worker restart is required here\n    this._eagerModelSync = value;\n  };\n\n  LanguageServiceDefaultsImpl.prototype.getEagerModelSync = function () {\n    return this._eagerModelSync;\n  };\n\n  return LanguageServiceDefaultsImpl;\n}();\n\nexport { LanguageServiceDefaultsImpl }; //#region enums copied from typescript to prevent loading the entire typescriptServices ---\n\nvar ModuleKind;\n\n(function (ModuleKind) {\n  ModuleKind[ModuleKind[\"None\"] = 0] = \"None\";\n  ModuleKind[ModuleKind[\"CommonJS\"] = 1] = \"CommonJS\";\n  ModuleKind[ModuleKind[\"AMD\"] = 2] = \"AMD\";\n  ModuleKind[ModuleKind[\"UMD\"] = 3] = \"UMD\";\n  ModuleKind[ModuleKind[\"System\"] = 4] = \"System\";\n  ModuleKind[ModuleKind[\"ES2015\"] = 5] = \"ES2015\";\n  ModuleKind[ModuleKind[\"ESNext\"] = 99] = \"ESNext\";\n})(ModuleKind || (ModuleKind = {}));\n\nvar JsxEmit;\n\n(function (JsxEmit) {\n  JsxEmit[JsxEmit[\"None\"] = 0] = \"None\";\n  JsxEmit[JsxEmit[\"Preserve\"] = 1] = \"Preserve\";\n  JsxEmit[JsxEmit[\"React\"] = 2] = \"React\";\n  JsxEmit[JsxEmit[\"ReactNative\"] = 3] = \"ReactNative\";\n})(JsxEmit || (JsxEmit = {}));\n\nvar NewLineKind;\n\n(function (NewLineKind) {\n  NewLineKind[NewLineKind[\"CarriageReturnLineFeed\"] = 0] = \"CarriageReturnLineFeed\";\n  NewLineKind[NewLineKind[\"LineFeed\"] = 1] = \"LineFeed\";\n})(NewLineKind || (NewLineKind = {}));\n\nvar ScriptTarget;\n\n(function (ScriptTarget) {\n  ScriptTarget[ScriptTarget[\"ES3\"] = 0] = \"ES3\";\n  ScriptTarget[ScriptTarget[\"ES5\"] = 1] = \"ES5\";\n  ScriptTarget[ScriptTarget[\"ES2015\"] = 2] = \"ES2015\";\n  ScriptTarget[ScriptTarget[\"ES2016\"] = 3] = \"ES2016\";\n  ScriptTarget[ScriptTarget[\"ES2017\"] = 4] = \"ES2017\";\n  ScriptTarget[ScriptTarget[\"ES2018\"] = 5] = \"ES2018\";\n  ScriptTarget[ScriptTarget[\"ES2019\"] = 6] = \"ES2019\";\n  ScriptTarget[ScriptTarget[\"ES2020\"] = 7] = \"ES2020\";\n  ScriptTarget[ScriptTarget[\"ESNext\"] = 99] = \"ESNext\";\n  ScriptTarget[ScriptTarget[\"JSON\"] = 100] = \"JSON\";\n  ScriptTarget[ScriptTarget[\"Latest\"] = 99] = \"Latest\";\n})(ScriptTarget || (ScriptTarget = {}));\n\nvar ModuleResolutionKind;\n\n(function (ModuleResolutionKind) {\n  ModuleResolutionKind[ModuleResolutionKind[\"Classic\"] = 1] = \"Classic\";\n  ModuleResolutionKind[ModuleResolutionKind[\"NodeJs\"] = 2] = \"NodeJs\";\n})(ModuleResolutionKind || (ModuleResolutionKind = {})); //#endregion\n\n\nvar typescriptDefaults = new LanguageServiceDefaultsImpl({\n  allowNonTsExtensions: true,\n  target: ScriptTarget.Latest\n}, {\n  noSemanticValidation: false,\n  noSyntaxValidation: false\n});\nvar javascriptDefaults = new LanguageServiceDefaultsImpl({\n  allowNonTsExtensions: true,\n  allowJs: true,\n  target: ScriptTarget.Latest\n}, {\n  noSemanticValidation: true,\n  noSyntaxValidation: false\n});\n\nfunction getTypeScriptWorker() {\n  return getMode().then(function (mode) {\n    return mode.getTypeScriptWorker();\n  });\n}\n\nfunction getJavaScriptWorker() {\n  return getMode().then(function (mode) {\n    return mode.getJavaScriptWorker();\n  });\n} // Export API\n\n\nfunction createAPI() {\n  return {\n    ModuleKind: ModuleKind,\n    JsxEmit: JsxEmit,\n    NewLineKind: NewLineKind,\n    ScriptTarget: ScriptTarget,\n    ModuleResolutionKind: ModuleResolutionKind,\n    typescriptVersion: typescriptVersion,\n    typescriptDefaults: typescriptDefaults,\n    javascriptDefaults: javascriptDefaults,\n    getTypeScriptWorker: getTypeScriptWorker,\n    getJavaScriptWorker: getJavaScriptWorker\n  };\n}\n\nmonaco.languages.typescript = createAPI(); // --- Registration to monaco editor ---\n\nfunction getMode() {\n  return import('./tsMode.js');\n}\n\nmonaco.languages.onLanguage('typescript', function () {\n  return getMode().then(function (mode) {\n    return mode.setupTypeScript(typescriptDefaults);\n  });\n});\nmonaco.languages.onLanguage('javascript', function () {\n  return getMode().then(function (mode) {\n    return mode.setupJavaScript(javascriptDefaults);\n  });\n});","map":null,"metadata":{},"sourceType":"module"}