{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { Event, Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { isUndefinedOrNull } from '../../../base/common/types.js';\nexport var IStorageService = createDecorator('storageService');\nexport var WillSaveStateReason;\n\n(function (WillSaveStateReason) {\n  WillSaveStateReason[WillSaveStateReason[\"NONE\"] = 0] = \"NONE\";\n  WillSaveStateReason[WillSaveStateReason[\"SHUTDOWN\"] = 1] = \"SHUTDOWN\";\n})(WillSaveStateReason || (WillSaveStateReason = {}));\n\nvar InMemoryStorageService =\n/** @class */\nfunction (_super) {\n  __extends(InMemoryStorageService, _super);\n\n  function InMemoryStorageService() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._serviceBrand = null;\n    _this._onDidChangeStorage = _this._register(new Emitter());\n    _this.onDidChangeStorage = _this._onDidChangeStorage.event;\n    _this.onWillSaveState = Event.None;\n    _this.globalCache = new Map();\n    _this.workspaceCache = new Map();\n    return _this;\n  }\n\n  InMemoryStorageService.prototype.getCache = function (scope) {\n    return scope === 0\n    /* GLOBAL */\n    ? this.globalCache : this.workspaceCache;\n  };\n\n  InMemoryStorageService.prototype.get = function (key, scope, fallbackValue) {\n    var value = this.getCache(scope).get(key);\n\n    if (isUndefinedOrNull(value)) {\n      return fallbackValue;\n    }\n\n    return value;\n  };\n\n  InMemoryStorageService.prototype.getBoolean = function (key, scope, fallbackValue) {\n    var value = this.getCache(scope).get(key);\n\n    if (isUndefinedOrNull(value)) {\n      return fallbackValue;\n    }\n\n    return value === 'true';\n  };\n\n  InMemoryStorageService.prototype.store = function (key, value, scope) {\n    // We remove the key for undefined/null values\n    if (isUndefinedOrNull(value)) {\n      return this.remove(key, scope);\n    } // Otherwise, convert to String and store\n\n\n    var valueStr = String(value); // Return early if value already set\n\n    var currentValue = this.getCache(scope).get(key);\n\n    if (currentValue === valueStr) {\n      return Promise.resolve();\n    } // Update in cache\n\n\n    this.getCache(scope).set(key, valueStr); // Events\n\n    this._onDidChangeStorage.fire({\n      scope: scope,\n      key: key\n    });\n\n    return Promise.resolve();\n  };\n\n  InMemoryStorageService.prototype.remove = function (key, scope) {\n    var wasDeleted = this.getCache(scope).delete(key);\n\n    if (!wasDeleted) {\n      return Promise.resolve(); // Return early if value already deleted\n    } // Events\n\n\n    this._onDidChangeStorage.fire({\n      scope: scope,\n      key: key\n    });\n\n    return Promise.resolve();\n  };\n\n  return InMemoryStorageService;\n}(Disposable);\n\nexport { InMemoryStorageService };","map":null,"metadata":{},"sourceType":"module"}