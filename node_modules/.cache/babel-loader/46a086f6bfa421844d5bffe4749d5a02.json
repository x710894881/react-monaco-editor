{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { Checkbox } from '../checkbox/checkbox.js';\nimport './findInputCheckboxes.css';\nimport * as nls from '../../../../nls.js';\nvar NLS_CASE_SENSITIVE_CHECKBOX_LABEL = nls.localize('caseDescription', \"Match Case\");\nvar NLS_WHOLE_WORD_CHECKBOX_LABEL = nls.localize('wordsDescription', \"Match Whole Word\");\nvar NLS_REGEX_CHECKBOX_LABEL = nls.localize('regexDescription', \"Use Regular Expression\");\n\nvar CaseSensitiveCheckbox =\n/** @class */\nfunction (_super) {\n  __extends(CaseSensitiveCheckbox, _super);\n\n  function CaseSensitiveCheckbox(opts) {\n    return _super.call(this, {\n      actionClassName: 'monaco-case-sensitive',\n      title: NLS_CASE_SENSITIVE_CHECKBOX_LABEL + opts.appendTitle,\n      isChecked: opts.isChecked,\n      inputActiveOptionBorder: opts.inputActiveOptionBorder,\n      inputActiveOptionBackground: opts.inputActiveOptionBackground\n    }) || this;\n  }\n\n  return CaseSensitiveCheckbox;\n}(Checkbox);\n\nexport { CaseSensitiveCheckbox };\n\nvar WholeWordsCheckbox =\n/** @class */\nfunction (_super) {\n  __extends(WholeWordsCheckbox, _super);\n\n  function WholeWordsCheckbox(opts) {\n    return _super.call(this, {\n      actionClassName: 'monaco-whole-word',\n      title: NLS_WHOLE_WORD_CHECKBOX_LABEL + opts.appendTitle,\n      isChecked: opts.isChecked,\n      inputActiveOptionBorder: opts.inputActiveOptionBorder,\n      inputActiveOptionBackground: opts.inputActiveOptionBackground\n    }) || this;\n  }\n\n  return WholeWordsCheckbox;\n}(Checkbox);\n\nexport { WholeWordsCheckbox };\n\nvar RegexCheckbox =\n/** @class */\nfunction (_super) {\n  __extends(RegexCheckbox, _super);\n\n  function RegexCheckbox(opts) {\n    return _super.call(this, {\n      actionClassName: 'monaco-regex',\n      title: NLS_REGEX_CHECKBOX_LABEL + opts.appendTitle,\n      isChecked: opts.isChecked,\n      inputActiveOptionBorder: opts.inputActiveOptionBorder,\n      inputActiveOptionBackground: opts.inputActiveOptionBackground\n    }) || this;\n  }\n\n  return RegexCheckbox;\n}(Checkbox);\n\nexport { RegexCheckbox };","map":null,"metadata":{},"sourceType":"module"}