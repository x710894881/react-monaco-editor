{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport * as nls from '../../../nls.js';\nimport { Range } from '../../common/core/range.js';\nimport { Selection } from '../../common/core/selection.js';\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\nimport { registerEditorAction, EditorAction, registerEditorContribution } from '../../browser/editorExtensions.js';\nimport { IEditorWorkerService } from '../../common/services/editorWorkerService.js';\nimport { InPlaceReplaceCommand } from './inPlaceReplaceCommand.js';\nimport { EditorState } from '../../browser/core/editorState.js';\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\nimport { editorBracketMatchBorder } from '../../common/view/editorColorRegistry.js';\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\nimport { createCancelablePromise, timeout } from '../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\n\nvar InPlaceReplaceController =\n/** @class */\nfunction () {\n  function InPlaceReplaceController(editor, editorWorkerService) {\n    this.decorationIds = [];\n    this.editor = editor;\n    this.editorWorkerService = editorWorkerService;\n  }\n\n  InPlaceReplaceController.get = function (editor) {\n    return editor.getContribution(InPlaceReplaceController.ID);\n  };\n\n  InPlaceReplaceController.prototype.dispose = function () {};\n\n  InPlaceReplaceController.prototype.getId = function () {\n    return InPlaceReplaceController.ID;\n  };\n\n  InPlaceReplaceController.prototype.run = function (source, up) {\n    var _this = this; // cancel any pending request\n\n\n    if (this.currentRequest) {\n      this.currentRequest.cancel();\n    }\n\n    var editorSelection = this.editor.getSelection();\n    var model = this.editor.getModel();\n\n    if (!model || !editorSelection) {\n      return undefined;\n    }\n\n    var selection = editorSelection;\n\n    if (selection.startLineNumber !== selection.endLineNumber) {\n      // Can't accept multiline selection\n      return undefined;\n    }\n\n    var state = new EditorState(this.editor, 1\n    /* Value */\n    | 4\n    /* Position */\n    );\n    var modelURI = model.uri;\n\n    if (!this.editorWorkerService.canNavigateValueSet(modelURI)) {\n      return Promise.resolve(undefined);\n    }\n\n    this.currentRequest = createCancelablePromise(function (token) {\n      return _this.editorWorkerService.navigateValueSet(modelURI, selection, up);\n    });\n    return this.currentRequest.then(function (result) {\n      if (!result || !result.range || !result.value) {\n        // No proper result\n        return;\n      }\n\n      if (!state.validate(_this.editor)) {\n        // state has changed\n        return;\n      } // Selection\n\n\n      var editRange = Range.lift(result.range);\n      var highlightRange = result.range;\n      var diff = result.value.length - (selection.endColumn - selection.startColumn); // highlight\n\n      highlightRange = {\n        startLineNumber: highlightRange.startLineNumber,\n        startColumn: highlightRange.startColumn,\n        endLineNumber: highlightRange.endLineNumber,\n        endColumn: highlightRange.startColumn + result.value.length\n      };\n\n      if (diff > 1) {\n        selection = new Selection(selection.startLineNumber, selection.startColumn, selection.endLineNumber, selection.endColumn + diff - 1);\n      } // Insert new text\n\n\n      var command = new InPlaceReplaceCommand(editRange, selection, result.value);\n\n      _this.editor.pushUndoStop();\n\n      _this.editor.executeCommand(source, command);\n\n      _this.editor.pushUndoStop(); // add decoration\n\n\n      _this.decorationIds = _this.editor.deltaDecorations(_this.decorationIds, [{\n        range: highlightRange,\n        options: InPlaceReplaceController.DECORATION\n      }]); // remove decoration after delay\n\n      if (_this.decorationRemover) {\n        _this.decorationRemover.cancel();\n      }\n\n      _this.decorationRemover = timeout(350);\n\n      _this.decorationRemover.then(function () {\n        return _this.decorationIds = _this.editor.deltaDecorations(_this.decorationIds, []);\n      }).catch(onUnexpectedError);\n    }).catch(onUnexpectedError);\n  };\n\n  InPlaceReplaceController.ID = 'editor.contrib.inPlaceReplaceController';\n  InPlaceReplaceController.DECORATION = ModelDecorationOptions.register({\n    className: 'valueSetReplacement'\n  });\n  InPlaceReplaceController = __decorate([__param(1, IEditorWorkerService)], InPlaceReplaceController);\n  return InPlaceReplaceController;\n}();\n\nvar InPlaceReplaceUp =\n/** @class */\nfunction (_super) {\n  __extends(InPlaceReplaceUp, _super);\n\n  function InPlaceReplaceUp() {\n    return _super.call(this, {\n      id: 'editor.action.inPlaceReplace.up',\n      label: nls.localize('InPlaceReplaceAction.previous.label', \"Replace with Previous Value\"),\n      alias: 'Replace with Previous Value',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 2048\n        /* CtrlCmd */\n        | 1024\n        /* Shift */\n        | 82\n        /* US_COMMA */\n        ,\n        weight: 100\n        /* EditorContrib */\n\n      }\n    }) || this;\n  }\n\n  InPlaceReplaceUp.prototype.run = function (accessor, editor) {\n    var controller = InPlaceReplaceController.get(editor);\n\n    if (!controller) {\n      return Promise.resolve(undefined);\n    }\n\n    return controller.run(this.id, true);\n  };\n\n  return InPlaceReplaceUp;\n}(EditorAction);\n\nvar InPlaceReplaceDown =\n/** @class */\nfunction (_super) {\n  __extends(InPlaceReplaceDown, _super);\n\n  function InPlaceReplaceDown() {\n    return _super.call(this, {\n      id: 'editor.action.inPlaceReplace.down',\n      label: nls.localize('InPlaceReplaceAction.next.label', \"Replace with Next Value\"),\n      alias: 'Replace with Next Value',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 2048\n        /* CtrlCmd */\n        | 1024\n        /* Shift */\n        | 84\n        /* US_DOT */\n        ,\n        weight: 100\n        /* EditorContrib */\n\n      }\n    }) || this;\n  }\n\n  InPlaceReplaceDown.prototype.run = function (accessor, editor) {\n    var controller = InPlaceReplaceController.get(editor);\n\n    if (!controller) {\n      return Promise.resolve(undefined);\n    }\n\n    return controller.run(this.id, false);\n  };\n\n  return InPlaceReplaceDown;\n}(EditorAction);\n\nregisterEditorContribution(InPlaceReplaceController);\nregisterEditorAction(InPlaceReplaceUp);\nregisterEditorAction(InPlaceReplaceDown);\nregisterThemingParticipant(function (theme, collector) {\n  var border = theme.getColor(editorBracketMatchBorder);\n\n  if (border) {\n    collector.addRule(\".monaco-editor.vs .valueSetReplacement { outline: solid 2px \" + border + \"; }\");\n  }\n});","map":null,"metadata":{},"sourceType":"module"}