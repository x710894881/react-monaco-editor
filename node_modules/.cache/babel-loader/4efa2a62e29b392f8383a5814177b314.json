{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport { TimeoutTimer, createCancelablePromise } from '../../../base/common/async.js';\nimport { RGBA } from '../../../base/common/color.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { hash } from '../../../base/common/hash.js';\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { registerEditorContribution } from '../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\nimport { Range } from '../../common/core/range.js';\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\nimport { ColorProviderRegistry } from '../../common/modes.js';\nimport { getColors } from './color.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nvar MAX_DECORATORS = 500;\n\nvar ColorDetector =\n/** @class */\nfunction (_super) {\n  __extends(ColorDetector, _super);\n\n  function ColorDetector(_editor, _codeEditorService, _configurationService) {\n    var _this = _super.call(this) || this;\n\n    _this._editor = _editor;\n    _this._codeEditorService = _codeEditorService;\n    _this._configurationService = _configurationService;\n    _this._localToDispose = _this._register(new DisposableStore());\n    _this._decorationsIds = [];\n    _this._colorDatas = new Map();\n    _this._colorDecoratorIds = [];\n    _this._decorationsTypes = new Set();\n\n    _this._register(_editor.onDidChangeModel(function (e) {\n      _this._isEnabled = _this.isEnabled();\n\n      _this.onModelChanged();\n    }));\n\n    _this._register(_editor.onDidChangeModelLanguage(function (e) {\n      return _this.onModelChanged();\n    }));\n\n    _this._register(ColorProviderRegistry.onDidChange(function (e) {\n      return _this.onModelChanged();\n    }));\n\n    _this._register(_editor.onDidChangeConfiguration(function (e) {\n      var prevIsEnabled = _this._isEnabled;\n      _this._isEnabled = _this.isEnabled();\n\n      if (prevIsEnabled !== _this._isEnabled) {\n        if (_this._isEnabled) {\n          _this.onModelChanged();\n        } else {\n          _this.removeAllDecorations();\n        }\n      }\n    }));\n\n    _this._timeoutTimer = null;\n    _this._computePromise = null;\n    _this._isEnabled = _this.isEnabled();\n\n    _this.onModelChanged();\n\n    return _this;\n  }\n\n  ColorDetector.prototype.isEnabled = function () {\n    var model = this._editor.getModel();\n\n    if (!model) {\n      return false;\n    }\n\n    var languageId = model.getLanguageIdentifier(); // handle deprecated settings. [languageId].colorDecorators.enable\n\n    var deprecatedConfig = this._configurationService.getValue(languageId.language);\n\n    if (deprecatedConfig) {\n      var colorDecorators = deprecatedConfig['colorDecorators']; // deprecatedConfig.valueOf('.colorDecorators.enable');\n\n      if (colorDecorators && colorDecorators['enable'] !== undefined && !colorDecorators['enable']) {\n        return colorDecorators['enable'];\n      }\n    }\n\n    return this._editor.getConfiguration().contribInfo.colorDecorators;\n  };\n\n  ColorDetector.prototype.getId = function () {\n    return ColorDetector.ID;\n  };\n\n  ColorDetector.get = function (editor) {\n    return editor.getContribution(this.ID);\n  };\n\n  ColorDetector.prototype.dispose = function () {\n    this.stop();\n    this.removeAllDecorations();\n\n    _super.prototype.dispose.call(this);\n  };\n\n  ColorDetector.prototype.onModelChanged = function () {\n    var _this = this;\n\n    this.stop();\n\n    if (!this._isEnabled) {\n      return;\n    }\n\n    var model = this._editor.getModel();\n\n    if (!model || !ColorProviderRegistry.has(model)) {\n      return;\n    }\n\n    this._localToDispose.add(this._editor.onDidChangeModelContent(function (e) {\n      if (!_this._timeoutTimer) {\n        _this._timeoutTimer = new TimeoutTimer();\n\n        _this._timeoutTimer.cancelAndSet(function () {\n          _this._timeoutTimer = null;\n\n          _this.beginCompute();\n        }, ColorDetector.RECOMPUTE_TIME);\n      }\n    }));\n\n    this.beginCompute();\n  };\n\n  ColorDetector.prototype.beginCompute = function () {\n    var _this = this;\n\n    this._computePromise = createCancelablePromise(function (token) {\n      var model = _this._editor.getModel();\n\n      if (!model) {\n        return Promise.resolve([]);\n      }\n\n      return getColors(model, token);\n    });\n\n    this._computePromise.then(function (colorInfos) {\n      _this.updateDecorations(colorInfos);\n\n      _this.updateColorDecorators(colorInfos);\n\n      _this._computePromise = null;\n    }, onUnexpectedError);\n  };\n\n  ColorDetector.prototype.stop = function () {\n    if (this._timeoutTimer) {\n      this._timeoutTimer.cancel();\n\n      this._timeoutTimer = null;\n    }\n\n    if (this._computePromise) {\n      this._computePromise.cancel();\n\n      this._computePromise = null;\n    }\n\n    this._localToDispose.clear();\n  };\n\n  ColorDetector.prototype.updateDecorations = function (colorDatas) {\n    var _this = this;\n\n    var decorations = colorDatas.map(function (c) {\n      return {\n        range: {\n          startLineNumber: c.colorInfo.range.startLineNumber,\n          startColumn: c.colorInfo.range.startColumn,\n          endLineNumber: c.colorInfo.range.endLineNumber,\n          endColumn: c.colorInfo.range.endColumn\n        },\n        options: ModelDecorationOptions.EMPTY\n      };\n    });\n    this._decorationsIds = this._editor.deltaDecorations(this._decorationsIds, decorations);\n    this._colorDatas = new Map();\n\n    this._decorationsIds.forEach(function (id, i) {\n      return _this._colorDatas.set(id, colorDatas[i]);\n    });\n  };\n\n  ColorDetector.prototype.updateColorDecorators = function (colorData) {\n    var _this = this;\n\n    var decorations = [];\n    var newDecorationsTypes = {};\n\n    for (var i = 0; i < colorData.length && decorations.length < MAX_DECORATORS; i++) {\n      var _a = colorData[i].colorInfo.color,\n          red = _a.red,\n          green = _a.green,\n          blue = _a.blue,\n          alpha = _a.alpha;\n      var rgba = new RGBA(Math.round(red * 255), Math.round(green * 255), Math.round(blue * 255), alpha);\n      var subKey = hash(rgba).toString(16);\n      var color = \"rgba(\" + rgba.r + \", \" + rgba.g + \", \" + rgba.b + \", \" + rgba.a + \")\";\n      var key = 'colorBox-' + subKey;\n\n      if (!this._decorationsTypes.has(key) && !newDecorationsTypes[key]) {\n        this._codeEditorService.registerDecorationType(key, {\n          before: {\n            contentText: ' ',\n            border: 'solid 0.1em #000',\n            margin: '0.1em 0.2em 0 0.2em',\n            width: '0.8em',\n            height: '0.8em',\n            backgroundColor: color\n          },\n          dark: {\n            before: {\n              border: 'solid 0.1em #eee'\n            }\n          }\n        });\n      }\n\n      newDecorationsTypes[key] = true;\n      decorations.push({\n        range: {\n          startLineNumber: colorData[i].colorInfo.range.startLineNumber,\n          startColumn: colorData[i].colorInfo.range.startColumn,\n          endLineNumber: colorData[i].colorInfo.range.endLineNumber,\n          endColumn: colorData[i].colorInfo.range.endColumn\n        },\n        options: this._codeEditorService.resolveDecorationOptions(key, true)\n      });\n    }\n\n    this._decorationsTypes.forEach(function (subType) {\n      if (!newDecorationsTypes[subType]) {\n        _this._codeEditorService.removeDecorationType(subType);\n      }\n    });\n\n    this._colorDecoratorIds = this._editor.deltaDecorations(this._colorDecoratorIds, decorations);\n  };\n\n  ColorDetector.prototype.removeAllDecorations = function () {\n    var _this = this;\n\n    this._decorationsIds = this._editor.deltaDecorations(this._decorationsIds, []);\n    this._colorDecoratorIds = this._editor.deltaDecorations(this._colorDecoratorIds, []);\n\n    this._decorationsTypes.forEach(function (subType) {\n      _this._codeEditorService.removeDecorationType(subType);\n    });\n  };\n\n  ColorDetector.prototype.getColorData = function (position) {\n    var _this = this;\n\n    var model = this._editor.getModel();\n\n    if (!model) {\n      return null;\n    }\n\n    var decorations = model.getDecorationsInRange(Range.fromPositions(position, position)).filter(function (d) {\n      return _this._colorDatas.has(d.id);\n    });\n\n    if (decorations.length === 0) {\n      return null;\n    }\n\n    return this._colorDatas.get(decorations[0].id);\n  };\n\n  ColorDetector.ID = 'editor.contrib.colorDetector';\n  ColorDetector.RECOMPUTE_TIME = 1000; // ms\n\n  ColorDetector = __decorate([__param(1, ICodeEditorService), __param(2, IConfigurationService)], ColorDetector);\n  return ColorDetector;\n}(Disposable);\n\nexport { ColorDetector };\nregisterEditorContribution(ColorDetector);","map":null,"metadata":{},"sourceType":"module"}