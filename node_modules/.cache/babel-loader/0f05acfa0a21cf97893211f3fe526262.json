{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { illegalArgument } from '../../../base/common/errors.js';\nimport { UILabelProvider, AriaLabelProvider } from '../../../base/common/keybindingLabels.js';\nimport { ResolvedKeybinding, ResolvedKeybindingPart } from '../../../base/common/keyCodes.js';\n\nvar BaseResolvedKeybinding =\n/** @class */\nfunction (_super) {\n  __extends(BaseResolvedKeybinding, _super);\n\n  function BaseResolvedKeybinding(os, parts) {\n    var _this = _super.call(this) || this;\n\n    if (parts.length === 0) {\n      throw illegalArgument(\"parts\");\n    }\n\n    _this._os = os;\n    _this._parts = parts;\n    return _this;\n  }\n\n  BaseResolvedKeybinding.prototype.getLabel = function () {\n    var _this = this;\n\n    return UILabelProvider.toLabel(this._os, this._parts, function (keybinding) {\n      return _this._getLabel(keybinding);\n    });\n  };\n\n  BaseResolvedKeybinding.prototype.getAriaLabel = function () {\n    var _this = this;\n\n    return AriaLabelProvider.toLabel(this._os, this._parts, function (keybinding) {\n      return _this._getAriaLabel(keybinding);\n    });\n  };\n\n  BaseResolvedKeybinding.prototype.isChord = function () {\n    return this._parts.length > 1;\n  };\n\n  BaseResolvedKeybinding.prototype.getParts = function () {\n    var _this = this;\n\n    return this._parts.map(function (keybinding) {\n      return _this._getPart(keybinding);\n    });\n  };\n\n  BaseResolvedKeybinding.prototype._getPart = function (keybinding) {\n    return new ResolvedKeybindingPart(keybinding.ctrlKey, keybinding.shiftKey, keybinding.altKey, keybinding.metaKey, this._getLabel(keybinding), this._getAriaLabel(keybinding));\n  };\n\n  BaseResolvedKeybinding.prototype.getDispatchParts = function () {\n    var _this = this;\n\n    return this._parts.map(function (keybinding) {\n      return _this._getDispatchPart(keybinding);\n    });\n  };\n\n  return BaseResolvedKeybinding;\n}(ResolvedKeybinding);\n\nexport { BaseResolvedKeybinding };","map":null,"metadata":{},"sourceType":"module"}