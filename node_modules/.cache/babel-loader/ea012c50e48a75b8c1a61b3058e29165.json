{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { RunOnceScheduler, createCancelablePromise } from '../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\n\nvar HoverOperation =\n/** @class */\nfunction () {\n  function HoverOperation(computer, success, error, progress, hoverTime) {\n    var _this = this;\n\n    this._computer = computer;\n    this._state = 0\n    /* IDLE */\n    ;\n    this._hoverTime = hoverTime;\n    this._firstWaitScheduler = new RunOnceScheduler(function () {\n      return _this._triggerAsyncComputation();\n    }, 0);\n    this._secondWaitScheduler = new RunOnceScheduler(function () {\n      return _this._triggerSyncComputation();\n    }, 0);\n    this._loadingMessageScheduler = new RunOnceScheduler(function () {\n      return _this._showLoadingMessage();\n    }, 0);\n    this._asyncComputationPromise = null;\n    this._asyncComputationPromiseDone = false;\n    this._completeCallback = success;\n    this._errorCallback = error;\n    this._progressCallback = progress;\n  }\n\n  HoverOperation.prototype.setHoverTime = function (hoverTime) {\n    this._hoverTime = hoverTime;\n  };\n\n  HoverOperation.prototype._firstWaitTime = function () {\n    return this._hoverTime / 2;\n  };\n\n  HoverOperation.prototype._secondWaitTime = function () {\n    return this._hoverTime / 2;\n  };\n\n  HoverOperation.prototype._loadingMessageTime = function () {\n    return 3 * this._hoverTime;\n  };\n\n  HoverOperation.prototype._triggerAsyncComputation = function () {\n    var _this = this;\n\n    this._state = 2\n    /* SECOND_WAIT */\n    ;\n\n    this._secondWaitScheduler.schedule(this._secondWaitTime());\n\n    if (this._computer.computeAsync) {\n      this._asyncComputationPromiseDone = false;\n      this._asyncComputationPromise = createCancelablePromise(function (token) {\n        return _this._computer.computeAsync(token);\n      });\n\n      this._asyncComputationPromise.then(function (asyncResult) {\n        _this._asyncComputationPromiseDone = true;\n\n        _this._withAsyncResult(asyncResult);\n      }, function (e) {\n        return _this._onError(e);\n      });\n    } else {\n      this._asyncComputationPromiseDone = true;\n    }\n  };\n\n  HoverOperation.prototype._triggerSyncComputation = function () {\n    if (this._computer.computeSync) {\n      this._computer.onResult(this._computer.computeSync(), true);\n    }\n\n    if (this._asyncComputationPromiseDone) {\n      this._state = 0\n      /* IDLE */\n      ;\n\n      this._onComplete(this._computer.getResult());\n    } else {\n      this._state = 3\n      /* WAITING_FOR_ASYNC_COMPUTATION */\n      ;\n\n      this._onProgress(this._computer.getResult());\n    }\n  };\n\n  HoverOperation.prototype._showLoadingMessage = function () {\n    if (this._state === 3\n    /* WAITING_FOR_ASYNC_COMPUTATION */\n    ) {\n        this._onProgress(this._computer.getResultWithLoadingMessage());\n      }\n  };\n\n  HoverOperation.prototype._withAsyncResult = function (asyncResult) {\n    if (asyncResult) {\n      this._computer.onResult(asyncResult, false);\n    }\n\n    if (this._state === 3\n    /* WAITING_FOR_ASYNC_COMPUTATION */\n    ) {\n        this._state = 0\n        /* IDLE */\n        ;\n\n        this._onComplete(this._computer.getResult());\n      }\n  };\n\n  HoverOperation.prototype._onComplete = function (value) {\n    if (this._completeCallback) {\n      this._completeCallback(value);\n    }\n  };\n\n  HoverOperation.prototype._onError = function (error) {\n    if (this._errorCallback) {\n      this._errorCallback(error);\n    } else {\n      onUnexpectedError(error);\n    }\n  };\n\n  HoverOperation.prototype._onProgress = function (value) {\n    if (this._progressCallback) {\n      this._progressCallback(value);\n    }\n  };\n\n  HoverOperation.prototype.start = function (mode) {\n    if (mode === 0\n    /* Delayed */\n    ) {\n        if (this._state === 0\n        /* IDLE */\n        ) {\n            this._state = 1\n            /* FIRST_WAIT */\n            ;\n\n            this._firstWaitScheduler.schedule(this._firstWaitTime());\n\n            this._loadingMessageScheduler.schedule(this._loadingMessageTime());\n          }\n      } else {\n      switch (this._state) {\n        case 0\n        /* IDLE */\n        :\n          this._triggerAsyncComputation();\n\n          this._secondWaitScheduler.cancel();\n\n          this._triggerSyncComputation();\n\n          break;\n\n        case 2\n        /* SECOND_WAIT */\n        :\n          this._secondWaitScheduler.cancel();\n\n          this._triggerSyncComputation();\n\n          break;\n      }\n    }\n  };\n\n  HoverOperation.prototype.cancel = function () {\n    this._loadingMessageScheduler.cancel();\n\n    if (this._state === 1\n    /* FIRST_WAIT */\n    ) {\n        this._firstWaitScheduler.cancel();\n      }\n\n    if (this._state === 2\n    /* SECOND_WAIT */\n    ) {\n        this._secondWaitScheduler.cancel();\n\n        if (this._asyncComputationPromise) {\n          this._asyncComputationPromise.cancel();\n\n          this._asyncComputationPromise = null;\n        }\n      }\n\n    if (this._state === 3\n    /* WAITING_FOR_ASYNC_COMPUTATION */\n    ) {\n        if (this._asyncComputationPromise) {\n          this._asyncComputationPromise.cancel();\n\n          this._asyncComputationPromise = null;\n        }\n      }\n\n    this._state = 0\n    /* IDLE */\n    ;\n  };\n\n  return HoverOperation;\n}();\n\nexport { HoverOperation };","map":null,"metadata":{},"sourceType":"module"}