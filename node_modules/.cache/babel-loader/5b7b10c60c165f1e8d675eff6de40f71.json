{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport * as nls from '../../../nls.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { dispose, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { IContextKeyService, RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { IStorageService } from '../../../platform/storage/common/storage.js';\nimport { ReferenceWidget, LayoutData } from './referencesWidget.js';\nimport { Range } from '../../common/core/range.js';\nimport { Position } from '../../common/core/position.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nexport var ctxReferenceSearchVisible = new RawContextKey('referenceSearchVisible', false);\n\nvar ReferencesController =\n/** @class */\nfunction () {\n  function ReferencesController(_defaultTreeKeyboardSupport, editor, contextKeyService, _editorService, _notificationService, _instantiationService, _storageService, _configurationService) {\n    this._defaultTreeKeyboardSupport = _defaultTreeKeyboardSupport;\n    this._editorService = _editorService;\n    this._notificationService = _notificationService;\n    this._instantiationService = _instantiationService;\n    this._storageService = _storageService;\n    this._configurationService = _configurationService;\n    this._disposables = new DisposableStore();\n    this._requestIdPool = 0;\n    this._ignoreModelChangeEvent = false;\n    this._editor = editor;\n    this._referenceSearchVisible = ctxReferenceSearchVisible.bindTo(contextKeyService);\n  }\n\n  ReferencesController.get = function (editor) {\n    return editor.getContribution(ReferencesController.ID);\n  };\n\n  ReferencesController.prototype.getId = function () {\n    return ReferencesController.ID;\n  };\n\n  ReferencesController.prototype.dispose = function () {\n    this._referenceSearchVisible.reset();\n\n    dispose(this._disposables);\n\n    if (this._widget) {\n      dispose(this._widget);\n      this._widget = undefined;\n    }\n\n    if (this._model) {\n      dispose(this._model);\n      this._model = undefined;\n    }\n  };\n\n  ReferencesController.prototype.toggleWidget = function (range, modelPromise, options) {\n    var _this = this; // close current widget and return early is position didn't change\n\n\n    var widgetPosition;\n\n    if (this._widget) {\n      widgetPosition = this._widget.position;\n    }\n\n    this.closeWidget();\n\n    if (!!widgetPosition && range.containsPosition(widgetPosition)) {\n      return;\n    }\n\n    this._referenceSearchVisible.set(true); // close the widget on model/mode changes\n\n\n    this._disposables.add(this._editor.onDidChangeModelLanguage(function () {\n      _this.closeWidget();\n    }));\n\n    this._disposables.add(this._editor.onDidChangeModel(function () {\n      if (!_this._ignoreModelChangeEvent) {\n        _this.closeWidget();\n      }\n    }));\n\n    var storageKey = 'peekViewLayout';\n    var data = LayoutData.fromJSON(this._storageService.get(storageKey, 0\n    /* GLOBAL */\n    , '{}'));\n    this._widget = this._instantiationService.createInstance(ReferenceWidget, this._editor, this._defaultTreeKeyboardSupport, data);\n\n    this._widget.setTitle(nls.localize('labelLoading', \"Loading...\"));\n\n    this._widget.show(range);\n\n    this._disposables.add(this._widget.onDidClose(function () {\n      modelPromise.cancel();\n\n      if (_this._widget) {\n        _this._storageService.store(storageKey, JSON.stringify(_this._widget.layoutData), 0\n        /* GLOBAL */\n        );\n\n        _this._widget = undefined;\n      }\n\n      _this.closeWidget();\n    }));\n\n    this._disposables.add(this._widget.onDidSelectReference(function (event) {\n      var element = event.element,\n          kind = event.kind;\n\n      switch (kind) {\n        case 'open':\n          if (event.source === 'editor' && _this._configurationService.getValue('editor.stablePeek')) {\n            // when stable peek is configured we don't close\n            // the peek window on selecting the editor\n            break;\n          }\n\n        case 'side':\n          if (element) {\n            _this.openReference(element, kind === 'side');\n          }\n\n          break;\n\n        case 'goto':\n          if (element) {\n            if (options.onGoto) {\n              options.onGoto(element);\n            } else {\n              _this._gotoReference(element);\n            }\n          }\n\n          break;\n      }\n    }));\n\n    var requestId = ++this._requestIdPool;\n    modelPromise.then(function (model) {\n      // still current request? widget still open?\n      if (requestId !== _this._requestIdPool || !_this._widget) {\n        return undefined;\n      }\n\n      if (_this._model) {\n        _this._model.dispose();\n      }\n\n      _this._model = model; // show widget\n\n      return _this._widget.setModel(_this._model).then(function () {\n        if (_this._widget && _this._model && _this._editor.hasModel()) {\n          // might have been closed\n          // set title\n          _this._widget.setMetaTitle(options.getMetaTitle(_this._model)); // set 'best' selection\n\n\n          var uri = _this._editor.getModel().uri;\n\n          var pos = new Position(range.startLineNumber, range.startColumn);\n\n          var selection = _this._model.nearestReference(uri, pos);\n\n          if (selection) {\n            return _this._widget.setSelection(selection);\n          }\n        }\n\n        return undefined;\n      });\n    }, function (error) {\n      _this._notificationService.error(error);\n    });\n  };\n\n  ReferencesController.prototype.goToNextOrPreviousReference = function (fwd) {\n    return __awaiter(this, void 0, void 0, function () {\n      var currentPosition, source, target, editorFocus;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this._editor.hasModel() || !this._model || !this._widget) {\n              // can be called while still resolving...\n              return [2\n              /*return*/\n              ];\n            }\n\n            currentPosition = this._widget.position;\n\n            if (!currentPosition) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            source = this._model.nearestReference(this._editor.getModel().uri, currentPosition);\n\n            if (!source) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            target = this._model.nextOrPreviousReference(source, fwd);\n            editorFocus = this._editor.hasTextFocus();\n            return [4\n            /*yield*/\n            , this._widget.setSelection(target)];\n\n          case 1:\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , this._gotoReference(target)];\n\n          case 2:\n            _a.sent();\n\n            if (editorFocus) {\n              this._editor.focus();\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  ReferencesController.prototype.closeWidget = function () {\n    if (this._widget) {\n      dispose(this._widget);\n      this._widget = undefined;\n    }\n\n    this._referenceSearchVisible.reset();\n\n    this._disposables.clear();\n\n    if (this._model) {\n      dispose(this._model);\n      this._model = undefined;\n    }\n\n    this._editor.focus();\n\n    this._requestIdPool += 1; // Cancel pending requests\n  };\n\n  ReferencesController.prototype._gotoReference = function (ref) {\n    var _this = this;\n\n    if (this._widget) {\n      this._widget.hide();\n    }\n\n    this._ignoreModelChangeEvent = true;\n    var range = Range.lift(ref.range).collapseToStart();\n    return this._editorService.openCodeEditor({\n      resource: ref.uri,\n      options: {\n        selection: range\n      }\n    }, this._editor).then(function (openedEditor) {\n      _this._ignoreModelChangeEvent = false;\n\n      if (!openedEditor || openedEditor !== _this._editor) {\n        // TODO@Alex TODO@Joh\n        // when opening the current reference we might end up\n        // in a different editor instance. that means we also have\n        // a different instance of this reference search controller\n        // and cannot hold onto the widget (which likely doesn't\n        // exist). Instead of bailing out we should find the\n        // 'sister' action and pass our current model on to it.\n        _this.closeWidget();\n\n        return;\n      }\n\n      if (_this._widget) {\n        _this._widget.show(range);\n\n        _this._widget.focus();\n      }\n    }, function (err) {\n      _this._ignoreModelChangeEvent = false;\n      onUnexpectedError(err);\n    });\n  };\n\n  ReferencesController.prototype.openReference = function (ref, sideBySide) {\n    // clear stage\n    if (!sideBySide) {\n      this.closeWidget();\n    }\n\n    var uri = ref.uri,\n        range = ref.range;\n\n    this._editorService.openCodeEditor({\n      resource: uri,\n      options: {\n        selection: range\n      }\n    }, this._editor, sideBySide);\n  };\n\n  ReferencesController.ID = 'editor.contrib.referencesController';\n  ReferencesController = __decorate([__param(2, IContextKeyService), __param(3, ICodeEditorService), __param(4, INotificationService), __param(5, IInstantiationService), __param(6, IStorageService), __param(7, IConfigurationService)], ReferencesController);\n  return ReferencesController;\n}();\n\nexport { ReferencesController };","map":null,"metadata":{},"sourceType":"module"}