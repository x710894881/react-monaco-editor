{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport * as nls from '../../../nls.js';\nimport { illegalArgument, onUnexpectedError } from '../../../base/common/errors.js';\nimport { IContextKeyService, ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\nimport { registerEditorAction, registerEditorContribution, EditorAction, EditorCommand, registerEditorCommand, registerDefaultLanguageCommand } from '../../browser/editorExtensions.js';\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\nimport { RenameInputField, CONTEXT_RENAME_INPUT_VISIBLE } from './renameInputField.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { RenameProviderRegistry } from '../../common/modes.js';\nimport { Position } from '../../common/core/position.js';\nimport { alert } from '../../../base/browser/ui/aria/aria.js';\nimport { Range } from '../../common/core/range.js';\nimport { MessageController } from '../message/messageController.js';\nimport { EditorState } from '../../browser/core/editorState.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nimport { IBulkEditService } from '../../browser/services/bulkEditService.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { createCancelablePromise } from '../../../base/common/async.js';\n\nvar RenameSkeleton =\n/** @class */\nfunction () {\n  function RenameSkeleton(model, position) {\n    this.model = model;\n    this.position = position;\n    this._providers = RenameProviderRegistry.ordered(model);\n  }\n\n  RenameSkeleton.prototype.hasProvider = function () {\n    return this._providers.length > 0;\n  };\n\n  RenameSkeleton.prototype.resolveRenameLocation = function (token) {\n    return __awaiter(this, void 0, void 0, function () {\n      var firstProvider, res, word;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            firstProvider = this._providers[0];\n\n            if (!firstProvider) {\n              return [2\n              /*return*/\n              , undefined];\n            }\n\n            if (!firstProvider.resolveRenameLocation) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , firstProvider.resolveRenameLocation(this.model, this.position, token)];\n\n          case 1:\n            res = _a.sent();\n            _a.label = 2;\n\n          case 2:\n            if (!res) {\n              word = this.model.getWordAtPosition(this.position);\n\n              if (word) {\n                return [2\n                /*return*/\n                , {\n                  range: new Range(this.position.lineNumber, word.startColumn, this.position.lineNumber, word.endColumn),\n                  text: word.word\n                }];\n              }\n            }\n\n            return [2\n            /*return*/\n            , res];\n        }\n      });\n    });\n  };\n\n  RenameSkeleton.prototype.provideRenameEdits = function (newName, i, rejects, token) {\n    return __awaiter(this, void 0, void 0, function () {\n      var provider, result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            provider = this._providers[i];\n\n            if (!provider) {\n              return [2\n              /*return*/\n              , {\n                edits: [],\n                rejectReason: rejects.join('\\n')\n              }];\n            }\n\n            return [4\n            /*yield*/\n            , provider.provideRenameEdits(this.model, this.position, newName, token)];\n\n          case 1:\n            result = _a.sent();\n\n            if (!result) {\n              return [2\n              /*return*/\n              , this.provideRenameEdits(newName, i + 1, rejects.concat(nls.localize('no result', \"No result.\")), token)];\n            } else if (result.rejectReason) {\n              return [2\n              /*return*/\n              , this.provideRenameEdits(newName, i + 1, rejects.concat(result.rejectReason), token)];\n            }\n\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n\n  return RenameSkeleton;\n}();\n\nexport function rename(model, position, newName) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      return [2\n      /*return*/\n      , new RenameSkeleton(model, position).provideRenameEdits(newName, 0, [], CancellationToken.None)];\n    });\n  });\n} // ---  register actions and commands\n\nvar RenameController =\n/** @class */\nfunction (_super) {\n  __extends(RenameController, _super);\n\n  function RenameController(editor, _notificationService, _bulkEditService, _progressService, _contextKeyService, _themeService) {\n    var _this = _super.call(this) || this;\n\n    _this.editor = editor;\n    _this._notificationService = _notificationService;\n    _this._bulkEditService = _bulkEditService;\n    _this._progressService = _progressService;\n    _this._contextKeyService = _contextKeyService;\n    _this._themeService = _themeService;\n    _this._renameOperationIdPool = 1;\n\n    _this._register(_this.editor.onDidChangeModel(function () {\n      return _this.onModelChanged();\n    }));\n\n    _this._register(_this.editor.onDidChangeModelLanguage(function () {\n      return _this.onModelChanged();\n    }));\n\n    _this._register(_this.editor.onDidChangeCursorSelection(function () {\n      return _this.onModelChanged();\n    }));\n\n    return _this;\n  }\n\n  RenameController.get = function (editor) {\n    return editor.getContribution(RenameController.ID);\n  };\n\n  Object.defineProperty(RenameController.prototype, \"renameInputField\", {\n    get: function () {\n      if (!this._renameInputField) {\n        this._renameInputField = this._register(new RenameInputField(this.editor, this._themeService, this._contextKeyService));\n      }\n\n      return this._renameInputField;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  RenameController.prototype.getId = function () {\n    return RenameController.ID;\n  };\n\n  RenameController.prototype.run = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var id;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        if (this._activeRename) {\n          this._activeRename.operation.cancel();\n        }\n\n        id = this._renameOperationIdPool++;\n        this._activeRename = {\n          id: id,\n          operation: createCancelablePromise(function (token) {\n            return _this.doRename(token, id);\n          })\n        };\n        return [2\n        /*return*/\n        , this._activeRename.operation];\n      });\n    });\n  };\n\n  RenameController.prototype.doRename = function (token, id) {\n    return __awaiter(this, void 0, void 0, function () {\n      var position, skeleton, loc, resolveLocationOperation, e_1, selection, selectionStart, selectionEnd;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this.editor.hasModel()) {\n              return [2\n              /*return*/\n              , undefined];\n            }\n\n            position = this.editor.getPosition();\n            skeleton = new RenameSkeleton(this.editor.getModel(), position);\n\n            if (!skeleton.hasProvider()) {\n              return [2\n              /*return*/\n              , undefined];\n            }\n\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            resolveLocationOperation = skeleton.resolveRenameLocation(token);\n\n            this._progressService.showWhile(resolveLocationOperation, 250);\n\n            return [4\n            /*yield*/\n            , resolveLocationOperation];\n\n          case 2:\n            loc = _a.sent();\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            e_1 = _a.sent();\n            MessageController.get(this.editor).showMessage(e_1 || nls.localize('resolveRenameLocationFailed', \"An unknown error occurred while resolving rename location\"), position);\n            return [2\n            /*return*/\n            , undefined];\n\n          case 4:\n            if (!loc) {\n              return [2\n              /*return*/\n              , undefined];\n            }\n\n            if (loc.rejectReason) {\n              MessageController.get(this.editor).showMessage(loc.rejectReason, position);\n              return [2\n              /*return*/\n              , undefined];\n            }\n\n            if (!this._activeRename || this._activeRename.id !== id) {\n              return [2\n              /*return*/\n              , undefined];\n            }\n\n            selection = this.editor.getSelection();\n            selectionStart = 0;\n            selectionEnd = loc.text.length;\n\n            if (!Range.isEmpty(selection) && !Range.spansMultipleLines(selection) && Range.containsRange(loc.range, selection)) {\n              selectionStart = Math.max(0, selection.startColumn - loc.range.startColumn);\n              selectionEnd = Math.min(loc.range.endColumn, selection.endColumn) - loc.range.startColumn;\n            }\n\n            return [2\n            /*return*/\n            , this.renameInputField.getInput(loc.range, loc.text, selectionStart, selectionEnd).then(function (newNameOrFocusFlag) {\n              if (typeof newNameOrFocusFlag === 'boolean') {\n                if (newNameOrFocusFlag) {\n                  _this.editor.focus();\n                }\n\n                return undefined;\n              }\n\n              _this.editor.focus();\n\n              var state = new EditorState(_this.editor, 4\n              /* Position */\n              | 1\n              /* Value */\n              | 2\n              /* Selection */\n              | 8\n              /* Scroll */\n              );\n              var renameOperation = Promise.resolve(skeleton.provideRenameEdits(newNameOrFocusFlag, 0, [], token).then(function (result) {\n                if (!_this.editor.hasModel()) {\n                  return undefined;\n                }\n\n                if (result.rejectReason) {\n                  if (state.validate(_this.editor)) {\n                    MessageController.get(_this.editor).showMessage(result.rejectReason, _this.editor.getPosition());\n                  } else {\n                    _this._notificationService.info(result.rejectReason);\n                  }\n\n                  return undefined;\n                }\n\n                return _this._bulkEditService.apply(result, {\n                  editor: _this.editor\n                }).then(function (result) {\n                  // alert\n                  if (result.ariaSummary) {\n                    alert(nls.localize('aria', \"Successfully renamed '{0}' to '{1}'. Summary: {2}\", loc.text, newNameOrFocusFlag, result.ariaSummary));\n                  }\n                });\n              }, function (err) {\n                _this._notificationService.error(nls.localize('rename.failed', \"Rename failed to execute.\"));\n\n                return Promise.reject(err);\n              }));\n\n              _this._progressService.showWhile(renameOperation, 250);\n\n              return renameOperation;\n            })];\n        }\n      });\n    });\n  };\n\n  RenameController.prototype.acceptRenameInput = function () {\n    if (this._renameInputField) {\n      this._renameInputField.acceptInput();\n    }\n  };\n\n  RenameController.prototype.cancelRenameInput = function () {\n    if (this._renameInputField) {\n      this._renameInputField.cancelInput(true);\n    }\n  };\n\n  RenameController.prototype.onModelChanged = function () {\n    if (this._activeRename) {\n      this._activeRename.operation.cancel();\n\n      this._activeRename = undefined;\n    }\n  };\n\n  RenameController.ID = 'editor.contrib.renameController';\n  RenameController = __decorate([__param(1, INotificationService), __param(2, IBulkEditService), __param(3, IEditorProgressService), __param(4, IContextKeyService), __param(5, IThemeService)], RenameController);\n  return RenameController;\n}(Disposable); // ---- action implementation\n\n\nvar RenameAction =\n/** @class */\nfunction (_super) {\n  __extends(RenameAction, _super);\n\n  function RenameAction() {\n    return _super.call(this, {\n      id: 'editor.action.rename',\n      label: nls.localize('rename.label', \"Rename Symbol\"),\n      alias: 'Rename Symbol',\n      precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasRenameProvider),\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 60\n        /* F2 */\n        ,\n        weight: 100\n        /* EditorContrib */\n\n      },\n      menuOpts: {\n        group: '1_modification',\n        order: 1.1\n      }\n    }) || this;\n  }\n\n  RenameAction.prototype.runCommand = function (accessor, args) {\n    var _this = this;\n\n    var editorService = accessor.get(ICodeEditorService);\n\n    var _a = Array.isArray(args) && args || [undefined, undefined],\n        uri = _a[0],\n        pos = _a[1];\n\n    if (URI.isUri(uri) && Position.isIPosition(pos)) {\n      return editorService.openCodeEditor({\n        resource: uri\n      }, editorService.getActiveCodeEditor()).then(function (editor) {\n        if (!editor) {\n          return;\n        }\n\n        editor.setPosition(pos);\n        editor.invokeWithinContext(function (accessor) {\n          _this.reportTelemetry(accessor, editor);\n\n          return _this.run(accessor, editor);\n        });\n      }, onUnexpectedError);\n    }\n\n    return _super.prototype.runCommand.call(this, accessor, args);\n  };\n\n  RenameAction.prototype.run = function (accessor, editor) {\n    var controller = RenameController.get(editor);\n\n    if (controller) {\n      return controller.run();\n    }\n\n    return Promise.resolve();\n  };\n\n  return RenameAction;\n}(EditorAction);\n\nexport { RenameAction };\nregisterEditorContribution(RenameController);\nregisterEditorAction(RenameAction);\nvar RenameCommand = EditorCommand.bindToContribution(RenameController.get);\nregisterEditorCommand(new RenameCommand({\n  id: 'acceptRenameInput',\n  precondition: CONTEXT_RENAME_INPUT_VISIBLE,\n  handler: function (x) {\n    return x.acceptRenameInput();\n  },\n  kbOpts: {\n    weight: 100\n    /* EditorContrib */\n    + 99,\n    kbExpr: EditorContextKeys.focus,\n    primary: 3\n    /* Enter */\n\n  }\n}));\nregisterEditorCommand(new RenameCommand({\n  id: 'cancelRenameInput',\n  precondition: CONTEXT_RENAME_INPUT_VISIBLE,\n  handler: function (x) {\n    return x.cancelRenameInput();\n  },\n  kbOpts: {\n    weight: 100\n    /* EditorContrib */\n    + 99,\n    kbExpr: EditorContextKeys.focus,\n    primary: 9\n    /* Escape */\n    ,\n    secondary: [1024\n    /* Shift */\n    | 9\n    /* Escape */\n    ]\n  }\n})); // ---- api bridge command\n\nregisterDefaultLanguageCommand('_executeDocumentRenameProvider', function (model, position, args) {\n  var newName = args.newName;\n\n  if (typeof newName !== 'string') {\n    throw illegalArgument('newName');\n  }\n\n  return rename(model, position, newName);\n});","map":null,"metadata":{},"sourceType":"module"}