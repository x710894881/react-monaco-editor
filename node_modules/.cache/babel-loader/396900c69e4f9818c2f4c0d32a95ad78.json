{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../common/core/range.js';\n\nvar MoveCaretCommand =\n/** @class */\nfunction () {\n  function MoveCaretCommand(selection, isMovingLeft) {\n    this._selection = selection;\n    this._isMovingLeft = isMovingLeft;\n    this._cutStartIndex = -1;\n    this._cutEndIndex = -1;\n    this._moved = false;\n    this._selectionId = null;\n  }\n\n  MoveCaretCommand.prototype.getEditOperations = function (model, builder) {\n    var s = this._selection;\n    this._selectionId = builder.trackSelection(s);\n\n    if (s.startLineNumber !== s.endLineNumber) {\n      return;\n    }\n\n    if (this._isMovingLeft && s.startColumn === 0) {\n      return;\n    } else if (!this._isMovingLeft && s.endColumn === model.getLineMaxColumn(s.startLineNumber)) {\n      return;\n    }\n\n    var lineNumber = s.selectionStartLineNumber;\n    var lineContent = model.getLineContent(lineNumber);\n    var left;\n    var middle;\n    var right;\n\n    if (this._isMovingLeft) {\n      left = lineContent.substring(0, s.startColumn - 2);\n      middle = lineContent.substring(s.startColumn - 1, s.endColumn - 1);\n      right = lineContent.substring(s.startColumn - 2, s.startColumn - 1) + lineContent.substring(s.endColumn - 1);\n    } else {\n      left = lineContent.substring(0, s.startColumn - 1) + lineContent.substring(s.endColumn - 1, s.endColumn);\n      middle = lineContent.substring(s.startColumn - 1, s.endColumn - 1);\n      right = lineContent.substring(s.endColumn);\n    }\n\n    var newLineContent = left + middle + right;\n    builder.addEditOperation(new Range(lineNumber, 1, lineNumber, model.getLineMaxColumn(lineNumber)), null);\n    builder.addEditOperation(new Range(lineNumber, 1, lineNumber, 1), newLineContent);\n    this._cutStartIndex = s.startColumn + (this._isMovingLeft ? -1 : 1);\n    this._cutEndIndex = this._cutStartIndex + s.endColumn - s.startColumn;\n    this._moved = true;\n  };\n\n  MoveCaretCommand.prototype.computeCursorState = function (model, helper) {\n    var result = helper.getTrackedSelection(this._selectionId);\n\n    if (this._moved) {\n      result = result.setStartPosition(result.startLineNumber, this._cutStartIndex);\n      result = result.setEndPosition(result.startLineNumber, this._cutEndIndex);\n    }\n\n    return result;\n  };\n\n  return MoveCaretCommand;\n}();\n\nexport { MoveCaretCommand };","map":null,"metadata":{},"sourceType":"module"}