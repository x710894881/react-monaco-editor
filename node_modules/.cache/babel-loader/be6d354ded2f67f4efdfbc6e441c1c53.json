{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../core/range.js';\nimport { Selection } from '../core/selection.js';\n\nvar SurroundSelectionCommand =\n/** @class */\nfunction () {\n  function SurroundSelectionCommand(range, charBeforeSelection, charAfterSelection) {\n    this._range = range;\n    this._charBeforeSelection = charBeforeSelection;\n    this._charAfterSelection = charAfterSelection;\n  }\n\n  SurroundSelectionCommand.prototype.getEditOperations = function (model, builder) {\n    builder.addTrackedEditOperation(new Range(this._range.startLineNumber, this._range.startColumn, this._range.startLineNumber, this._range.startColumn), this._charBeforeSelection);\n    builder.addTrackedEditOperation(new Range(this._range.endLineNumber, this._range.endColumn, this._range.endLineNumber, this._range.endColumn), this._charAfterSelection);\n  };\n\n  SurroundSelectionCommand.prototype.computeCursorState = function (model, helper) {\n    var inverseEditOperations = helper.getInverseEditOperations();\n    var firstOperationRange = inverseEditOperations[0].range;\n    var secondOperationRange = inverseEditOperations[1].range;\n    return new Selection(firstOperationRange.endLineNumber, firstOperationRange.endColumn, secondOperationRange.endLineNumber, secondOperationRange.endColumn - this._charAfterSelection.length);\n  };\n\n  return SurroundSelectionCommand;\n}();\n\nexport { SurroundSelectionCommand };","map":null,"metadata":{},"sourceType":"module"}