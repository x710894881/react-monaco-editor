{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { localize } from '../../../nls.js';\nimport Severity from '../../../base/common/severity.js';\nexport var MarkerSeverity;\n\n(function (MarkerSeverity) {\n  MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\n  MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\n  MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\n  MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\n})(MarkerSeverity || (MarkerSeverity = {}));\n\n(function (MarkerSeverity) {\n  function compare(a, b) {\n    return b - a;\n  }\n\n  MarkerSeverity.compare = compare;\n\n  var _displayStrings = Object.create(null);\n\n  _displayStrings[MarkerSeverity.Error] = localize('sev.error', \"Error\");\n  _displayStrings[MarkerSeverity.Warning] = localize('sev.warning', \"Warning\");\n  _displayStrings[MarkerSeverity.Info] = localize('sev.info', \"Info\");\n\n  function toString(a) {\n    return _displayStrings[a] || '';\n  }\n\n  MarkerSeverity.toString = toString;\n\n  function fromSeverity(severity) {\n    switch (severity) {\n      case Severity.Error:\n        return MarkerSeverity.Error;\n\n      case Severity.Warning:\n        return MarkerSeverity.Warning;\n\n      case Severity.Info:\n        return MarkerSeverity.Info;\n\n      case Severity.Ignore:\n        return MarkerSeverity.Hint;\n    }\n  }\n\n  MarkerSeverity.fromSeverity = fromSeverity;\n\n  function toSeverity(severity) {\n    switch (severity) {\n      case MarkerSeverity.Error:\n        return Severity.Error;\n\n      case MarkerSeverity.Warning:\n        return Severity.Warning;\n\n      case MarkerSeverity.Info:\n        return Severity.Info;\n\n      case MarkerSeverity.Hint:\n        return Severity.Ignore;\n    }\n  }\n\n  MarkerSeverity.toSeverity = toSeverity;\n})(MarkerSeverity || (MarkerSeverity = {}));\n\nexport var IMarkerData;\n\n(function (IMarkerData) {\n  var emptyString = '';\n\n  function makeKey(markerData) {\n    return makeKeyOptionalMessage(markerData, true);\n  }\n\n  IMarkerData.makeKey = makeKey;\n\n  function makeKeyOptionalMessage(markerData, useMessage) {\n    var result = [emptyString];\n\n    if (markerData.source) {\n      result.push(markerData.source.replace('¦', '\\¦'));\n    } else {\n      result.push(emptyString);\n    }\n\n    if (markerData.code) {\n      result.push(markerData.code.replace('¦', '\\¦'));\n    } else {\n      result.push(emptyString);\n    }\n\n    if (markerData.severity !== undefined && markerData.severity !== null) {\n      result.push(MarkerSeverity.toString(markerData.severity));\n    } else {\n      result.push(emptyString);\n    } // Modifed to not include the message as part of the marker key to work around\n    // https://github.com/microsoft/vscode/issues/77475\n\n\n    if (markerData.message && useMessage) {\n      result.push(markerData.message.replace('¦', '\\¦'));\n    } else {\n      result.push(emptyString);\n    }\n\n    if (markerData.startLineNumber !== undefined && markerData.startLineNumber !== null) {\n      result.push(markerData.startLineNumber.toString());\n    } else {\n      result.push(emptyString);\n    }\n\n    if (markerData.startColumn !== undefined && markerData.startColumn !== null) {\n      result.push(markerData.startColumn.toString());\n    } else {\n      result.push(emptyString);\n    }\n\n    if (markerData.endLineNumber !== undefined && markerData.endLineNumber !== null) {\n      result.push(markerData.endLineNumber.toString());\n    } else {\n      result.push(emptyString);\n    }\n\n    if (markerData.endColumn !== undefined && markerData.endColumn !== null) {\n      result.push(markerData.endColumn.toString());\n    } else {\n      result.push(emptyString);\n    }\n\n    result.push(emptyString);\n    return result.join('¦');\n  }\n\n  IMarkerData.makeKeyOptionalMessage = makeKeyOptionalMessage;\n})(IMarkerData || (IMarkerData = {}));\n\nexport var IMarkerService = createDecorator('markerService');","map":null,"metadata":{},"sourceType":"module"}