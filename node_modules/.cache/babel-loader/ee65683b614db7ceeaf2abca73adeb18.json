{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport './scrollDecoration.css';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { scrollbarShadow } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\n\nvar ScrollDecorationViewPart =\n/** @class */\nfunction (_super) {\n  __extends(ScrollDecorationViewPart, _super);\n\n  function ScrollDecorationViewPart(context) {\n    var _this = _super.call(this, context) || this;\n\n    _this._scrollTop = 0;\n    _this._width = 0;\n\n    _this._updateWidth();\n\n    _this._shouldShow = false;\n    _this._useShadows = _this._context.configuration.editor.viewInfo.scrollbar.useShadows;\n    _this._domNode = createFastDomNode(document.createElement('div'));\n\n    _this._domNode.setAttribute('role', 'presentation');\n\n    _this._domNode.setAttribute('aria-hidden', 'true');\n\n    return _this;\n  }\n\n  ScrollDecorationViewPart.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n  };\n\n  ScrollDecorationViewPart.prototype._updateShouldShow = function () {\n    var newShouldShow = this._useShadows && this._scrollTop > 0;\n\n    if (this._shouldShow !== newShouldShow) {\n      this._shouldShow = newShouldShow;\n      return true;\n    }\n\n    return false;\n  };\n\n  ScrollDecorationViewPart.prototype.getDomNode = function () {\n    return this._domNode;\n  };\n\n  ScrollDecorationViewPart.prototype._updateWidth = function () {\n    var layoutInfo = this._context.configuration.editor.layoutInfo;\n    var newWidth = 0;\n\n    if (layoutInfo.renderMinimap === 0 || layoutInfo.minimapWidth > 0 && layoutInfo.minimapLeft === 0) {\n      newWidth = layoutInfo.width;\n    } else {\n      newWidth = layoutInfo.width - layoutInfo.minimapWidth - layoutInfo.verticalScrollbarWidth;\n    }\n\n    if (this._width !== newWidth) {\n      this._width = newWidth;\n      return true;\n    }\n\n    return false;\n  }; // --- begin event handlers\n\n\n  ScrollDecorationViewPart.prototype.onConfigurationChanged = function (e) {\n    var shouldRender = false;\n\n    if (e.viewInfo) {\n      this._useShadows = this._context.configuration.editor.viewInfo.scrollbar.useShadows;\n    }\n\n    if (e.layoutInfo) {\n      shouldRender = this._updateWidth();\n    }\n\n    return this._updateShouldShow() || shouldRender;\n  };\n\n  ScrollDecorationViewPart.prototype.onScrollChanged = function (e) {\n    this._scrollTop = e.scrollTop;\n    return this._updateShouldShow();\n  }; // --- end event handlers\n\n\n  ScrollDecorationViewPart.prototype.prepareRender = function (ctx) {// Nothing to read\n  };\n\n  ScrollDecorationViewPart.prototype.render = function (ctx) {\n    this._domNode.setWidth(this._width);\n\n    this._domNode.setClassName(this._shouldShow ? 'scroll-decoration' : '');\n  };\n\n  return ScrollDecorationViewPart;\n}(ViewPart);\n\nexport { ScrollDecorationViewPart };\nregisterThemingParticipant(function (theme, collector) {\n  var shadow = theme.getColor(scrollbarShadow);\n\n  if (shadow) {\n    collector.addRule(\".monaco-editor .scroll-decoration { box-shadow: \" + shadow + \" 0 6px 6px -6px inset; }\");\n  }\n});","map":null,"metadata":{},"sourceType":"module"}