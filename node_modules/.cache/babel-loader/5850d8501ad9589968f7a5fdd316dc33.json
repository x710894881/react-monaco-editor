{"ast":null,"code":"var ElementsDragAndDropData =\n/** @class */\nfunction () {\n  function ElementsDragAndDropData(elements) {\n    this.elements = elements;\n  }\n\n  ElementsDragAndDropData.prototype.update = function (dataTransfer) {// no-op\n  };\n\n  ElementsDragAndDropData.prototype.getData = function () {\n    return this.elements;\n  };\n\n  return ElementsDragAndDropData;\n}();\n\nexport { ElementsDragAndDropData };\n\nvar ExternalElementsDragAndDropData =\n/** @class */\nfunction () {\n  function ExternalElementsDragAndDropData(elements) {\n    this.elements = elements;\n  }\n\n  ExternalElementsDragAndDropData.prototype.update = function (dataTransfer) {// no-op\n  };\n\n  ExternalElementsDragAndDropData.prototype.getData = function () {\n    return this.elements;\n  };\n\n  return ExternalElementsDragAndDropData;\n}();\n\nexport { ExternalElementsDragAndDropData };\n\nvar DesktopDragAndDropData =\n/** @class */\nfunction () {\n  function DesktopDragAndDropData() {\n    this.types = [];\n    this.files = [];\n  }\n\n  DesktopDragAndDropData.prototype.update = function (dataTransfer) {\n    if (dataTransfer.types) {\n      this.types = [];\n      Array.prototype.push.apply(this.types, dataTransfer.types);\n    }\n\n    if (dataTransfer.files) {\n      this.files = [];\n      Array.prototype.push.apply(this.files, dataTransfer.files);\n      this.files = this.files.filter(function (f) {\n        return f.size || f.type;\n      });\n    }\n  };\n\n  DesktopDragAndDropData.prototype.getData = function () {\n    return {\n      types: this.types,\n      files: this.files\n    };\n  };\n\n  return DesktopDragAndDropData;\n}();\n\nexport { DesktopDragAndDropData };","map":null,"metadata":{},"sourceType":"module"}