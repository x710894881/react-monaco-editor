{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { windowOpenNoOpener } from '../../../base/browser/dom.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { CodeEditorServiceImpl } from '../../browser/services/codeEditorServiceImpl.js';\n\nvar StandaloneCodeEditorServiceImpl =\n/** @class */\nfunction (_super) {\n  __extends(StandaloneCodeEditorServiceImpl, _super);\n\n  function StandaloneCodeEditorServiceImpl() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  StandaloneCodeEditorServiceImpl.prototype.getActiveCodeEditor = function () {\n    return null; // not supported in the standalone case\n  };\n\n  StandaloneCodeEditorServiceImpl.prototype.openCodeEditor = function (input, source, sideBySide) {\n    if (!source) {\n      return Promise.resolve(null);\n    }\n\n    return Promise.resolve(this.doOpenEditor(source, input));\n  };\n\n  StandaloneCodeEditorServiceImpl.prototype.doOpenEditor = function (editor, input) {\n    var model = this.findModel(editor, input.resource);\n\n    if (!model) {\n      if (input.resource) {\n        var schema = input.resource.scheme;\n\n        if (schema === Schemas.http || schema === Schemas.https) {\n          // This is a fully qualified http or https URL\n          windowOpenNoOpener(input.resource.toString());\n          return editor;\n        }\n      }\n\n      return null;\n    }\n\n    var selection = input.options ? input.options.selection : null;\n\n    if (selection) {\n      if (typeof selection.endLineNumber === 'number' && typeof selection.endColumn === 'number') {\n        editor.setSelection(selection);\n        editor.revealRangeInCenter(selection, 1\n        /* Immediate */\n        );\n      } else {\n        var pos = {\n          lineNumber: selection.startLineNumber,\n          column: selection.startColumn\n        };\n        editor.setPosition(pos);\n        editor.revealPositionInCenter(pos, 1\n        /* Immediate */\n        );\n      }\n    }\n\n    return editor;\n  };\n\n  StandaloneCodeEditorServiceImpl.prototype.findModel = function (editor, resource) {\n    var model = editor.getModel();\n\n    if (model && model.uri.toString() !== resource.toString()) {\n      return null;\n    }\n\n    return model;\n  };\n\n  return StandaloneCodeEditorServiceImpl;\n}(CodeEditorServiceImpl);\n\nexport { StandaloneCodeEditorServiceImpl };","map":null,"metadata":{},"sourceType":"module"}