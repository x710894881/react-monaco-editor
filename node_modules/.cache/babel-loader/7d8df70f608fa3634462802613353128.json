{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport * as arrays from '../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution, registerDefaultLanguageCommand } from '../../browser/editorExtensions.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { Selection } from '../../common/core/selection.js';\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\nimport * as modes from '../../common/modes.js';\nimport * as nls from '../../../nls.js';\nimport { dispose } from '../../../base/common/lifecycle.js';\nimport { WordSelectionRangeProvider } from './wordSelections.js';\nimport { BracketSelectionRangeProvider } from './bracketSelections.js';\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\nimport { onUnexpectedExternalError } from '../../../base/common/errors.js';\n\nvar SelectionRanges =\n/** @class */\nfunction () {\n  function SelectionRanges(index, ranges) {\n    this.index = index;\n    this.ranges = ranges;\n  }\n\n  SelectionRanges.prototype.mov = function (fwd) {\n    var index = this.index + (fwd ? 1 : -1);\n\n    if (index < 0 || index >= this.ranges.length) {\n      return this;\n    }\n\n    var res = new SelectionRanges(index, this.ranges);\n\n    if (res.ranges[index].equalsRange(this.ranges[this.index])) {\n      // next range equals this range, retry with next-next\n      return res.mov(fwd);\n    }\n\n    return res;\n  };\n\n  return SelectionRanges;\n}();\n\nvar SmartSelectController =\n/** @class */\nfunction () {\n  function SmartSelectController(editor) {\n    this._ignoreSelection = false;\n    this._editor = editor;\n  }\n\n  SmartSelectController.get = function (editor) {\n    return editor.getContribution(SmartSelectController._id);\n  };\n\n  SmartSelectController.prototype.dispose = function () {\n    dispose(this._selectionListener);\n  };\n\n  SmartSelectController.prototype.getId = function () {\n    return SmartSelectController._id;\n  };\n\n  SmartSelectController.prototype.run = function (forward) {\n    var _this = this;\n\n    if (!this._editor.hasModel()) {\n      return;\n    }\n\n    var selections = this._editor.getSelections();\n\n    var model = this._editor.getModel();\n\n    if (!modes.SelectionRangeRegistry.has(model)) {\n      return;\n    }\n\n    var promise = Promise.resolve(undefined);\n\n    if (!this._state) {\n      promise = provideSelectionRanges(model, selections.map(function (s) {\n        return s.getPosition();\n      }), CancellationToken.None).then(function (ranges) {\n        if (!arrays.isNonEmptyArray(ranges) || ranges.length !== selections.length) {\n          // invalid result\n          return;\n        }\n\n        if (!_this._editor.hasModel() || !arrays.equals(_this._editor.getSelections(), selections, function (a, b) {\n          return a.equalsSelection(b);\n        })) {\n          // invalid editor state\n          return;\n        }\n\n        var _loop_1 = function (i) {\n          ranges[i] = ranges[i].filter(function (range) {\n            // filter ranges inside the selection\n            return range.containsPosition(selections[i].getStartPosition()) && range.containsPosition(selections[i].getEndPosition());\n          }); // prepend current selection\n\n          ranges[i].unshift(selections[i]);\n        };\n\n        for (var i = 0; i < ranges.length; i++) {\n          _loop_1(i);\n        }\n\n        _this._state = ranges.map(function (ranges) {\n          return new SelectionRanges(0, ranges);\n        }); // listen to caret move and forget about state\n\n        dispose(_this._selectionListener);\n        _this._selectionListener = _this._editor.onDidChangeCursorPosition(function () {\n          if (!_this._ignoreSelection) {\n            dispose(_this._selectionListener);\n            _this._state = undefined;\n          }\n        });\n      });\n    }\n\n    return promise.then(function () {\n      if (!_this._state) {\n        // no state\n        return;\n      }\n\n      _this._state = _this._state.map(function (state) {\n        return state.mov(forward);\n      });\n\n      var selections = _this._state.map(function (state) {\n        return Selection.fromPositions(state.ranges[state.index].getStartPosition(), state.ranges[state.index].getEndPosition());\n      });\n\n      _this._ignoreSelection = true;\n\n      try {\n        _this._editor.setSelections(selections);\n      } finally {\n        _this._ignoreSelection = false;\n      }\n    });\n  };\n\n  SmartSelectController._id = 'editor.contrib.smartSelectController';\n  return SmartSelectController;\n}();\n\nvar AbstractSmartSelect =\n/** @class */\nfunction (_super) {\n  __extends(AbstractSmartSelect, _super);\n\n  function AbstractSmartSelect(forward, opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this._forward = forward;\n    return _this;\n  }\n\n  AbstractSmartSelect.prototype.run = function (_accessor, editor) {\n    return __awaiter(this, void 0, void 0, function () {\n      var controller;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            controller = SmartSelectController.get(editor);\n            if (!controller) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , controller.run(this._forward)];\n\n          case 1:\n            _a.sent();\n\n            _a.label = 2;\n\n          case 2:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  return AbstractSmartSelect;\n}(EditorAction);\n\nvar GrowSelectionAction =\n/** @class */\nfunction (_super) {\n  __extends(GrowSelectionAction, _super);\n\n  function GrowSelectionAction() {\n    return _super.call(this, true, {\n      id: 'editor.action.smartSelect.expand',\n      label: nls.localize('smartSelect.expand', \"Expand Selection\"),\n      alias: 'Expand Selection',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 1024\n        /* Shift */\n        | 512\n        /* Alt */\n        | 17\n        /* RightArrow */\n        ,\n        mac: {\n          primary: 2048\n          /* CtrlCmd */\n          | 256\n          /* WinCtrl */\n          | 1024\n          /* Shift */\n          | 17\n          /* RightArrow */\n\n        },\n        weight: 100\n        /* EditorContrib */\n\n      },\n      menubarOpts: {\n        menuId: 22\n        /* MenubarSelectionMenu */\n        ,\n        group: '1_basic',\n        title: nls.localize({\n          key: 'miSmartSelectGrow',\n          comment: ['&& denotes a mnemonic']\n        }, \"&&Expand Selection\"),\n        order: 2\n      }\n    }) || this;\n  }\n\n  return GrowSelectionAction;\n}(AbstractSmartSelect); // renamed command id\n\n\nCommandsRegistry.registerCommandAlias('editor.action.smartSelect.grow', 'editor.action.smartSelect.expand');\n\nvar ShrinkSelectionAction =\n/** @class */\nfunction (_super) {\n  __extends(ShrinkSelectionAction, _super);\n\n  function ShrinkSelectionAction() {\n    return _super.call(this, false, {\n      id: 'editor.action.smartSelect.shrink',\n      label: nls.localize('smartSelect.shrink', \"Shrink Selection\"),\n      alias: 'Shrink Selection',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 1024\n        /* Shift */\n        | 512\n        /* Alt */\n        | 15\n        /* LeftArrow */\n        ,\n        mac: {\n          primary: 2048\n          /* CtrlCmd */\n          | 256\n          /* WinCtrl */\n          | 1024\n          /* Shift */\n          | 15\n          /* LeftArrow */\n\n        },\n        weight: 100\n        /* EditorContrib */\n\n      },\n      menubarOpts: {\n        menuId: 22\n        /* MenubarSelectionMenu */\n        ,\n        group: '1_basic',\n        title: nls.localize({\n          key: 'miSmartSelectShrink',\n          comment: ['&& denotes a mnemonic']\n        }, \"&&Shrink Selection\"),\n        order: 3\n      }\n    }) || this;\n  }\n\n  return ShrinkSelectionAction;\n}(AbstractSmartSelect);\n\nregisterEditorContribution(SmartSelectController);\nregisterEditorAction(GrowSelectionAction);\nregisterEditorAction(ShrinkSelectionAction); // word selection\n\nmodes.SelectionRangeRegistry.register('*', new WordSelectionRangeProvider());\nexport function provideSelectionRanges(model, positions, token) {\n  var providers = modes.SelectionRangeRegistry.all(model);\n\n  if (providers.length === 1) {\n    // add word selection and bracket selection when no provider exists\n    providers.unshift(new BracketSelectionRangeProvider());\n  }\n\n  var work = [];\n  var allRawRanges = [];\n\n  for (var _i = 0, providers_1 = providers; _i < providers_1.length; _i++) {\n    var provider = providers_1[_i];\n    work.push(Promise.resolve(provider.provideSelectionRanges(model, positions, token)).then(function (allProviderRanges) {\n      if (arrays.isNonEmptyArray(allProviderRanges) && allProviderRanges.length === positions.length) {\n        for (var i = 0; i < positions.length; i++) {\n          if (!allRawRanges[i]) {\n            allRawRanges[i] = [];\n          }\n\n          for (var _i = 0, _a = allProviderRanges[i]; _i < _a.length; _i++) {\n            var oneProviderRanges = _a[_i];\n\n            if (Range.isIRange(oneProviderRanges.range) && Range.containsPosition(oneProviderRanges.range, positions[i])) {\n              allRawRanges[i].push(Range.lift(oneProviderRanges.range));\n            }\n          }\n        }\n      }\n    }, onUnexpectedExternalError));\n  }\n\n  return Promise.all(work).then(function () {\n    return allRawRanges.map(function (oneRawRanges) {\n      if (oneRawRanges.length === 0) {\n        return [];\n      } // sort all by start/end position\n\n\n      oneRawRanges.sort(function (a, b) {\n        if (Position.isBefore(a.getStartPosition(), b.getStartPosition())) {\n          return 1;\n        } else if (Position.isBefore(b.getStartPosition(), a.getStartPosition())) {\n          return -1;\n        } else if (Position.isBefore(a.getEndPosition(), b.getEndPosition())) {\n          return -1;\n        } else if (Position.isBefore(b.getEndPosition(), a.getEndPosition())) {\n          return 1;\n        } else {\n          return 0;\n        }\n      }); // remove ranges that don't contain the former range or that are equal to the\n      // former range\n\n      var oneRanges = [];\n      var last;\n\n      for (var _i = 0, oneRawRanges_1 = oneRawRanges; _i < oneRawRanges_1.length; _i++) {\n        var range = oneRawRanges_1[_i];\n\n        if (!last || Range.containsRange(range, last) && !Range.equalsRange(range, last)) {\n          oneRanges.push(range);\n          last = range;\n        }\n      } // add ranges that expand trivia at line starts and ends whenever a range\n      // wraps onto the a new line\n\n\n      var oneRangesWithTrivia = [oneRanges[0]];\n\n      for (var i = 1; i < oneRanges.length; i++) {\n        var prev = oneRanges[i - 1];\n        var cur = oneRanges[i];\n\n        if (cur.startLineNumber !== prev.startLineNumber || cur.endLineNumber !== prev.endLineNumber) {\n          // add line/block range without leading/failing whitespace\n          var rangeNoWhitespace = new Range(prev.startLineNumber, model.getLineFirstNonWhitespaceColumn(prev.startLineNumber), prev.endLineNumber, model.getLineLastNonWhitespaceColumn(prev.endLineNumber));\n\n          if (rangeNoWhitespace.containsRange(prev) && !rangeNoWhitespace.equalsRange(prev) && cur.containsRange(rangeNoWhitespace) && !cur.equalsRange(rangeNoWhitespace)) {\n            oneRangesWithTrivia.push(rangeNoWhitespace);\n          } // add line/block range\n\n\n          var rangeFull = new Range(prev.startLineNumber, 1, prev.endLineNumber, model.getLineMaxColumn(prev.endLineNumber));\n\n          if (rangeFull.containsRange(prev) && !rangeFull.equalsRange(rangeNoWhitespace) && cur.containsRange(rangeFull) && !cur.equalsRange(rangeFull)) {\n            oneRangesWithTrivia.push(rangeFull);\n          }\n        }\n\n        oneRangesWithTrivia.push(cur);\n      }\n\n      return oneRangesWithTrivia;\n    });\n  });\n}\nregisterDefaultLanguageCommand('_executeSelectionRangeProvider', function (model, _position, args) {\n  return provideSelectionRanges(model, args.positions, CancellationToken.None);\n});","map":null,"metadata":{},"sourceType":"module"}