{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport { WorkerManager } from './workerManager.js';\nimport * as languageFeatures from './languageFeatures.js';\nexport function setupMode(defaults) {\n  var client = new WorkerManager(defaults);\n\n  var worker = function (first) {\n    var more = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      more[_i - 1] = arguments[_i];\n    }\n\n    return client.getLanguageServiceWorker.apply(client, [first].concat(more));\n  };\n\n  var languageId = defaults.languageId;\n  monaco.languages.registerCompletionItemProvider(languageId, new languageFeatures.CompletionAdapter(worker));\n  monaco.languages.registerHoverProvider(languageId, new languageFeatures.HoverAdapter(worker));\n  monaco.languages.registerDocumentHighlightProvider(languageId, new languageFeatures.DocumentHighlightAdapter(worker));\n  monaco.languages.registerDefinitionProvider(languageId, new languageFeatures.DefinitionAdapter(worker));\n  monaco.languages.registerReferenceProvider(languageId, new languageFeatures.ReferenceAdapter(worker));\n  monaco.languages.registerDocumentSymbolProvider(languageId, new languageFeatures.DocumentSymbolAdapter(worker));\n  monaco.languages.registerRenameProvider(languageId, new languageFeatures.RenameAdapter(worker));\n  monaco.languages.registerColorProvider(languageId, new languageFeatures.DocumentColorAdapter(worker));\n  monaco.languages.registerFoldingRangeProvider(languageId, new languageFeatures.FoldingRangeAdapter(worker));\n  new languageFeatures.DiagnosticsAdapter(languageId, worker, defaults);\n}","map":null,"metadata":{},"sourceType":"module"}