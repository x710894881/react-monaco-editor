{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { coalesce } from '../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../base/common/errors.js';\nimport { registerDefaultLanguageCommand } from '../../browser/editorExtensions.js';\nimport { HoverProviderRegistry } from '../../common/modes.js';\nexport function getHover(model, position, token) {\n  var supports = HoverProviderRegistry.ordered(model);\n  var promises = supports.map(function (support) {\n    return Promise.resolve(support.provideHover(model, position, token)).then(function (hover) {\n      return hover && isValid(hover) ? hover : undefined;\n    }, function (err) {\n      onUnexpectedExternalError(err);\n      return undefined;\n    });\n  });\n  return Promise.all(promises).then(coalesce);\n}\nregisterDefaultLanguageCommand('_executeHoverProvider', function (model, position) {\n  return getHover(model, position, CancellationToken.None);\n});\n\nfunction isValid(result) {\n  var hasRange = typeof result.range !== 'undefined';\n  var hasHtmlContent = typeof result.contents !== 'undefined' && result.contents && result.contents.length > 0;\n  return hasRange && hasHtmlContent;\n}","map":null,"metadata":{},"sourceType":"module"}