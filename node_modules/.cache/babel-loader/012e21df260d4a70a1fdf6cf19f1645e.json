{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// #region Proposed types, remove once added to vscode-languageserver-types\n\n/**\n * Enum of known selection range kinds\n */\nexport var SelectionRangeKind;\n\n(function (SelectionRangeKind) {\n  /**\n   * Empty Kind.\n   */\n  SelectionRangeKind[\"Empty\"] = \"\";\n  /**\n   * The statment kind, its value is `statement`, possible extensions can be\n   * `statement.if` etc\n   */\n\n  SelectionRangeKind[\"Statement\"] = \"statement\";\n  /**\n   * The declaration kind, its value is `declaration`, possible extensions can be\n   * `declaration.function`, `declaration.class` etc.\n   */\n\n  SelectionRangeKind[\"Declaration\"] = \"declaration\";\n})(SelectionRangeKind || (SelectionRangeKind = {}));\n\nexport var TokenType;\n\n(function (TokenType) {\n  TokenType[TokenType[\"StartCommentTag\"] = 0] = \"StartCommentTag\";\n  TokenType[TokenType[\"Comment\"] = 1] = \"Comment\";\n  TokenType[TokenType[\"EndCommentTag\"] = 2] = \"EndCommentTag\";\n  TokenType[TokenType[\"StartTagOpen\"] = 3] = \"StartTagOpen\";\n  TokenType[TokenType[\"StartTagClose\"] = 4] = \"StartTagClose\";\n  TokenType[TokenType[\"StartTagSelfClose\"] = 5] = \"StartTagSelfClose\";\n  TokenType[TokenType[\"StartTag\"] = 6] = \"StartTag\";\n  TokenType[TokenType[\"EndTagOpen\"] = 7] = \"EndTagOpen\";\n  TokenType[TokenType[\"EndTagClose\"] = 8] = \"EndTagClose\";\n  TokenType[TokenType[\"EndTag\"] = 9] = \"EndTag\";\n  TokenType[TokenType[\"DelimiterAssign\"] = 10] = \"DelimiterAssign\";\n  TokenType[TokenType[\"AttributeName\"] = 11] = \"AttributeName\";\n  TokenType[TokenType[\"AttributeValue\"] = 12] = \"AttributeValue\";\n  TokenType[TokenType[\"StartDoctypeTag\"] = 13] = \"StartDoctypeTag\";\n  TokenType[TokenType[\"Doctype\"] = 14] = \"Doctype\";\n  TokenType[TokenType[\"EndDoctypeTag\"] = 15] = \"EndDoctypeTag\";\n  TokenType[TokenType[\"Content\"] = 16] = \"Content\";\n  TokenType[TokenType[\"Whitespace\"] = 17] = \"Whitespace\";\n  TokenType[TokenType[\"Unknown\"] = 18] = \"Unknown\";\n  TokenType[TokenType[\"Script\"] = 19] = \"Script\";\n  TokenType[TokenType[\"Styles\"] = 20] = \"Styles\";\n  TokenType[TokenType[\"EOS\"] = 21] = \"EOS\";\n})(TokenType || (TokenType = {}));\n\nexport var ScannerState;\n\n(function (ScannerState) {\n  ScannerState[ScannerState[\"WithinContent\"] = 0] = \"WithinContent\";\n  ScannerState[ScannerState[\"AfterOpeningStartTag\"] = 1] = \"AfterOpeningStartTag\";\n  ScannerState[ScannerState[\"AfterOpeningEndTag\"] = 2] = \"AfterOpeningEndTag\";\n  ScannerState[ScannerState[\"WithinDoctype\"] = 3] = \"WithinDoctype\";\n  ScannerState[ScannerState[\"WithinTag\"] = 4] = \"WithinTag\";\n  ScannerState[ScannerState[\"WithinEndTag\"] = 5] = \"WithinEndTag\";\n  ScannerState[ScannerState[\"WithinComment\"] = 6] = \"WithinComment\";\n  ScannerState[ScannerState[\"WithinScriptContent\"] = 7] = \"WithinScriptContent\";\n  ScannerState[ScannerState[\"WithinStyleContent\"] = 8] = \"WithinStyleContent\";\n  ScannerState[ScannerState[\"AfterAttributeName\"] = 9] = \"AfterAttributeName\";\n  ScannerState[ScannerState[\"BeforeAttributeValue\"] = 10] = \"BeforeAttributeValue\";\n})(ScannerState || (ScannerState = {}));","map":null,"metadata":{},"sourceType":"module"}