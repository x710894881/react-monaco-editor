{"ast":null,"code":"import '../../editor/editor.api.js';\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nvar Emitter = monaco.Emitter; // --- HTML configuration and defaults ---------\n\nvar LanguageServiceDefaultsImpl =\n/** @class */\nfunction () {\n  function LanguageServiceDefaultsImpl(languageId, options) {\n    this._onDidChange = new Emitter();\n    this._languageId = languageId;\n    this.setOptions(options);\n  }\n\n  Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"onDidChange\", {\n    get: function () {\n      return this._onDidChange.event;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"languageId\", {\n    get: function () {\n      return this._languageId;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"options\", {\n    get: function () {\n      return this._options;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  LanguageServiceDefaultsImpl.prototype.setOptions = function (options) {\n    this._options = options || Object.create(null);\n\n    this._onDidChange.fire(this);\n  };\n\n  return LanguageServiceDefaultsImpl;\n}();\n\nexport { LanguageServiceDefaultsImpl };\nvar formatDefaults = {\n  tabSize: 4,\n  insertSpaces: false,\n  wrapLineLength: 120,\n  unformatted: 'default\": \"a, abbr, acronym, b, bdo, big, br, button, cite, code, dfn, em, i, img, input, kbd, label, map, object, q, samp, select, small, span, strong, sub, sup, textarea, tt, var',\n  contentUnformatted: 'pre',\n  indentInnerHtml: false,\n  preserveNewLines: true,\n  maxPreserveNewLines: null,\n  indentHandlebars: false,\n  endWithNewline: false,\n  extraLiners: 'head, body, /html',\n  wrapAttributes: 'auto'\n};\nvar htmlOptionsDefault = {\n  format: formatDefaults,\n  suggest: {\n    html5: true,\n    angular1: true,\n    ionic: true\n  }\n};\nvar handlebarOptionsDefault = {\n  format: formatDefaults,\n  suggest: {\n    html5: true\n  }\n};\nvar razorOptionsDefault = {\n  format: formatDefaults,\n  suggest: {\n    html5: true,\n    razor: true\n  }\n};\nvar htmlLanguageId = 'html';\nvar handlebarsLanguageId = 'handlebars';\nvar razorLanguageId = 'razor';\nvar htmlDefaults = new LanguageServiceDefaultsImpl(htmlLanguageId, htmlOptionsDefault);\nvar handlebarDefaults = new LanguageServiceDefaultsImpl(handlebarsLanguageId, handlebarOptionsDefault);\nvar razorDefaults = new LanguageServiceDefaultsImpl(razorLanguageId, razorOptionsDefault); // Export API\n\nfunction createAPI() {\n  return {\n    htmlDefaults: htmlDefaults,\n    razorDefaults: razorDefaults,\n    handlebarDefaults: handlebarDefaults\n  };\n}\n\nmonaco.languages.html = createAPI(); // --- Registration to monaco editor ---\n\nfunction getMode() {\n  return import('./htmlMode.js');\n}\n\nmonaco.languages.onLanguage(htmlLanguageId, function () {\n  getMode().then(function (mode) {\n    return mode.setupMode(htmlDefaults);\n  });\n});\nmonaco.languages.onLanguage(handlebarsLanguageId, function () {\n  getMode().then(function (mode) {\n    return mode.setupMode(handlebarDefaults);\n  });\n});\nmonaco.languages.onLanguage(razorLanguageId, function () {\n  getMode().then(function (mode) {\n    return mode.setupMode(razorDefaults);\n  });\n});","map":null,"metadata":{},"sourceType":"module"}