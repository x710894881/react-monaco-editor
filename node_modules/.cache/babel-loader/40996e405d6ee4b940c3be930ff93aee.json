{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport './media/suggest.css';\nimport * as nls from '../../../nls.js';\nimport { createMatches } from '../../../base/common/filters.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { Event, Emitter } from '../../../base/common/event.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { dispose, toDisposable, DisposableStore, Disposable } from '../../../base/common/lifecycle.js';\nimport { addClass, append, $, hide, removeClass, show, toggleClass, getDomNodePagePosition, hasClass, addDisposableListener } from '../../../base/browser/dom.js';\nimport { List } from '../../../base/browser/ui/list/listWidget.js';\nimport { DomScrollableElement } from '../../../base/browser/ui/scrollbar/scrollableElement.js';\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { Context as SuggestContext } from './suggest.js';\nimport { alert } from '../../../base/browser/ui/aria/aria.js';\nimport { ITelemetryService } from '../../../platform/telemetry/common/telemetry.js';\nimport { attachListStyler } from '../../../platform/theme/common/styler.js';\nimport { IThemeService, registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\nimport { registerColor, editorWidgetBackground, listFocusBackground, activeContrastBorder, listHighlightForeground, editorForeground, editorWidgetBorder, focusBorder, textLinkForeground, textCodeBlockBackground } from '../../../platform/theme/common/colorRegistry.js';\nimport { IStorageService } from '../../../platform/storage/common/storage.js';\nimport { MarkdownRenderer } from '../markdown/markdownRenderer.js';\nimport { IModeService } from '../../common/services/modeService.js';\nimport { IOpenerService } from '../../../platform/opener/common/opener.js';\nimport { TimeoutTimer, createCancelablePromise, disposableTimeout } from '../../../base/common/async.js';\nimport { completionKindToCssClass } from '../../common/modes.js';\nimport { IconLabel } from '../../../base/browser/ui/iconLabel/iconLabel.js';\nimport { getIconClasses } from '../../common/services/getIconClasses.js';\nimport { IModelService } from '../../common/services/modelService.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { FileKind } from '../../../platform/files/common/files.js';\nimport { MarkdownString } from '../../../base/common/htmlContent.js';\nimport { flatten } from '../../../base/common/arrays.js';\nvar expandSuggestionDocsByDefault = false;\n/**\n * Suggest widget colors\n */\n\nexport var editorSuggestWidgetBackground = registerColor('editorSuggestWidget.background', {\n  dark: editorWidgetBackground,\n  light: editorWidgetBackground,\n  hc: editorWidgetBackground\n}, nls.localize('editorSuggestWidgetBackground', 'Background color of the suggest widget.'));\nexport var editorSuggestWidgetBorder = registerColor('editorSuggestWidget.border', {\n  dark: editorWidgetBorder,\n  light: editorWidgetBorder,\n  hc: editorWidgetBorder\n}, nls.localize('editorSuggestWidgetBorder', 'Border color of the suggest widget.'));\nexport var editorSuggestWidgetForeground = registerColor('editorSuggestWidget.foreground', {\n  dark: editorForeground,\n  light: editorForeground,\n  hc: editorForeground\n}, nls.localize('editorSuggestWidgetForeground', 'Foreground color of the suggest widget.'));\nexport var editorSuggestWidgetSelectedBackground = registerColor('editorSuggestWidget.selectedBackground', {\n  dark: listFocusBackground,\n  light: listFocusBackground,\n  hc: listFocusBackground\n}, nls.localize('editorSuggestWidgetSelectedBackground', 'Background color of the selected entry in the suggest widget.'));\nexport var editorSuggestWidgetHighlightForeground = registerColor('editorSuggestWidget.highlightForeground', {\n  dark: listHighlightForeground,\n  light: listHighlightForeground,\n  hc: listHighlightForeground\n}, nls.localize('editorSuggestWidgetHighlightForeground', 'Color of the match highlights in the suggest widget.'));\nvar colorRegExp = /^(#([\\da-f]{3}){1,2}|(rgb|hsl)a\\(\\s*(\\d{1,3}%?\\s*,\\s*){3}(1|0?\\.\\d+)\\)|(rgb|hsl)\\(\\s*\\d{1,3}%?(\\s*,\\s*\\d{1,3}%?){2}\\s*\\))$/i;\n\nfunction extractColor(item, out) {\n  if (item.completion.label.match(colorRegExp)) {\n    out[0] = item.completion.label;\n    return true;\n  }\n\n  if (typeof item.completion.documentation === 'string' && item.completion.documentation.match(colorRegExp)) {\n    out[0] = item.completion.documentation;\n    return true;\n  }\n\n  return false;\n}\n\nfunction canExpandCompletionItem(item) {\n  if (!item) {\n    return false;\n  }\n\n  var suggestion = item.completion;\n\n  if (suggestion.documentation) {\n    return true;\n  }\n\n  return suggestion.detail && suggestion.detail !== suggestion.label;\n}\n\nvar Renderer =\n/** @class */\nfunction () {\n  function Renderer(widget, editor, triggerKeybindingLabel, _modelService, _modeService, _themeService) {\n    this.widget = widget;\n    this.editor = editor;\n    this.triggerKeybindingLabel = triggerKeybindingLabel;\n    this._modelService = _modelService;\n    this._modeService = _modeService;\n    this._themeService = _themeService;\n  }\n\n  Object.defineProperty(Renderer.prototype, \"templateId\", {\n    get: function () {\n      return 'suggestion';\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Renderer.prototype.renderTemplate = function (container) {\n    var _this = this;\n\n    var data = Object.create(null);\n    data.disposables = new DisposableStore();\n    data.root = container;\n    addClass(data.root, 'show-file-icons');\n    data.icon = append(container, $('.icon'));\n    data.colorspan = append(data.icon, $('span.colorspan'));\n    var text = append(container, $('.contents'));\n    var main = append(text, $('.main'));\n    data.iconLabel = new IconLabel(main, {\n      supportHighlights: true,\n      supportOcticons: true\n    });\n    data.disposables.add(data.iconLabel);\n    data.typeLabel = append(main, $('span.type-label'));\n    data.readMore = append(main, $('span.readMore'));\n    data.readMore.title = nls.localize('readMore', \"Read More...{0}\", this.triggerKeybindingLabel);\n\n    var configureFont = function () {\n      var configuration = _this.editor.getConfiguration();\n\n      var fontFamily = configuration.fontInfo.fontFamily;\n      var fontSize = configuration.contribInfo.suggestFontSize || configuration.fontInfo.fontSize;\n      var lineHeight = configuration.contribInfo.suggestLineHeight || configuration.fontInfo.lineHeight;\n      var fontWeight = configuration.fontInfo.fontWeight;\n      var fontSizePx = fontSize + \"px\";\n      var lineHeightPx = lineHeight + \"px\";\n      data.root.style.fontSize = fontSizePx;\n      data.root.style.fontWeight = fontWeight;\n      main.style.fontFamily = fontFamily;\n      main.style.lineHeight = lineHeightPx;\n      data.icon.style.height = lineHeightPx;\n      data.icon.style.width = lineHeightPx;\n      data.readMore.style.height = lineHeightPx;\n      data.readMore.style.width = lineHeightPx;\n    };\n\n    configureFont();\n    data.disposables.add(Event.chain(this.editor.onDidChangeConfiguration.bind(this.editor)).filter(function (e) {\n      return e.fontInfo || e.contribInfo;\n    }).on(configureFont, null));\n    return data;\n  };\n\n  Renderer.prototype.renderElement = function (element, _index, templateData) {\n    var _this = this;\n\n    var data = templateData;\n    var suggestion = element.completion;\n    data.icon.className = 'icon ' + completionKindToCssClass(suggestion.kind);\n    data.colorspan.style.backgroundColor = '';\n    var labelOptions = {\n      labelEscapeNewLines: true,\n      matches: createMatches(element.score)\n    };\n    var color = [];\n\n    if (suggestion.kind === 19\n    /* Color */\n    && extractColor(element, color)) {\n      // special logic for 'color' completion items\n      data.icon.className = 'icon customcolor';\n      data.colorspan.style.backgroundColor = color[0];\n    } else if (suggestion.kind === 20\n    /* File */\n    && this._themeService.getIconTheme().hasFileIcons) {\n      // special logic for 'file' completion items\n      data.icon.className = 'icon hide';\n      labelOptions.extraClasses = flatten([getIconClasses(this._modelService, this._modeService, URI.from({\n        scheme: 'fake',\n        path: suggestion.label\n      }), FileKind.FILE), getIconClasses(this._modelService, this._modeService, URI.from({\n        scheme: 'fake',\n        path: suggestion.detail\n      }), FileKind.FILE)]);\n    } else if (suggestion.kind === 23\n    /* Folder */\n    && this._themeService.getIconTheme().hasFolderIcons) {\n      // special logic for 'folder' completion items\n      data.icon.className = 'icon hide';\n      labelOptions.extraClasses = flatten([getIconClasses(this._modelService, this._modeService, URI.from({\n        scheme: 'fake',\n        path: suggestion.label\n      }), FileKind.FOLDER), getIconClasses(this._modelService, this._modeService, URI.from({\n        scheme: 'fake',\n        path: suggestion.detail\n      }), FileKind.FOLDER)]);\n    } else {\n      // normal icon\n      data.icon.className = 'icon hide';\n      labelOptions.extraClasses = [\"suggest-icon \" + completionKindToCssClass(suggestion.kind)];\n    }\n\n    if (suggestion.tags && suggestion.tags.indexOf(1\n    /* Deprecated */\n    ) >= 0) {\n      labelOptions.extraClasses = (labelOptions.extraClasses || []).concat(['deprecated']);\n      labelOptions.matches = [];\n    }\n\n    data.iconLabel.setLabel(suggestion.label, undefined, labelOptions);\n    data.typeLabel.textContent = (suggestion.detail || '').replace(/\\n.*$/m, '');\n\n    if (canExpandCompletionItem(element)) {\n      show(data.readMore);\n\n      data.readMore.onmousedown = function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      };\n\n      data.readMore.onclick = function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n\n        _this.widget.toggleDetails();\n      };\n    } else {\n      hide(data.readMore);\n      data.readMore.onmousedown = null;\n      data.readMore.onclick = null;\n    }\n  };\n\n  Renderer.prototype.disposeTemplate = function (templateData) {\n    templateData.disposables.dispose();\n  };\n\n  Renderer = __decorate([__param(3, IModelService), __param(4, IModeService), __param(5, IThemeService)], Renderer);\n  return Renderer;\n}();\n\nvar SuggestionDetails =\n/** @class */\nfunction () {\n  function SuggestionDetails(container, widget, editor, markdownRenderer, triggerKeybindingLabel) {\n    var _this = this;\n\n    this.widget = widget;\n    this.editor = editor;\n    this.markdownRenderer = markdownRenderer;\n    this.triggerKeybindingLabel = triggerKeybindingLabel;\n    this.borderWidth = 1;\n    this.disposables = new DisposableStore();\n    this.el = append(container, $('.details'));\n    this.disposables.add(toDisposable(function () {\n      return container.removeChild(_this.el);\n    }));\n    this.body = $('.body');\n    this.scrollbar = new DomScrollableElement(this.body, {});\n    append(this.el, this.scrollbar.getDomNode());\n    this.disposables.add(this.scrollbar);\n    this.header = append(this.body, $('.header'));\n    this.close = append(this.header, $('span.close'));\n    this.close.title = nls.localize('readLess', \"Read less...{0}\", this.triggerKeybindingLabel);\n    this.type = append(this.header, $('p.type'));\n    this.docs = append(this.body, $('p.docs'));\n    this.ariaLabel = null;\n    this.configureFont();\n    Event.chain(this.editor.onDidChangeConfiguration.bind(this.editor)).filter(function (e) {\n      return e.fontInfo;\n    }).on(this.configureFont, this, this.disposables);\n    markdownRenderer.onDidRenderCodeBlock(function () {\n      return _this.scrollbar.scanDomNode();\n    }, this, this.disposables);\n  }\n\n  Object.defineProperty(SuggestionDetails.prototype, \"element\", {\n    get: function () {\n      return this.el;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  SuggestionDetails.prototype.renderLoading = function () {\n    this.type.textContent = nls.localize('loading', \"Loading...\");\n    this.docs.textContent = '';\n  };\n\n  SuggestionDetails.prototype.renderItem = function (item, explainMode) {\n    var _this = this;\n\n    this.renderDisposeable = dispose(this.renderDisposeable);\n    var _a = item.completion,\n        documentation = _a.documentation,\n        detail = _a.detail; // --- documentation\n\n    if (explainMode) {\n      var md = '';\n      md += \"score: \" + item.score[0] + (item.word ? \", compared '\" + (item.completion.filterText && item.completion.filterText + ' (filterText)' || item.completion.label) + \"' with '\" + item.word + \"'\" : ' (no prefix)') + \"\\n\";\n      md += \"distance: \" + item.distance + \", see localityBonus-setting\\n\";\n      md += \"index: \" + item.idx + \", based on \" + (item.completion.sortText && \"sortText: \\\"\" + item.completion.sortText + \"\\\"\" || 'label') + \"\\n\";\n      documentation = new MarkdownString().appendCodeblock('empty', md);\n      detail = \"Provider: \" + item.provider._debugDisplayName;\n    }\n\n    if (!explainMode && !canExpandCompletionItem(item)) {\n      this.type.textContent = '';\n      this.docs.textContent = '';\n      addClass(this.el, 'no-docs');\n      this.ariaLabel = null;\n      return;\n    }\n\n    removeClass(this.el, 'no-docs');\n\n    if (typeof documentation === 'string') {\n      removeClass(this.docs, 'markdown-docs');\n      this.docs.textContent = documentation;\n    } else {\n      addClass(this.docs, 'markdown-docs');\n      this.docs.innerHTML = '';\n      var renderedContents = this.markdownRenderer.render(documentation);\n      this.renderDisposeable = renderedContents;\n      this.docs.appendChild(renderedContents.element);\n    } // --- details\n\n\n    if (detail) {\n      this.type.innerText = detail;\n      show(this.type);\n    } else {\n      this.type.innerText = '';\n      hide(this.type);\n    }\n\n    this.el.style.height = this.header.offsetHeight + this.docs.offsetHeight + this.borderWidth * 2 + 'px';\n\n    this.close.onmousedown = function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n    };\n\n    this.close.onclick = function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      _this.widget.toggleDetails();\n    };\n\n    this.body.scrollTop = 0;\n    this.scrollbar.scanDomNode();\n    this.ariaLabel = strings.format('{0}{1}', detail || '', documentation ? typeof documentation === 'string' ? documentation : documentation.value : '');\n  };\n\n  SuggestionDetails.prototype.getAriaLabel = function () {\n    return this.ariaLabel;\n  };\n\n  SuggestionDetails.prototype.scrollDown = function (much) {\n    if (much === void 0) {\n      much = 8;\n    }\n\n    this.body.scrollTop += much;\n  };\n\n  SuggestionDetails.prototype.scrollUp = function (much) {\n    if (much === void 0) {\n      much = 8;\n    }\n\n    this.body.scrollTop -= much;\n  };\n\n  SuggestionDetails.prototype.scrollTop = function () {\n    this.body.scrollTop = 0;\n  };\n\n  SuggestionDetails.prototype.scrollBottom = function () {\n    this.body.scrollTop = this.body.scrollHeight;\n  };\n\n  SuggestionDetails.prototype.pageDown = function () {\n    this.scrollDown(80);\n  };\n\n  SuggestionDetails.prototype.pageUp = function () {\n    this.scrollUp(80);\n  };\n\n  SuggestionDetails.prototype.setBorderWidth = function (width) {\n    this.borderWidth = width;\n  };\n\n  SuggestionDetails.prototype.configureFont = function () {\n    var configuration = this.editor.getConfiguration();\n    var fontFamily = configuration.fontInfo.fontFamily;\n    var fontSize = configuration.contribInfo.suggestFontSize || configuration.fontInfo.fontSize;\n    var lineHeight = configuration.contribInfo.suggestLineHeight || configuration.fontInfo.lineHeight;\n    var fontWeight = configuration.fontInfo.fontWeight;\n    var fontSizePx = fontSize + \"px\";\n    var lineHeightPx = lineHeight + \"px\";\n    this.el.style.fontSize = fontSizePx;\n    this.el.style.fontWeight = fontWeight;\n    this.type.style.fontFamily = fontFamily;\n    this.close.style.height = lineHeightPx;\n    this.close.style.width = lineHeightPx;\n  };\n\n  SuggestionDetails.prototype.dispose = function () {\n    this.disposables.dispose();\n    this.renderDisposeable = dispose(this.renderDisposeable);\n  };\n\n  return SuggestionDetails;\n}();\n\nvar SuggestWidget =\n/** @class */\nfunction () {\n  function SuggestWidget(editor, telemetryService, contextKeyService, themeService, storageService, keybindingService, modeService, openerService, instantiationService) {\n    var _this = this;\n\n    this.editor = editor;\n    this.telemetryService = telemetryService; // Editor.IContentWidget.allowEditorOverflow\n\n    this.allowEditorOverflow = true;\n    this.suppressMouseDown = true;\n    this.state = null;\n    this.isAuto = false;\n    this.loadingTimeout = Disposable.None;\n    this.currentSuggestionDetails = null;\n    this.ignoreFocusEvents = false;\n    this.completionModel = null;\n    this.showTimeout = new TimeoutTimer();\n    this.toDispose = new DisposableStore();\n    this.onDidSelectEmitter = new Emitter();\n    this.onDidFocusEmitter = new Emitter();\n    this.onDidHideEmitter = new Emitter();\n    this.onDidShowEmitter = new Emitter();\n    this.onDidSelect = this.onDidSelectEmitter.event;\n    this.onDidFocus = this.onDidFocusEmitter.event;\n    this.onDidHide = this.onDidHideEmitter.event;\n    this.onDidShow = this.onDidShowEmitter.event;\n    this.maxWidgetWidth = 660;\n    this.listWidth = 330;\n    this.firstFocusInCurrentList = false;\n    this.preferDocPositionTop = false;\n    this.docsPositionPreviousWidgetY = null;\n    this.explainMode = false;\n    this._lastAriaAlertLabel = null;\n    var kb = keybindingService.lookupKeybinding('editor.action.triggerSuggest');\n    var triggerKeybindingLabel = !kb ? '' : \" (\" + kb.getLabel() + \")\";\n    var markdownRenderer = this.toDispose.add(new MarkdownRenderer(editor, modeService, openerService));\n    this.isAuto = false;\n    this.focusedItem = null;\n    this.storageService = storageService;\n    this.element = $('.editor-widget.suggest-widget');\n    this.toDispose.add(addDisposableListener(this.element, 'click', function (e) {\n      if (e.target === _this.element) {\n        _this.hideWidget();\n      }\n    }));\n    this.messageElement = append(this.element, $('.message'));\n    this.listElement = append(this.element, $('.tree'));\n    this.details = instantiationService.createInstance(SuggestionDetails, this.element, this, this.editor, markdownRenderer, triggerKeybindingLabel);\n\n    var applyIconStyle = function () {\n      return toggleClass(_this.element, 'no-icons', !_this.editor.getConfiguration().contribInfo.suggest.showIcons);\n    };\n\n    applyIconStyle();\n    var renderer = instantiationService.createInstance(Renderer, this, this.editor, triggerKeybindingLabel);\n    this.list = new List(this.listElement, this, [renderer], {\n      useShadows: false,\n      openController: {\n        shouldOpen: function () {\n          return false;\n        }\n      },\n      mouseSupport: false\n    });\n    this.toDispose.add(attachListStyler(this.list, themeService, {\n      listInactiveFocusBackground: editorSuggestWidgetSelectedBackground,\n      listInactiveFocusOutline: activeContrastBorder\n    }));\n    this.toDispose.add(themeService.onThemeChange(function (t) {\n      return _this.onThemeChange(t);\n    }));\n    this.toDispose.add(editor.onDidLayoutChange(function () {\n      return _this.onEditorLayoutChange();\n    }));\n    this.toDispose.add(this.list.onMouseDown(function (e) {\n      return _this.onListMouseDown(e);\n    }));\n    this.toDispose.add(this.list.onSelectionChange(function (e) {\n      return _this.onListSelection(e);\n    }));\n    this.toDispose.add(this.list.onFocusChange(function (e) {\n      return _this.onListFocus(e);\n    }));\n    this.toDispose.add(this.editor.onDidChangeCursorSelection(function () {\n      return _this.onCursorSelectionChanged();\n    }));\n    this.toDispose.add(this.editor.onDidChangeConfiguration(function (e) {\n      return e.contribInfo && applyIconStyle();\n    }));\n    this.suggestWidgetVisible = SuggestContext.Visible.bindTo(contextKeyService);\n    this.suggestWidgetMultipleSuggestions = SuggestContext.MultipleSuggestions.bindTo(contextKeyService);\n    this.editor.addContentWidget(this);\n    this.setState(0\n    /* Hidden */\n    );\n    this.onThemeChange(themeService.getTheme());\n  }\n\n  SuggestWidget.prototype.onCursorSelectionChanged = function () {\n    if (this.state === 0\n    /* Hidden */\n    ) {\n        return;\n      }\n\n    this.editor.layoutContentWidget(this);\n  };\n\n  SuggestWidget.prototype.onEditorLayoutChange = function () {\n    if ((this.state === 3\n    /* Open */\n    || this.state === 5\n    /* Details */\n    ) && this.expandDocsSettingFromStorage()) {\n      this.expandSideOrBelow();\n    }\n  };\n\n  SuggestWidget.prototype.onListMouseDown = function (e) {\n    if (typeof e.element === 'undefined' || typeof e.index === 'undefined') {\n      return;\n    } // prevent stealing browser focus from the editor\n\n\n    e.browserEvent.preventDefault();\n    e.browserEvent.stopPropagation();\n    this.select(e.element, e.index);\n  };\n\n  SuggestWidget.prototype.onListSelection = function (e) {\n    if (!e.elements.length) {\n      return;\n    }\n\n    this.select(e.elements[0], e.indexes[0]);\n  };\n\n  SuggestWidget.prototype.select = function (item, index) {\n    var completionModel = this.completionModel;\n\n    if (!completionModel) {\n      return;\n    }\n\n    this.onDidSelectEmitter.fire({\n      item: item,\n      index: index,\n      model: completionModel\n    });\n    this.editor.focus();\n  };\n\n  SuggestWidget.prototype._getSuggestionAriaAlertLabel = function (item) {\n    if (this.expandDocsSettingFromStorage()) {\n      return nls.localize('ariaCurrenttSuggestionReadDetails', \"Item {0}, docs: {1}\", item.completion.label, this.details.getAriaLabel());\n    } else {\n      return item.completion.label;\n    }\n  };\n\n  SuggestWidget.prototype._ariaAlert = function (newAriaAlertLabel) {\n    if (this._lastAriaAlertLabel === newAriaAlertLabel) {\n      return;\n    }\n\n    this._lastAriaAlertLabel = newAriaAlertLabel;\n\n    if (this._lastAriaAlertLabel) {\n      alert(this._lastAriaAlertLabel, true);\n    }\n  };\n\n  SuggestWidget.prototype.onThemeChange = function (theme) {\n    var backgroundColor = theme.getColor(editorSuggestWidgetBackground);\n\n    if (backgroundColor) {\n      this.listElement.style.backgroundColor = backgroundColor.toString();\n      this.details.element.style.backgroundColor = backgroundColor.toString();\n      this.messageElement.style.backgroundColor = backgroundColor.toString();\n    }\n\n    var borderColor = theme.getColor(editorSuggestWidgetBorder);\n\n    if (borderColor) {\n      this.listElement.style.borderColor = borderColor.toString();\n      this.details.element.style.borderColor = borderColor.toString();\n      this.messageElement.style.borderColor = borderColor.toString();\n      this.detailsBorderColor = borderColor.toString();\n    }\n\n    var focusBorderColor = theme.getColor(focusBorder);\n\n    if (focusBorderColor) {\n      this.detailsFocusBorderColor = focusBorderColor.toString();\n    }\n\n    this.details.setBorderWidth(theme.type === 'hc' ? 2 : 1);\n  };\n\n  SuggestWidget.prototype.onListFocus = function (e) {\n    var _this = this;\n\n    if (this.ignoreFocusEvents) {\n      return;\n    }\n\n    if (!e.elements.length) {\n      if (this.currentSuggestionDetails) {\n        this.currentSuggestionDetails.cancel();\n        this.currentSuggestionDetails = null;\n        this.focusedItem = null;\n      }\n\n      this._ariaAlert(null);\n\n      return;\n    }\n\n    if (!this.completionModel) {\n      return;\n    }\n\n    var item = e.elements[0];\n    var index = e.indexes[0];\n    this.firstFocusInCurrentList = !this.focusedItem;\n\n    if (item !== this.focusedItem) {\n      if (this.currentSuggestionDetails) {\n        this.currentSuggestionDetails.cancel();\n        this.currentSuggestionDetails = null;\n      }\n\n      this.focusedItem = item;\n      this.list.reveal(index);\n      this.currentSuggestionDetails = createCancelablePromise(function (token) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var loading, result;\n\n          var _this = this;\n\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                loading = disposableTimeout(function () {\n                  return _this.showDetails(true);\n                }, 250);\n                token.onCancellationRequested(function () {\n                  return loading.dispose();\n                });\n                return [4\n                /*yield*/\n                , item.resolve(token)];\n\n              case 1:\n                result = _a.sent();\n                loading.dispose();\n                return [2\n                /*return*/\n                , result];\n            }\n          });\n        });\n      });\n      this.currentSuggestionDetails.then(function () {\n        if (index >= _this.list.length || item !== _this.list.element(index)) {\n          return;\n        } // item can have extra information, so re-render\n\n\n        _this.ignoreFocusEvents = true;\n\n        _this.list.splice(index, 1, [item]);\n\n        _this.list.setFocus([index]);\n\n        _this.ignoreFocusEvents = false;\n\n        if (_this.expandDocsSettingFromStorage()) {\n          _this.showDetails(false);\n        } else {\n          removeClass(_this.element, 'docs-side');\n        }\n\n        _this._ariaAlert(_this._getSuggestionAriaAlertLabel(item));\n      }).catch(onUnexpectedError);\n    } // emit an event\n\n\n    this.onDidFocusEmitter.fire({\n      item: item,\n      index: index,\n      model: this.completionModel\n    });\n  };\n\n  SuggestWidget.prototype.setState = function (state) {\n    if (!this.element) {\n      return;\n    }\n\n    var stateChanged = this.state !== state;\n    this.state = state;\n    toggleClass(this.element, 'frozen', state === 4\n    /* Frozen */\n    );\n\n    switch (state) {\n      case 0\n      /* Hidden */\n      :\n        hide(this.messageElement, this.details.element, this.listElement);\n        this.hide();\n        this.listHeight = 0;\n\n        if (stateChanged) {\n          this.list.splice(0, this.list.length);\n        }\n\n        this.focusedItem = null;\n        break;\n\n      case 1\n      /* Loading */\n      :\n        this.messageElement.textContent = SuggestWidget.LOADING_MESSAGE;\n        hide(this.listElement, this.details.element);\n        show(this.messageElement);\n        removeClass(this.element, 'docs-side');\n        this.show();\n        this.focusedItem = null;\n        break;\n\n      case 2\n      /* Empty */\n      :\n        this.messageElement.textContent = SuggestWidget.NO_SUGGESTIONS_MESSAGE;\n        hide(this.listElement, this.details.element);\n        show(this.messageElement);\n        removeClass(this.element, 'docs-side');\n        this.show();\n        this.focusedItem = null;\n        break;\n\n      case 3\n      /* Open */\n      :\n        hide(this.messageElement);\n        show(this.listElement);\n        this.show();\n        break;\n\n      case 4\n      /* Frozen */\n      :\n        hide(this.messageElement);\n        show(this.listElement);\n        this.show();\n        break;\n\n      case 5\n      /* Details */\n      :\n        hide(this.messageElement);\n        show(this.details.element, this.listElement);\n        this.show();\n\n        this._ariaAlert(this.details.getAriaLabel());\n\n        break;\n    }\n  };\n\n  SuggestWidget.prototype.showTriggered = function (auto, delay) {\n    var _this = this;\n\n    if (this.state !== 0\n    /* Hidden */\n    ) {\n        return;\n      }\n\n    this.isAuto = !!auto;\n\n    if (!this.isAuto) {\n      this.loadingTimeout = disposableTimeout(function () {\n        return _this.setState(1\n        /* Loading */\n        );\n      }, delay);\n    }\n  };\n\n  SuggestWidget.prototype.showSuggestions = function (completionModel, selectionIndex, isFrozen, isAuto) {\n    this.preferDocPositionTop = false;\n    this.docsPositionPreviousWidgetY = null;\n    this.loadingTimeout.dispose();\n\n    if (this.currentSuggestionDetails) {\n      this.currentSuggestionDetails.cancel();\n      this.currentSuggestionDetails = null;\n    }\n\n    if (this.completionModel !== completionModel) {\n      this.completionModel = completionModel;\n    }\n\n    if (isFrozen && this.state !== 2\n    /* Empty */\n    && this.state !== 0\n    /* Hidden */\n    ) {\n        this.setState(4\n        /* Frozen */\n        );\n        return;\n      }\n\n    var visibleCount = this.completionModel.items.length;\n    var isEmpty = visibleCount === 0;\n    this.suggestWidgetMultipleSuggestions.set(visibleCount > 1);\n\n    if (isEmpty) {\n      if (isAuto) {\n        this.setState(0\n        /* Hidden */\n        );\n      } else {\n        this.setState(2\n        /* Empty */\n        );\n      }\n\n      this.completionModel = null;\n    } else {\n      if (this.state !== 3\n      /* Open */\n      ) {\n          var stats = this.completionModel.stats;\n          stats['wasAutomaticallyTriggered'] = !!isAuto;\n          /* __GDPR__\n              \"suggestWidget\" : {\n                  \"wasAutomaticallyTriggered\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n                  \"${include}\": [\n                      \"${ICompletionStats}\"\n                  ]\n              }\n          */\n\n          this.telemetryService.publicLog('suggestWidget', __assign({}, stats));\n        }\n\n      this.focusedItem = null;\n      this.list.splice(0, this.list.length, this.completionModel.items);\n\n      if (isFrozen) {\n        this.setState(4\n        /* Frozen */\n        );\n      } else {\n        this.setState(3\n        /* Open */\n        );\n      }\n\n      this.list.reveal(selectionIndex, 0);\n      this.list.setFocus([selectionIndex]); // Reset focus border\n\n      if (this.detailsBorderColor) {\n        this.details.element.style.borderColor = this.detailsBorderColor;\n      }\n    }\n  };\n\n  SuggestWidget.prototype.selectNextPage = function () {\n    switch (this.state) {\n      case 0\n      /* Hidden */\n      :\n        return false;\n\n      case 5\n      /* Details */\n      :\n        this.details.pageDown();\n        return true;\n\n      case 1\n      /* Loading */\n      :\n        return !this.isAuto;\n\n      default:\n        this.list.focusNextPage();\n        return true;\n    }\n  };\n\n  SuggestWidget.prototype.selectNext = function () {\n    switch (this.state) {\n      case 0\n      /* Hidden */\n      :\n        return false;\n\n      case 1\n      /* Loading */\n      :\n        return !this.isAuto;\n\n      default:\n        this.list.focusNext(1, true);\n        return true;\n    }\n  };\n\n  SuggestWidget.prototype.selectLast = function () {\n    switch (this.state) {\n      case 0\n      /* Hidden */\n      :\n        return false;\n\n      case 5\n      /* Details */\n      :\n        this.details.scrollBottom();\n        return true;\n\n      case 1\n      /* Loading */\n      :\n        return !this.isAuto;\n\n      default:\n        this.list.focusLast();\n        return true;\n    }\n  };\n\n  SuggestWidget.prototype.selectPreviousPage = function () {\n    switch (this.state) {\n      case 0\n      /* Hidden */\n      :\n        return false;\n\n      case 5\n      /* Details */\n      :\n        this.details.pageUp();\n        return true;\n\n      case 1\n      /* Loading */\n      :\n        return !this.isAuto;\n\n      default:\n        this.list.focusPreviousPage();\n        return true;\n    }\n  };\n\n  SuggestWidget.prototype.selectPrevious = function () {\n    switch (this.state) {\n      case 0\n      /* Hidden */\n      :\n        return false;\n\n      case 1\n      /* Loading */\n      :\n        return !this.isAuto;\n\n      default:\n        this.list.focusPrevious(1, true);\n        return false;\n    }\n  };\n\n  SuggestWidget.prototype.selectFirst = function () {\n    switch (this.state) {\n      case 0\n      /* Hidden */\n      :\n        return false;\n\n      case 5\n      /* Details */\n      :\n        this.details.scrollTop();\n        return true;\n\n      case 1\n      /* Loading */\n      :\n        return !this.isAuto;\n\n      default:\n        this.list.focusFirst();\n        return true;\n    }\n  };\n\n  SuggestWidget.prototype.getFocusedItem = function () {\n    if (this.state !== 0\n    /* Hidden */\n    && this.state !== 2\n    /* Empty */\n    && this.state !== 1\n    /* Loading */\n    && this.completionModel) {\n      return {\n        item: this.list.getFocusedElements()[0],\n        index: this.list.getFocus()[0],\n        model: this.completionModel\n      };\n    }\n\n    return undefined;\n  };\n\n  SuggestWidget.prototype.toggleDetailsFocus = function () {\n    if (this.state === 5\n    /* Details */\n    ) {\n        this.setState(3\n        /* Open */\n        );\n\n        if (this.detailsBorderColor) {\n          this.details.element.style.borderColor = this.detailsBorderColor;\n        }\n      } else if (this.state === 3\n    /* Open */\n    && this.expandDocsSettingFromStorage()) {\n      this.setState(5\n      /* Details */\n      );\n\n      if (this.detailsFocusBorderColor) {\n        this.details.element.style.borderColor = this.detailsFocusBorderColor;\n      }\n    }\n\n    this.telemetryService.publicLog2('suggestWidget:toggleDetailsFocus');\n  };\n\n  SuggestWidget.prototype.toggleDetails = function () {\n    if (!canExpandCompletionItem(this.list.getFocusedElements()[0])) {\n      return;\n    }\n\n    if (this.expandDocsSettingFromStorage()) {\n      this.updateExpandDocsSetting(false);\n      hide(this.details.element);\n      removeClass(this.element, 'docs-side');\n      removeClass(this.element, 'docs-below');\n      this.editor.layoutContentWidget(this);\n      this.telemetryService.publicLog2('suggestWidget:collapseDetails');\n    } else {\n      if (this.state !== 3\n      /* Open */\n      && this.state !== 5\n      /* Details */\n      && this.state !== 4\n      /* Frozen */\n      ) {\n          return;\n        }\n\n      this.updateExpandDocsSetting(true);\n      this.showDetails(false);\n\n      this._ariaAlert(this.details.getAriaLabel());\n\n      this.telemetryService.publicLog2('suggestWidget:expandDetails');\n    }\n  };\n\n  SuggestWidget.prototype.showDetails = function (loading) {\n    this.expandSideOrBelow();\n    show(this.details.element);\n    this.details.element.style.maxHeight = this.maxWidgetHeight + 'px';\n\n    if (loading) {\n      this.details.renderLoading();\n    } else {\n      this.details.renderItem(this.list.getFocusedElements()[0], this.explainMode);\n    } // Reset margin-top that was set as Fix for #26416\n\n\n    this.listElement.style.marginTop = '0px'; // with docs showing up widget width/height may change, so reposition the widget\n\n    this.editor.layoutContentWidget(this);\n    this.adjustDocsPosition();\n    this.editor.focus();\n  };\n\n  SuggestWidget.prototype.toggleExplainMode = function () {\n    if (this.list.getFocusedElements()[0] && this.expandDocsSettingFromStorage()) {\n      this.explainMode = !this.explainMode;\n      this.showDetails(false);\n    }\n  };\n\n  SuggestWidget.prototype.show = function () {\n    var _this = this;\n\n    var newHeight = this.updateListHeight();\n\n    if (newHeight !== this.listHeight) {\n      this.editor.layoutContentWidget(this);\n      this.listHeight = newHeight;\n    }\n\n    this.suggestWidgetVisible.set(true);\n    this.showTimeout.cancelAndSet(function () {\n      addClass(_this.element, 'visible');\n\n      _this.onDidShowEmitter.fire(_this);\n    }, 100);\n  };\n\n  SuggestWidget.prototype.hide = function () {\n    this.suggestWidgetVisible.reset();\n    this.suggestWidgetMultipleSuggestions.reset();\n    removeClass(this.element, 'visible');\n  };\n\n  SuggestWidget.prototype.hideWidget = function () {\n    this.loadingTimeout.dispose();\n    this.setState(0\n    /* Hidden */\n    );\n    this.onDidHideEmitter.fire(this);\n  };\n\n  SuggestWidget.prototype.getPosition = function () {\n    if (this.state === 0\n    /* Hidden */\n    ) {\n        return null;\n      }\n\n    var preference = [2\n    /* BELOW */\n    , 1\n    /* ABOVE */\n    ];\n\n    if (this.preferDocPositionTop) {\n      preference = [1\n      /* ABOVE */\n      ];\n    }\n\n    return {\n      position: this.editor.getPosition(),\n      preference: preference\n    };\n  };\n\n  SuggestWidget.prototype.getDomNode = function () {\n    return this.element;\n  };\n\n  SuggestWidget.prototype.getId = function () {\n    return SuggestWidget.ID;\n  };\n\n  SuggestWidget.prototype.updateListHeight = function () {\n    var height = 0;\n\n    if (this.state === 2\n    /* Empty */\n    || this.state === 1\n    /* Loading */\n    ) {\n        height = this.unfocusedHeight;\n      } else {\n      var suggestionCount = this.list.contentHeight / this.unfocusedHeight;\n      var maxVisibleSuggestions = this.editor.getConfiguration().contribInfo.suggest.maxVisibleSuggestions;\n      height = Math.min(suggestionCount, maxVisibleSuggestions) * this.unfocusedHeight;\n    }\n\n    this.element.style.lineHeight = this.unfocusedHeight + \"px\";\n    this.listElement.style.height = height + \"px\";\n    this.list.layout(height);\n    return height;\n  };\n  /**\n   * Adds the propert classes, margins when positioning the docs to the side\n   */\n\n\n  SuggestWidget.prototype.adjustDocsPosition = function () {\n    if (!this.editor.hasModel()) {\n      return;\n    }\n\n    var lineHeight = this.editor.getConfiguration().fontInfo.lineHeight;\n    var cursorCoords = this.editor.getScrolledVisiblePosition(this.editor.getPosition());\n    var editorCoords = getDomNodePagePosition(this.editor.getDomNode());\n    var cursorX = editorCoords.left + cursorCoords.left;\n    var cursorY = editorCoords.top + cursorCoords.top + cursorCoords.height;\n    var widgetCoords = getDomNodePagePosition(this.element);\n    var widgetX = widgetCoords.left;\n    var widgetY = widgetCoords.top; // Fixes #27649\n    // Check if the Y changed to the top of the cursor and keep the widget flagged to prefer top\n\n    if (this.docsPositionPreviousWidgetY && this.docsPositionPreviousWidgetY < widgetY && !this.preferDocPositionTop) {\n      this.preferDocPositionTop = true;\n      this.adjustDocsPosition();\n      return;\n    }\n\n    this.docsPositionPreviousWidgetY = widgetY;\n\n    if (widgetX < cursorX - this.listWidth) {\n      // Widget is too far to the left of cursor, swap list and docs\n      addClass(this.element, 'list-right');\n    } else {\n      removeClass(this.element, 'list-right');\n    } // Compare top of the cursor (cursorY - lineheight) with widgetTop to determine if\n    // margin-top needs to be applied on list to make it appear right above the cursor\n    // Cannot compare cursorY directly as it may be a few decimals off due to zoooming\n\n\n    if (hasClass(this.element, 'docs-side') && cursorY - lineHeight > widgetY && this.details.element.offsetHeight > this.listElement.offsetHeight) {\n      // Fix for #26416\n      // Docs is bigger than list and widget is above cursor, apply margin-top so that list appears right above cursor\n      this.listElement.style.marginTop = this.details.element.offsetHeight - this.listElement.offsetHeight + \"px\";\n    }\n  };\n  /**\n   * Adds the proper classes for positioning the docs to the side or below\n   */\n\n\n  SuggestWidget.prototype.expandSideOrBelow = function () {\n    if (!canExpandCompletionItem(this.focusedItem) && this.firstFocusInCurrentList) {\n      removeClass(this.element, 'docs-side');\n      removeClass(this.element, 'docs-below');\n      return;\n    }\n\n    var matches = this.element.style.maxWidth.match(/(\\d+)px/);\n\n    if (!matches || Number(matches[1]) < this.maxWidgetWidth) {\n      addClass(this.element, 'docs-below');\n      removeClass(this.element, 'docs-side');\n    } else if (canExpandCompletionItem(this.focusedItem)) {\n      addClass(this.element, 'docs-side');\n      removeClass(this.element, 'docs-below');\n    }\n  };\n\n  Object.defineProperty(SuggestWidget.prototype, \"maxWidgetHeight\", {\n    // Heights\n    get: function () {\n      return this.unfocusedHeight * this.editor.getConfiguration().contribInfo.suggest.maxVisibleSuggestions;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SuggestWidget.prototype, \"unfocusedHeight\", {\n    get: function () {\n      var configuration = this.editor.getConfiguration();\n      return configuration.contribInfo.suggestLineHeight || configuration.fontInfo.lineHeight;\n    },\n    enumerable: true,\n    configurable: true\n  }); // IDelegate\n\n  SuggestWidget.prototype.getHeight = function (element) {\n    return this.unfocusedHeight;\n  };\n\n  SuggestWidget.prototype.getTemplateId = function (element) {\n    return 'suggestion';\n  };\n\n  SuggestWidget.prototype.expandDocsSettingFromStorage = function () {\n    return this.storageService.getBoolean('expandSuggestionDocs', 0\n    /* GLOBAL */\n    , expandSuggestionDocsByDefault);\n  };\n\n  SuggestWidget.prototype.updateExpandDocsSetting = function (value) {\n    this.storageService.store('expandSuggestionDocs', value, 0\n    /* GLOBAL */\n    );\n  };\n\n  SuggestWidget.prototype.dispose = function () {\n    this.details.dispose();\n    this.list.dispose();\n    this.toDispose.dispose();\n    this.loadingTimeout.dispose();\n    this.showTimeout.dispose();\n  };\n\n  SuggestWidget.ID = 'editor.widget.suggestWidget';\n  SuggestWidget.LOADING_MESSAGE = nls.localize('suggestWidget.loading', \"Loading...\");\n  SuggestWidget.NO_SUGGESTIONS_MESSAGE = nls.localize('suggestWidget.noSuggestions', \"No suggestions.\");\n  SuggestWidget = __decorate([__param(1, ITelemetryService), __param(2, IContextKeyService), __param(3, IThemeService), __param(4, IStorageService), __param(5, IKeybindingService), __param(6, IModeService), __param(7, IOpenerService), __param(8, IInstantiationService)], SuggestWidget);\n  return SuggestWidget;\n}();\n\nexport { SuggestWidget };\nregisterThemingParticipant(function (theme, collector) {\n  var matchHighlight = theme.getColor(editorSuggestWidgetHighlightForeground);\n\n  if (matchHighlight) {\n    collector.addRule(\".monaco-editor .suggest-widget .monaco-list .monaco-list-row .monaco-highlighted-label .highlight { color: \" + matchHighlight + \"; }\");\n  }\n\n  var foreground = theme.getColor(editorSuggestWidgetForeground);\n\n  if (foreground) {\n    collector.addRule(\".monaco-editor .suggest-widget { color: \" + foreground + \"; }\");\n  }\n\n  var link = theme.getColor(textLinkForeground);\n\n  if (link) {\n    collector.addRule(\".monaco-editor .suggest-widget a { color: \" + link + \"; }\");\n  }\n\n  var codeBackground = theme.getColor(textCodeBlockBackground);\n\n  if (codeBackground) {\n    collector.addRule(\".monaco-editor .suggest-widget code { background-color: \" + codeBackground + \"; }\");\n  }\n});","map":null,"metadata":{},"sourceType":"module"}