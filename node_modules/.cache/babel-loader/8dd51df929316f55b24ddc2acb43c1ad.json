{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport * as dom from '../../../base/browser/dom.js';\nimport { Color } from '../../../base/common/color.js';\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { dispose, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { basenameOrAuthority, dirname } from '../../../base/common/resources.js';\nimport './media/referencesWidget.css';\nimport { EmbeddedCodeEditorWidget } from '../../browser/widget/embeddedCodeEditorWidget.js';\nimport { Range } from '../../common/core/range.js';\nimport { ModelDecorationOptions, TextModel } from '../../common/model/textModel.js';\nimport { ITextModelService } from '../../common/services/resolverService.js';\nimport { AriaProvider, DataSource, Delegate, FileReferencesRenderer, OneReferenceRenderer, StringRepresentationProvider, IdentityProvider } from './referencesTree.js';\nimport * as nls from '../../../nls.js';\nimport { RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { ILabelService } from '../../../platform/label/common/label.js';\nimport { WorkbenchAsyncDataTree } from '../../../platform/list/browser/listService.js';\nimport { activeContrastBorder, contrastBorder, registerColor } from '../../../platform/theme/common/colorRegistry.js';\nimport { IThemeService, registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\nimport { PeekViewWidget, IPeekViewService } from './peekViewWidget.js';\nimport { FileReferences, OneReference } from './referencesModel.js';\nimport { SplitView, Sizing } from '../../../base/browser/ui/splitview/splitview.js';\n\nvar DecorationsManager =\n/** @class */\nfunction () {\n  function DecorationsManager(_editor, _model) {\n    var _this = this;\n\n    this._editor = _editor;\n    this._model = _model;\n    this._decorations = new Map();\n    this._decorationIgnoreSet = new Set();\n    this._callOnDispose = new DisposableStore();\n    this._callOnModelChange = new DisposableStore();\n\n    this._callOnDispose.add(this._editor.onDidChangeModel(function () {\n      return _this._onModelChanged();\n    }));\n\n    this._onModelChanged();\n  }\n\n  DecorationsManager.prototype.dispose = function () {\n    this._callOnModelChange.dispose();\n\n    this._callOnDispose.dispose();\n\n    this.removeDecorations();\n  };\n\n  DecorationsManager.prototype._onModelChanged = function () {\n    this._callOnModelChange.clear();\n\n    var model = this._editor.getModel();\n\n    if (model) {\n      for (var _i = 0, _a = this._model.groups; _i < _a.length; _i++) {\n        var ref = _a[_i];\n\n        if (ref.uri.toString() === model.uri.toString()) {\n          this._addDecorations(ref);\n\n          return;\n        }\n      }\n    }\n  };\n\n  DecorationsManager.prototype._addDecorations = function (reference) {\n    var _this = this;\n\n    if (!this._editor.hasModel()) {\n      return;\n    }\n\n    this._callOnModelChange.add(this._editor.getModel().onDidChangeDecorations(function (event) {\n      return _this._onDecorationChanged();\n    }));\n\n    var newDecorations = [];\n    var newDecorationsActualIndex = [];\n\n    for (var i = 0, len = reference.children.length; i < len; i++) {\n      var oneReference = reference.children[i];\n\n      if (this._decorationIgnoreSet.has(oneReference.id)) {\n        continue;\n      }\n\n      newDecorations.push({\n        range: oneReference.range,\n        options: DecorationsManager.DecorationOptions\n      });\n      newDecorationsActualIndex.push(i);\n    }\n\n    var decorations = this._editor.deltaDecorations([], newDecorations);\n\n    for (var i = 0; i < decorations.length; i++) {\n      this._decorations.set(decorations[i], reference.children[newDecorationsActualIndex[i]]);\n    }\n  };\n\n  DecorationsManager.prototype._onDecorationChanged = function () {\n    var _this = this;\n\n    var toRemove = [];\n\n    var model = this._editor.getModel();\n\n    if (!model) {\n      return;\n    }\n\n    this._decorations.forEach(function (reference, decorationId) {\n      var newRange = model.getDecorationRange(decorationId);\n\n      if (!newRange) {\n        return;\n      }\n\n      var ignore = false;\n\n      if (Range.equalsRange(newRange, reference.range)) {\n        return;\n      } else if (Range.spansMultipleLines(newRange)) {\n        ignore = true;\n      } else {\n        var lineLength = reference.range.endColumn - reference.range.startColumn;\n        var newLineLength = newRange.endColumn - newRange.startColumn;\n\n        if (lineLength !== newLineLength) {\n          ignore = true;\n        }\n      }\n\n      if (ignore) {\n        _this._decorationIgnoreSet.add(reference.id);\n\n        toRemove.push(decorationId);\n      } else {\n        reference.range = newRange;\n      }\n    });\n\n    for (var i = 0, len = toRemove.length; i < len; i++) {\n      this._decorations.delete(toRemove[i]);\n    }\n\n    this._editor.deltaDecorations(toRemove, []);\n  };\n\n  DecorationsManager.prototype.removeDecorations = function () {\n    var toRemove = [];\n\n    this._decorations.forEach(function (value, key) {\n      toRemove.push(key);\n    });\n\n    this._editor.deltaDecorations(toRemove, []);\n\n    this._decorations.clear();\n  };\n\n  DecorationsManager.DecorationOptions = ModelDecorationOptions.register({\n    stickiness: 1\n    /* NeverGrowsWhenTypingAtEdges */\n    ,\n    className: 'reference-decoration'\n  });\n  return DecorationsManager;\n}();\n\nvar LayoutData =\n/** @class */\nfunction () {\n  function LayoutData() {\n    this.ratio = 0.7;\n    this.heightInLines = 18;\n  }\n\n  LayoutData.fromJSON = function (raw) {\n    var ratio;\n    var heightInLines;\n\n    try {\n      var data = JSON.parse(raw);\n      ratio = data.ratio;\n      heightInLines = data.heightInLines;\n    } catch (_a) {//\n    }\n\n    return {\n      ratio: ratio || 0.7,\n      heightInLines: heightInLines || 18\n    };\n  };\n\n  return LayoutData;\n}();\n\nexport { LayoutData };\nexport var ctxReferenceWidgetSearchTreeFocused = new RawContextKey('referenceSearchTreeFocused', true);\n/**\n * ZoneWidget that is shown inside the editor\n */\n\nvar ReferenceWidget =\n/** @class */\nfunction (_super) {\n  __extends(ReferenceWidget, _super);\n\n  function ReferenceWidget(editor, _defaultTreeKeyboardSupport, layoutData, themeService, _textModelResolverService, _instantiationService, _peekViewService, _uriLabel) {\n    var _this = _super.call(this, editor, {\n      showFrame: false,\n      showArrow: true,\n      isResizeable: true,\n      isAccessible: true\n    }) || this;\n\n    _this._defaultTreeKeyboardSupport = _defaultTreeKeyboardSupport;\n    _this.layoutData = layoutData;\n    _this._textModelResolverService = _textModelResolverService;\n    _this._instantiationService = _instantiationService;\n    _this._peekViewService = _peekViewService;\n    _this._uriLabel = _uriLabel;\n    _this._disposeOnNewModel = new DisposableStore();\n    _this._callOnDispose = new DisposableStore();\n    _this._onDidSelectReference = new Emitter();\n    _this._dim = {\n      height: 0,\n      width: 0\n    };\n\n    _this._applyTheme(themeService.getTheme());\n\n    _this._callOnDispose.add(themeService.onThemeChange(_this._applyTheme.bind(_this)));\n\n    _this._peekViewService.addExclusiveWidget(editor, _this);\n\n    _this.create();\n\n    return _this;\n  }\n\n  ReferenceWidget.prototype.dispose = function () {\n    this.setModel(undefined);\n\n    this._callOnDispose.dispose();\n\n    this._disposeOnNewModel.dispose();\n\n    dispose(this._preview);\n    dispose(this._previewNotAvailableMessage);\n    dispose(this._tree);\n    dispose(this._previewModelReference);\n\n    this._splitView.dispose();\n\n    _super.prototype.dispose.call(this);\n  };\n\n  ReferenceWidget.prototype._applyTheme = function (theme) {\n    var borderColor = theme.getColor(peekViewBorder) || Color.transparent;\n    this.style({\n      arrowColor: borderColor,\n      frameColor: borderColor,\n      headerBackgroundColor: theme.getColor(peekViewTitleBackground) || Color.transparent,\n      primaryHeadingColor: theme.getColor(peekViewTitleForeground),\n      secondaryHeadingColor: theme.getColor(peekViewTitleInfoForeground)\n    });\n  };\n\n  Object.defineProperty(ReferenceWidget.prototype, \"onDidSelectReference\", {\n    get: function () {\n      return this._onDidSelectReference.event;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ReferenceWidget.prototype.show = function (where) {\n    this.editor.revealRangeInCenterIfOutsideViewport(where, 0\n    /* Smooth */\n    );\n\n    _super.prototype.show.call(this, where, this.layoutData.heightInLines || 18);\n  };\n\n  ReferenceWidget.prototype.focus = function () {\n    this._tree.domFocus();\n  };\n\n  ReferenceWidget.prototype._onTitleClick = function (e) {\n    if (this._preview && this._preview.getModel()) {\n      this._onDidSelectReference.fire({\n        element: this._getFocusedReference(),\n        kind: e.ctrlKey || e.metaKey || e.altKey ? 'side' : 'open',\n        source: 'title'\n      });\n    }\n  };\n\n  ReferenceWidget.prototype._fillBody = function (containerElement) {\n    var _this = this;\n\n    this.setCssClass('reference-zone-widget'); // message pane\n\n    this._messageContainer = dom.append(containerElement, dom.$('div.messages'));\n    dom.hide(this._messageContainer);\n    this._splitView = new SplitView(containerElement, {\n      orientation: 1\n      /* HORIZONTAL */\n\n    }); // editor\n\n    this._previewContainer = dom.append(containerElement, dom.$('div.preview.inline'));\n    var options = {\n      scrollBeyondLastLine: false,\n      scrollbar: {\n        verticalScrollbarSize: 14,\n        horizontal: 'auto',\n        useShadows: true,\n        verticalHasArrows: false,\n        horizontalHasArrows: false\n      },\n      overviewRulerLanes: 2,\n      fixedOverflowWidgets: true,\n      minimap: {\n        enabled: false\n      }\n    };\n    this._preview = this._instantiationService.createInstance(EmbeddedCodeEditorWidget, this._previewContainer, options, this.editor);\n    dom.hide(this._previewContainer);\n    this._previewNotAvailableMessage = TextModel.createFromString(nls.localize('missingPreviewMessage', \"no preview available\")); // tree\n\n    this._treeContainer = dom.append(containerElement, dom.$('div.ref-tree.inline'));\n    var treeOptions = {\n      ariaLabel: nls.localize('treeAriaLabel', \"References\"),\n      keyboardSupport: this._defaultTreeKeyboardSupport,\n      accessibilityProvider: new AriaProvider(),\n      keyboardNavigationLabelProvider: this._instantiationService.createInstance(StringRepresentationProvider),\n      identityProvider: new IdentityProvider()\n    };\n    this._tree = this._instantiationService.createInstance(WorkbenchAsyncDataTree, this._treeContainer, new Delegate(), [this._instantiationService.createInstance(FileReferencesRenderer), this._instantiationService.createInstance(OneReferenceRenderer)], this._instantiationService.createInstance(DataSource), treeOptions);\n    ctxReferenceWidgetSearchTreeFocused.bindTo(this._tree.contextKeyService); // split stuff\n\n    this._splitView.addView({\n      onDidChange: Event.None,\n      element: this._previewContainer,\n      minimumSize: 200,\n      maximumSize: Number.MAX_VALUE,\n      layout: function (width) {\n        _this._preview.layout({\n          height: _this._dim.height,\n          width: width\n        });\n      }\n    }, Sizing.Distribute);\n\n    this._splitView.addView({\n      onDidChange: Event.None,\n      element: this._treeContainer,\n      minimumSize: 100,\n      maximumSize: Number.MAX_VALUE,\n      layout: function (width) {\n        _this._treeContainer.style.height = _this._dim.height + \"px\";\n        _this._treeContainer.style.width = width + \"px\";\n\n        _this._tree.layout(_this._dim.height, width);\n      }\n    }, Sizing.Distribute);\n\n    this._disposables.add(this._splitView.onDidSashChange(function () {\n      if (_this._dim.width) {\n        _this.layoutData.ratio = _this._splitView.getViewSize(0) / _this._dim.width;\n      }\n    }, undefined)); // listen on selection and focus\n\n\n    var onEvent = function (element, kind) {\n      if (element instanceof OneReference) {\n        if (kind === 'show') {\n          _this._revealReference(element, false);\n        }\n\n        _this._onDidSelectReference.fire({\n          element: element,\n          kind: kind,\n          source: 'tree'\n        });\n      }\n    };\n\n    this._tree.onDidChangeFocus(function (e) {\n      onEvent(e.elements[0], 'show');\n    });\n\n    this._tree.onDidChangeSelection(function (e) {\n      var aside = false;\n      var goto = false;\n\n      if (e.browserEvent instanceof KeyboardEvent) {\n        // todo@joh make this a command\n        goto = true;\n      }\n\n      if (aside) {\n        onEvent(e.elements[0], 'side');\n      } else if (goto) {\n        onEvent(e.elements[0], 'goto');\n      } else {\n        onEvent(e.elements[0], 'show');\n      }\n    });\n\n    this._tree.onDidOpen(function (e) {\n      var aside = e.browserEvent instanceof MouseEvent && (e.browserEvent.ctrlKey || e.browserEvent.metaKey || e.browserEvent.altKey);\n      var goto = !e.browserEvent || e.browserEvent instanceof MouseEvent && e.browserEvent.detail === 2;\n\n      if (aside) {\n        onEvent(e.elements[0], 'side');\n      } else if (goto) {\n        onEvent(e.elements[0], 'goto');\n      } else {\n        onEvent(e.elements[0], 'show');\n      }\n    });\n\n    dom.hide(this._treeContainer);\n  };\n\n  ReferenceWidget.prototype._onWidth = function (width) {\n    if (this._dim) {\n      this._doLayoutBody(this._dim.height, width);\n    }\n  };\n\n  ReferenceWidget.prototype._doLayoutBody = function (heightInPixel, widthInPixel) {\n    _super.prototype._doLayoutBody.call(this, heightInPixel, widthInPixel);\n\n    this._dim = {\n      height: heightInPixel,\n      width: widthInPixel\n    };\n    this.layoutData.heightInLines = this._viewZone ? this._viewZone.heightInLines : this.layoutData.heightInLines;\n\n    this._splitView.layout(widthInPixel);\n\n    this._splitView.resizeView(0, widthInPixel * this.layoutData.ratio);\n  };\n\n  ReferenceWidget.prototype.setSelection = function (selection) {\n    var _this = this;\n\n    return this._revealReference(selection, true).then(function () {\n      if (!_this._model) {\n        // disposed\n        return;\n      } // show in tree\n\n\n      _this._tree.setSelection([selection]);\n\n      _this._tree.setFocus([selection]);\n    });\n  };\n\n  ReferenceWidget.prototype.setModel = function (newModel) {\n    // clean up\n    this._disposeOnNewModel.clear();\n\n    this._model = newModel;\n\n    if (this._model) {\n      return this._onNewModel();\n    }\n\n    return Promise.resolve();\n  };\n\n  ReferenceWidget.prototype._onNewModel = function () {\n    var _this = this;\n\n    if (!this._model) {\n      return Promise.resolve(undefined);\n    }\n\n    if (this._model.empty) {\n      this.setTitle('');\n      this._messageContainer.innerHTML = nls.localize('noResults', \"No results\");\n      dom.show(this._messageContainer);\n      return Promise.resolve(undefined);\n    }\n\n    dom.hide(this._messageContainer);\n    this._decorationsManager = new DecorationsManager(this._preview, this._model);\n\n    this._disposeOnNewModel.add(this._decorationsManager); // listen on model changes\n\n\n    this._disposeOnNewModel.add(this._model.onDidChangeReferenceRange(function (reference) {\n      return _this._tree.rerender(reference);\n    })); // listen on editor\n\n\n    this._disposeOnNewModel.add(this._preview.onMouseDown(function (e) {\n      var event = e.event,\n          target = e.target;\n\n      if (event.detail !== 2) {\n        return;\n      }\n\n      var element = _this._getFocusedReference();\n\n      if (!element) {\n        return;\n      }\n\n      _this._onDidSelectReference.fire({\n        element: {\n          uri: element.uri,\n          range: target.range\n        },\n        kind: event.ctrlKey || event.metaKey || event.altKey ? 'side' : 'open',\n        source: 'editor'\n      });\n    })); // make sure things are rendered\n\n\n    dom.addClass(this.container, 'results-loaded');\n    dom.show(this._treeContainer);\n    dom.show(this._previewContainer);\n\n    this._splitView.layout(this._dim.width);\n\n    this.focus(); // pick input and a reference to begin with\n\n    return this._tree.setInput(this._model.groups.length === 1 ? this._model.groups[0] : this._model);\n  };\n\n  ReferenceWidget.prototype._getFocusedReference = function () {\n    var element = this._tree.getFocus()[0];\n\n    if (element instanceof OneReference) {\n      return element;\n    } else if (element instanceof FileReferences) {\n      if (element.children.length > 0) {\n        return element.children[0];\n      }\n    }\n\n    return undefined;\n  };\n\n  ReferenceWidget.prototype._revealReference = function (reference, revealParent) {\n    return __awaiter(this, void 0, void 0, function () {\n      var promise, ref, model, scrollType, sel;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // check if there is anything to do...\n            if (this._revealedReference === reference) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            this._revealedReference = reference; // Update widget header\n\n            if (reference.uri.scheme !== Schemas.inMemory) {\n              this.setTitle(basenameOrAuthority(reference.uri), this._uriLabel.getUriLabel(dirname(reference.uri)));\n            } else {\n              this.setTitle(nls.localize('peekView.alternateTitle', \"References\"));\n            }\n\n            promise = this._textModelResolverService.createModelReference(reference.uri);\n            if (!(this._tree.getInput() === reference.parent)) return [3\n            /*break*/\n            , 1];\n\n            this._tree.reveal(reference);\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 1:\n            if (revealParent) {\n              this._tree.reveal(reference.parent);\n            }\n\n            return [4\n            /*yield*/\n            , this._tree.expand(reference.parent)];\n\n          case 2:\n            _a.sent();\n\n            this._tree.reveal(reference);\n\n            _a.label = 3;\n\n          case 3:\n            return [4\n            /*yield*/\n            , promise];\n\n          case 4:\n            ref = _a.sent();\n\n            if (!this._model) {\n              // disposed\n              ref.dispose();\n              return [2\n              /*return*/\n              ];\n            }\n\n            dispose(this._previewModelReference);\n            model = ref.object;\n\n            if (model) {\n              scrollType = this._preview.getModel() === model.textEditorModel ? 0\n              /* Smooth */\n              : 1\n              /* Immediate */\n              ;\n              sel = Range.lift(reference.range).collapseToStart();\n              this._previewModelReference = ref;\n\n              this._preview.setModel(model.textEditorModel);\n\n              this._preview.setSelection(sel);\n\n              this._preview.revealRangeInCenter(sel, scrollType);\n            } else {\n              this._preview.setModel(this._previewNotAvailableMessage);\n\n              ref.dispose();\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  ReferenceWidget = __decorate([__param(3, IThemeService), __param(4, ITextModelService), __param(5, IInstantiationService), __param(6, IPeekViewService), __param(7, ILabelService)], ReferenceWidget);\n  return ReferenceWidget;\n}(PeekViewWidget);\n\nexport { ReferenceWidget }; // theming\n\nexport var peekViewTitleBackground = registerColor('peekViewTitle.background', {\n  dark: '#1E1E1E',\n  light: '#FFFFFF',\n  hc: '#0C141F'\n}, nls.localize('peekViewTitleBackground', 'Background color of the peek view title area.'));\nexport var peekViewTitleForeground = registerColor('peekViewTitleLabel.foreground', {\n  dark: '#FFFFFF',\n  light: '#333333',\n  hc: '#FFFFFF'\n}, nls.localize('peekViewTitleForeground', 'Color of the peek view title.'));\nexport var peekViewTitleInfoForeground = registerColor('peekViewTitleDescription.foreground', {\n  dark: '#ccccccb3',\n  light: '#6c6c6cb3',\n  hc: '#FFFFFF99'\n}, nls.localize('peekViewTitleInfoForeground', 'Color of the peek view title info.'));\nexport var peekViewBorder = registerColor('peekView.border', {\n  dark: '#007acc',\n  light: '#007acc',\n  hc: contrastBorder\n}, nls.localize('peekViewBorder', 'Color of the peek view borders and arrow.'));\nexport var peekViewResultsBackground = registerColor('peekViewResult.background', {\n  dark: '#252526',\n  light: '#F3F3F3',\n  hc: Color.black\n}, nls.localize('peekViewResultsBackground', 'Background color of the peek view result list.'));\nexport var peekViewResultsMatchForeground = registerColor('peekViewResult.lineForeground', {\n  dark: '#bbbbbb',\n  light: '#646465',\n  hc: Color.white\n}, nls.localize('peekViewResultsMatchForeground', 'Foreground color for line nodes in the peek view result list.'));\nexport var peekViewResultsFileForeground = registerColor('peekViewResult.fileForeground', {\n  dark: Color.white,\n  light: '#1E1E1E',\n  hc: Color.white\n}, nls.localize('peekViewResultsFileForeground', 'Foreground color for file nodes in the peek view result list.'));\nexport var peekViewResultsSelectionBackground = registerColor('peekViewResult.selectionBackground', {\n  dark: '#3399ff33',\n  light: '#3399ff33',\n  hc: null\n}, nls.localize('peekViewResultsSelectionBackground', 'Background color of the selected entry in the peek view result list.'));\nexport var peekViewResultsSelectionForeground = registerColor('peekViewResult.selectionForeground', {\n  dark: Color.white,\n  light: '#6C6C6C',\n  hc: Color.white\n}, nls.localize('peekViewResultsSelectionForeground', 'Foreground color of the selected entry in the peek view result list.'));\nexport var peekViewEditorBackground = registerColor('peekViewEditor.background', {\n  dark: '#001F33',\n  light: '#F2F8FC',\n  hc: Color.black\n}, nls.localize('peekViewEditorBackground', 'Background color of the peek view editor.'));\nexport var peekViewEditorGutterBackground = registerColor('peekViewEditorGutter.background', {\n  dark: peekViewEditorBackground,\n  light: peekViewEditorBackground,\n  hc: peekViewEditorBackground\n}, nls.localize('peekViewEditorGutterBackground', 'Background color of the gutter in the peek view editor.'));\nexport var peekViewResultsMatchHighlight = registerColor('peekViewResult.matchHighlightBackground', {\n  dark: '#ea5c004d',\n  light: '#ea5c004d',\n  hc: null\n}, nls.localize('peekViewResultsMatchHighlight', 'Match highlight color in the peek view result list.'));\nexport var peekViewEditorMatchHighlight = registerColor('peekViewEditor.matchHighlightBackground', {\n  dark: '#ff8f0099',\n  light: '#f5d802de',\n  hc: null\n}, nls.localize('peekViewEditorMatchHighlight', 'Match highlight color in the peek view editor.'));\nexport var peekViewEditorMatchHighlightBorder = registerColor('peekViewEditor.matchHighlightBorder', {\n  dark: null,\n  light: null,\n  hc: activeContrastBorder\n}, nls.localize('peekViewEditorMatchHighlightBorder', 'Match highlight border in the peek view editor.'));\nregisterThemingParticipant(function (theme, collector) {\n  var findMatchHighlightColor = theme.getColor(peekViewResultsMatchHighlight);\n\n  if (findMatchHighlightColor) {\n    collector.addRule(\".monaco-editor .reference-zone-widget .ref-tree .referenceMatch .highlight { background-color: \" + findMatchHighlightColor + \"; }\");\n  }\n\n  var referenceHighlightColor = theme.getColor(peekViewEditorMatchHighlight);\n\n  if (referenceHighlightColor) {\n    collector.addRule(\".monaco-editor .reference-zone-widget .preview .reference-decoration { background-color: \" + referenceHighlightColor + \"; }\");\n  }\n\n  var referenceHighlightBorder = theme.getColor(peekViewEditorMatchHighlightBorder);\n\n  if (referenceHighlightBorder) {\n    collector.addRule(\".monaco-editor .reference-zone-widget .preview .reference-decoration { border: 2px solid \" + referenceHighlightBorder + \"; box-sizing: border-box; }\");\n  }\n\n  var hcOutline = theme.getColor(activeContrastBorder);\n\n  if (hcOutline) {\n    collector.addRule(\".monaco-editor .reference-zone-widget .ref-tree .referenceMatch .highlight { border: 1px dotted \" + hcOutline + \"; box-sizing: border-box; }\");\n  }\n\n  var resultsBackground = theme.getColor(peekViewResultsBackground);\n\n  if (resultsBackground) {\n    collector.addRule(\".monaco-editor .reference-zone-widget .ref-tree { background-color: \" + resultsBackground + \"; }\");\n  }\n\n  var resultsMatchForeground = theme.getColor(peekViewResultsMatchForeground);\n\n  if (resultsMatchForeground) {\n    collector.addRule(\".monaco-editor .reference-zone-widget .ref-tree { color: \" + resultsMatchForeground + \"; }\");\n  }\n\n  var resultsFileForeground = theme.getColor(peekViewResultsFileForeground);\n\n  if (resultsFileForeground) {\n    collector.addRule(\".monaco-editor .reference-zone-widget .ref-tree .reference-file { color: \" + resultsFileForeground + \"; }\");\n  }\n\n  var resultsSelectedBackground = theme.getColor(peekViewResultsSelectionBackground);\n\n  if (resultsSelectedBackground) {\n    collector.addRule(\".monaco-editor .reference-zone-widget .ref-tree .monaco-list:focus .monaco-list-rows > .monaco-list-row.selected:not(.highlighted) { background-color: \" + resultsSelectedBackground + \"; }\");\n  }\n\n  var resultsSelectedForeground = theme.getColor(peekViewResultsSelectionForeground);\n\n  if (resultsSelectedForeground) {\n    collector.addRule(\".monaco-editor .reference-zone-widget .ref-tree .monaco-list:focus .monaco-list-rows > .monaco-list-row.selected:not(.highlighted) { color: \" + resultsSelectedForeground + \" !important; }\");\n  }\n\n  var editorBackground = theme.getColor(peekViewEditorBackground);\n\n  if (editorBackground) {\n    collector.addRule(\".monaco-editor .reference-zone-widget .preview .monaco-editor .monaco-editor-background,\" + \".monaco-editor .reference-zone-widget .preview .monaco-editor .inputarea.ime-input {\" + (\"\\tbackground-color: \" + editorBackground + \";\") + \"}\");\n  }\n\n  var editorGutterBackground = theme.getColor(peekViewEditorGutterBackground);\n\n  if (editorGutterBackground) {\n    collector.addRule(\".monaco-editor .reference-zone-widget .preview .monaco-editor .margin {\" + (\"\\tbackground-color: \" + editorGutterBackground + \";\") + \"}\");\n  }\n});","map":null,"metadata":{},"sourceType":"module"}