{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport * as browser from '../../../base/browser/browser.js';\nimport * as aria from '../../../base/browser/ui/aria/aria.js';\nimport { Disposable, toDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\nimport { CodeEditorWidget } from '../../browser/widget/codeEditorWidget.js';\nimport { DiffEditorWidget } from '../../browser/widget/diffEditorWidget.js';\nimport { InternalEditorAction } from '../../common/editorAction.js';\nimport { IEditorWorkerService } from '../../common/services/editorWorkerService.js';\nimport { StandaloneKeybindingService, applyConfigurationValues } from './simpleServices.js';\nimport { IStandaloneThemeService } from '../common/standaloneThemeService.js';\nimport { MenuRegistry } from '../../../platform/actions/common/actions.js';\nimport { CommandsRegistry, ICommandService } from '../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IContextViewService, IContextMenuService } from '../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService, optional } from '../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nimport { StandaloneCodeEditorNLS } from '../../common/standaloneStrings.js';\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\nvar LAST_GENERATED_COMMAND_ID = 0;\nvar ariaDomNodeCreated = false;\n\nfunction createAriaDomNode() {\n  if (ariaDomNodeCreated) {\n    return;\n  }\n\n  ariaDomNodeCreated = true;\n  aria.setARIAContainer(document.body);\n}\n/**\n * A code editor to be used both by the standalone editor and the standalone diff editor.\n */\n\n\nvar StandaloneCodeEditor =\n/** @class */\nfunction (_super) {\n  __extends(StandaloneCodeEditor, _super);\n\n  function StandaloneCodeEditor(domElement, options, instantiationService, codeEditorService, commandService, contextKeyService, keybindingService, themeService, notificationService, accessibilityService) {\n    var _this = this;\n\n    options = options || {};\n    options.ariaLabel = options.ariaLabel || StandaloneCodeEditorNLS.editorViewAccessibleLabel;\n    options.ariaLabel = options.ariaLabel + ';' + (browser.isIE ? StandaloneCodeEditorNLS.accessibilityHelpMessageIE : StandaloneCodeEditorNLS.accessibilityHelpMessage);\n    _this = _super.call(this, domElement, options, {}, instantiationService, codeEditorService, commandService, contextKeyService, themeService, notificationService, accessibilityService) || this;\n\n    if (keybindingService instanceof StandaloneKeybindingService) {\n      _this._standaloneKeybindingService = keybindingService;\n    } else {\n      _this._standaloneKeybindingService = null;\n    } // Create the ARIA dom node as soon as the first editor is instantiated\n\n\n    createAriaDomNode();\n    return _this;\n  }\n\n  StandaloneCodeEditor.prototype.addCommand = function (keybinding, handler, context) {\n    if (!this._standaloneKeybindingService) {\n      console.warn('Cannot add command because the editor is configured with an unrecognized KeybindingService');\n      return null;\n    }\n\n    var commandId = 'DYNAMIC_' + ++LAST_GENERATED_COMMAND_ID;\n    var whenExpression = ContextKeyExpr.deserialize(context);\n\n    this._standaloneKeybindingService.addDynamicKeybinding(commandId, keybinding, handler, whenExpression);\n\n    return commandId;\n  };\n\n  StandaloneCodeEditor.prototype.createContextKey = function (key, defaultValue) {\n    return this._contextKeyService.createKey(key, defaultValue);\n  };\n\n  StandaloneCodeEditor.prototype.addAction = function (_descriptor) {\n    var _this = this;\n\n    if (typeof _descriptor.id !== 'string' || typeof _descriptor.label !== 'string' || typeof _descriptor.run !== 'function') {\n      throw new Error('Invalid action descriptor, `id`, `label` and `run` are required properties!');\n    }\n\n    if (!this._standaloneKeybindingService) {\n      console.warn('Cannot add keybinding because the editor is configured with an unrecognized KeybindingService');\n      return Disposable.None;\n    } // Read descriptor options\n\n\n    var id = _descriptor.id;\n    var label = _descriptor.label;\n    var precondition = ContextKeyExpr.and(ContextKeyExpr.equals('editorId', this.getId()), ContextKeyExpr.deserialize(_descriptor.precondition));\n    var keybindings = _descriptor.keybindings;\n    var keybindingsWhen = ContextKeyExpr.and(precondition, ContextKeyExpr.deserialize(_descriptor.keybindingContext));\n    var contextMenuGroupId = _descriptor.contextMenuGroupId || null;\n    var contextMenuOrder = _descriptor.contextMenuOrder || 0;\n\n    var run = function () {\n      return Promise.resolve(_descriptor.run(_this));\n    };\n\n    var toDispose = new DisposableStore(); // Generate a unique id to allow the same descriptor.id across multiple editor instances\n\n    var uniqueId = this.getId() + ':' + id; // Register the command\n\n    toDispose.add(CommandsRegistry.registerCommand(uniqueId, run)); // Register the context menu item\n\n    if (contextMenuGroupId) {\n      var menuItem = {\n        command: {\n          id: uniqueId,\n          title: label\n        },\n        when: precondition,\n        group: contextMenuGroupId,\n        order: contextMenuOrder\n      };\n      toDispose.add(MenuRegistry.appendMenuItem(7\n      /* EditorContext */\n      , menuItem));\n    } // Register the keybindings\n\n\n    if (Array.isArray(keybindings)) {\n      for (var _i = 0, keybindings_1 = keybindings; _i < keybindings_1.length; _i++) {\n        var kb = keybindings_1[_i];\n        toDispose.add(this._standaloneKeybindingService.addDynamicKeybinding(uniqueId, kb, run, keybindingsWhen));\n      }\n    } // Finally, register an internal editor action\n\n\n    var internalAction = new InternalEditorAction(uniqueId, label, label, precondition, run, this._contextKeyService); // Store it under the original id, such that trigger with the original id will work\n\n    this._actions[id] = internalAction;\n    toDispose.add(toDisposable(function () {\n      delete _this._actions[id];\n    }));\n    return toDispose;\n  };\n\n  StandaloneCodeEditor = __decorate([__param(2, IInstantiationService), __param(3, ICodeEditorService), __param(4, ICommandService), __param(5, IContextKeyService), __param(6, IKeybindingService), __param(7, IThemeService), __param(8, INotificationService), __param(9, IAccessibilityService)], StandaloneCodeEditor);\n  return StandaloneCodeEditor;\n}(CodeEditorWidget);\n\nexport { StandaloneCodeEditor };\n\nvar StandaloneEditor =\n/** @class */\nfunction (_super) {\n  __extends(StandaloneEditor, _super);\n\n  function StandaloneEditor(domElement, options, toDispose, instantiationService, codeEditorService, commandService, contextKeyService, keybindingService, contextViewService, themeService, notificationService, configurationService, accessibilityService) {\n    var _this = this;\n\n    applyConfigurationValues(configurationService, options, false);\n    options = options || {};\n\n    if (typeof options.theme === 'string') {\n      themeService.setTheme(options.theme);\n    }\n\n    var _model = options.model;\n    delete options.model;\n    _this = _super.call(this, domElement, options, instantiationService, codeEditorService, commandService, contextKeyService, keybindingService, themeService, notificationService, accessibilityService) || this;\n    _this._contextViewService = contextViewService;\n    _this._configurationService = configurationService;\n\n    _this._register(toDispose);\n\n    var model;\n\n    if (typeof _model === 'undefined') {\n      model = self.monaco.editor.createModel(options.value || '', options.language || 'text/plain');\n      _this._ownsModel = true;\n    } else {\n      model = _model;\n      _this._ownsModel = false;\n    }\n\n    _this._attachModel(model);\n\n    if (model) {\n      var e = {\n        oldModelUrl: null,\n        newModelUrl: model.uri\n      };\n\n      _this._onDidChangeModel.fire(e);\n    }\n\n    return _this;\n  }\n\n  StandaloneEditor.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n  };\n\n  StandaloneEditor.prototype.updateOptions = function (newOptions) {\n    applyConfigurationValues(this._configurationService, newOptions, false);\n\n    _super.prototype.updateOptions.call(this, newOptions);\n  };\n\n  StandaloneEditor.prototype._attachModel = function (model) {\n    _super.prototype._attachModel.call(this, model);\n\n    if (this._modelData) {\n      this._contextViewService.setContainer(this._modelData.view.domNode.domNode);\n    }\n  };\n\n  StandaloneEditor.prototype._postDetachModelCleanup = function (detachedModel) {\n    _super.prototype._postDetachModelCleanup.call(this, detachedModel);\n\n    if (detachedModel && this._ownsModel) {\n      detachedModel.dispose();\n      this._ownsModel = false;\n    }\n  };\n\n  StandaloneEditor = __decorate([__param(3, IInstantiationService), __param(4, ICodeEditorService), __param(5, ICommandService), __param(6, IContextKeyService), __param(7, IKeybindingService), __param(8, IContextViewService), __param(9, IStandaloneThemeService), __param(10, INotificationService), __param(11, IConfigurationService), __param(12, IAccessibilityService)], StandaloneEditor);\n  return StandaloneEditor;\n}(StandaloneCodeEditor);\n\nexport { StandaloneEditor };\n\nvar StandaloneDiffEditor =\n/** @class */\nfunction (_super) {\n  __extends(StandaloneDiffEditor, _super);\n\n  function StandaloneDiffEditor(domElement, options, toDispose, instantiationService, contextKeyService, keybindingService, contextViewService, editorWorkerService, codeEditorService, themeService, notificationService, configurationService, contextMenuService, clipboardService) {\n    var _this = this;\n\n    applyConfigurationValues(configurationService, options, true);\n    options = options || {};\n\n    if (typeof options.theme === 'string') {\n      options.theme = themeService.setTheme(options.theme);\n    }\n\n    _this = _super.call(this, domElement, options, clipboardService, editorWorkerService, contextKeyService, instantiationService, codeEditorService, themeService, notificationService, contextMenuService) || this;\n    _this._contextViewService = contextViewService;\n    _this._configurationService = configurationService;\n\n    _this._register(toDispose);\n\n    _this._contextViewService.setContainer(_this._containerDomElement);\n\n    return _this;\n  }\n\n  StandaloneDiffEditor.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n  };\n\n  StandaloneDiffEditor.prototype.updateOptions = function (newOptions) {\n    applyConfigurationValues(this._configurationService, newOptions, true);\n\n    _super.prototype.updateOptions.call(this, newOptions);\n  };\n\n  StandaloneDiffEditor.prototype._createInnerEditor = function (instantiationService, container, options) {\n    return instantiationService.createInstance(StandaloneCodeEditor, container, options);\n  };\n\n  StandaloneDiffEditor.prototype.getOriginalEditor = function () {\n    return _super.prototype.getOriginalEditor.call(this);\n  };\n\n  StandaloneDiffEditor.prototype.getModifiedEditor = function () {\n    return _super.prototype.getModifiedEditor.call(this);\n  };\n\n  StandaloneDiffEditor.prototype.addCommand = function (keybinding, handler, context) {\n    return this.getModifiedEditor().addCommand(keybinding, handler, context);\n  };\n\n  StandaloneDiffEditor.prototype.createContextKey = function (key, defaultValue) {\n    return this.getModifiedEditor().createContextKey(key, defaultValue);\n  };\n\n  StandaloneDiffEditor.prototype.addAction = function (descriptor) {\n    return this.getModifiedEditor().addAction(descriptor);\n  };\n\n  StandaloneDiffEditor = __decorate([__param(3, IInstantiationService), __param(4, IContextKeyService), __param(5, IKeybindingService), __param(6, IContextViewService), __param(7, IEditorWorkerService), __param(8, ICodeEditorService), __param(9, IStandaloneThemeService), __param(10, INotificationService), __param(11, IConfigurationService), __param(12, IContextMenuService), __param(13, optional(IClipboardService))], StandaloneDiffEditor);\n  return StandaloneDiffEditor;\n}(DiffEditorWidget);\n\nexport { StandaloneDiffEditor };","map":null,"metadata":{},"sourceType":"module"}