{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../nls.js';\nimport * as strings from './strings.js';\nvar Severity;\n\n(function (Severity) {\n  Severity[Severity[\"Ignore\"] = 0] = \"Ignore\";\n  Severity[Severity[\"Info\"] = 1] = \"Info\";\n  Severity[Severity[\"Warning\"] = 2] = \"Warning\";\n  Severity[Severity[\"Error\"] = 3] = \"Error\";\n})(Severity || (Severity = {}));\n\n(function (Severity) {\n  var _error = 'error';\n  var _warning = 'warning';\n  var _warn = 'warn';\n  var _info = 'info';\n\n  var _displayStrings = Object.create(null);\n\n  _displayStrings[Severity.Error] = nls.localize('sev.error', \"Error\");\n  _displayStrings[Severity.Warning] = nls.localize('sev.warning', \"Warning\");\n  _displayStrings[Severity.Info] = nls.localize('sev.info', \"Info\");\n  /**\n   * Parses 'error', 'warning', 'warn', 'info' in call casings\n   * and falls back to ignore.\n   */\n\n  function fromValue(value) {\n    if (!value) {\n      return Severity.Ignore;\n    }\n\n    if (strings.equalsIgnoreCase(_error, value)) {\n      return Severity.Error;\n    }\n\n    if (strings.equalsIgnoreCase(_warning, value) || strings.equalsIgnoreCase(_warn, value)) {\n      return Severity.Warning;\n    }\n\n    if (strings.equalsIgnoreCase(_info, value)) {\n      return Severity.Info;\n    }\n\n    return Severity.Ignore;\n  }\n\n  Severity.fromValue = fromValue;\n})(Severity || (Severity = {}));\n\nexport default Severity;","map":null,"metadata":{},"sourceType":"module"}