{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { CharacterSet } from '../../common/core/characterClassifier.js';\n\nvar CommitCharacterController =\n/** @class */\nfunction () {\n  function CommitCharacterController(editor, widget, accept) {\n    var _this = this;\n\n    this._disposables = new DisposableStore();\n\n    this._disposables.add(widget.onDidShow(function () {\n      return _this._onItem(widget.getFocusedItem());\n    }));\n\n    this._disposables.add(widget.onDidFocus(this._onItem, this));\n\n    this._disposables.add(widget.onDidHide(this.reset, this));\n\n    this._disposables.add(editor.onWillType(function (text) {\n      if (_this._active) {\n        var ch = text.charCodeAt(text.length - 1);\n\n        if (_this._active.acceptCharacters.has(ch) && editor.getConfiguration().contribInfo.acceptSuggestionOnCommitCharacter) {\n          accept(_this._active.item);\n        }\n      }\n    }));\n  }\n\n  CommitCharacterController.prototype._onItem = function (selected) {\n    if (!selected || !isNonEmptyArray(selected.item.completion.commitCharacters)) {\n      // no item or no commit characters\n      this.reset();\n      return;\n    }\n\n    if (this._active && this._active.item.item === selected.item) {\n      // still the same item\n      return;\n    } // keep item and its commit characters\n\n\n    var acceptCharacters = new CharacterSet();\n\n    for (var _i = 0, _a = selected.item.completion.commitCharacters; _i < _a.length; _i++) {\n      var ch = _a[_i];\n\n      if (ch.length > 0) {\n        acceptCharacters.add(ch.charCodeAt(0));\n      }\n    }\n\n    this._active = {\n      acceptCharacters: acceptCharacters,\n      item: selected\n    };\n  };\n\n  CommitCharacterController.prototype.reset = function () {\n    this._active = undefined;\n  };\n\n  CommitCharacterController.prototype.dispose = function () {\n    this._disposables.dispose();\n  };\n\n  return CommitCharacterController;\n}();\n\nexport { CommitCharacterController };","map":null,"metadata":{},"sourceType":"module"}