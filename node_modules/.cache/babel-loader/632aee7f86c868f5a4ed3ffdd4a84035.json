{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as nls from '../../../nls.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../browser/editorExtensions.js';\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\n\nvar CursorState =\n/** @class */\nfunction () {\n  function CursorState(selections) {\n    this.selections = selections;\n  }\n\n  CursorState.prototype.equals = function (other) {\n    var thisLen = this.selections.length;\n    var otherLen = other.selections.length;\n\n    if (thisLen !== otherLen) {\n      return false;\n    }\n\n    for (var i = 0; i < thisLen; i++) {\n      if (!this.selections[i].equalsSelection(other.selections[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  return CursorState;\n}();\n\nvar CursorUndoController =\n/** @class */\nfunction (_super) {\n  __extends(CursorUndoController, _super);\n\n  function CursorUndoController(editor) {\n    var _this = _super.call(this) || this;\n\n    _this._editor = editor;\n    _this._isCursorUndo = false;\n    _this._undoStack = [];\n    _this._prevState = _this._readState();\n\n    _this._register(editor.onDidChangeModel(function (e) {\n      _this._undoStack = [];\n      _this._prevState = null;\n    }));\n\n    _this._register(editor.onDidChangeModelContent(function (e) {\n      _this._undoStack = [];\n      _this._prevState = null;\n    }));\n\n    _this._register(editor.onDidChangeCursorSelection(function (e) {\n      if (!_this._isCursorUndo && _this._prevState) {\n        _this._undoStack.push(_this._prevState);\n\n        if (_this._undoStack.length > 50) {\n          // keep the cursor undo stack bounded\n          _this._undoStack.shift();\n        }\n      }\n\n      _this._prevState = _this._readState();\n    }));\n\n    return _this;\n  }\n\n  CursorUndoController.get = function (editor) {\n    return editor.getContribution(CursorUndoController.ID);\n  };\n\n  CursorUndoController.prototype._readState = function () {\n    if (!this._editor.hasModel()) {\n      // no model => no state\n      return null;\n    }\n\n    return new CursorState(this._editor.getSelections());\n  };\n\n  CursorUndoController.prototype.getId = function () {\n    return CursorUndoController.ID;\n  };\n\n  CursorUndoController.prototype.cursorUndo = function () {\n    if (!this._editor.hasModel()) {\n      return;\n    }\n\n    var currState = new CursorState(this._editor.getSelections());\n\n    while (this._undoStack.length > 0) {\n      var prevState = this._undoStack.pop();\n\n      if (!prevState.equals(currState)) {\n        this._isCursorUndo = true;\n\n        this._editor.setSelections(prevState.selections);\n\n        this._editor.revealRangeInCenterIfOutsideViewport(prevState.selections[0], 0\n        /* Smooth */\n        );\n\n        this._isCursorUndo = false;\n        return;\n      }\n    }\n  };\n\n  CursorUndoController.ID = 'editor.contrib.cursorUndoController';\n  return CursorUndoController;\n}(Disposable);\n\nexport { CursorUndoController };\n\nvar CursorUndo =\n/** @class */\nfunction (_super) {\n  __extends(CursorUndo, _super);\n\n  function CursorUndo() {\n    return _super.call(this, {\n      id: 'cursorUndo',\n      label: nls.localize('cursor.undo', \"Soft Undo\"),\n      alias: 'Soft Undo',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 2048\n        /* CtrlCmd */\n        | 51\n        /* KEY_U */\n        ,\n        weight: 100\n        /* EditorContrib */\n\n      }\n    }) || this;\n  }\n\n  CursorUndo.prototype.run = function (accessor, editor, args) {\n    CursorUndoController.get(editor).cursorUndo();\n  };\n\n  return CursorUndo;\n}(EditorAction);\n\nexport { CursorUndo };\nregisterEditorContribution(CursorUndoController);\nregisterEditorAction(CursorUndo);","map":null,"metadata":{},"sourceType":"module"}