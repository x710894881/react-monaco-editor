{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { IBulkEditService } from '../../browser/services/bulkEditService.js';\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\nimport { IEditorWorkerService } from '../../common/services/editorWorkerService.js';\nimport { EditorWorkerServiceImpl } from '../../common/services/editorWorkerServiceImpl.js';\nimport { IModeService } from '../../common/services/modeService.js';\nimport { ModeServiceImpl } from '../../common/services/modeServiceImpl.js';\nimport { IModelService } from '../../common/services/modelService.js';\nimport { ModelServiceImpl } from '../../common/services/modelServiceImpl.js';\nimport { ITextResourceConfigurationService, ITextResourcePropertiesService } from '../../common/services/resourceConfiguration.js';\nimport { SimpleBulkEditService, SimpleConfigurationService, SimpleDialogService, SimpleNotificationService, SimpleEditorProgressService, SimpleResourceConfigurationService, SimpleResourcePropertiesService, SimpleUriLabelService, SimpleWorkspaceContextService, StandaloneCommandService, StandaloneKeybindingService, StandaloneTelemetryService, SimpleLayoutService } from './simpleServices.js';\nimport { StandaloneCodeEditorServiceImpl } from './standaloneCodeServiceImpl.js';\nimport { StandaloneThemeServiceImpl } from './standaloneThemeServiceImpl.js';\nimport { IStandaloneThemeService } from '../common/standaloneThemeService.js';\nimport { IMenuService } from '../../../platform/actions/common/actions.js';\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { ContextKeyService } from '../../../platform/contextkey/browser/contextKeyService.js';\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { ContextMenuService } from '../../../platform/contextview/browser/contextMenuService.js';\nimport { IContextMenuService, IContextViewService } from '../../../platform/contextview/browser/contextView.js';\nimport { ContextViewService } from '../../../platform/contextview/browser/contextViewService.js';\nimport { IDialogService } from '../../../platform/dialogs/common/dialogs.js';\nimport { IInstantiationService, createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nimport { InstantiationService } from '../../../platform/instantiation/common/instantiationService.js';\nimport { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection.js';\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\nimport { ILabelService } from '../../../platform/label/common/label.js';\nimport { IListService, ListService } from '../../../platform/list/browser/listService.js';\nimport { ILogService, NullLogService } from '../../../platform/log/common/log.js';\nimport { MarkerService } from '../../../platform/markers/common/markerService.js';\nimport { IMarkerService } from '../../../platform/markers/common/markers.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\nimport { IStorageService, InMemoryStorageService } from '../../../platform/storage/common/storage.js';\nimport { ITelemetryService } from '../../../platform/telemetry/common/telemetry.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { IWorkspaceContextService } from '../../../platform/workspace/common/workspace.js';\nimport { MenuService } from '../../../platform/actions/common/menuService.js';\nimport { IMarkerDecorationsService } from '../../common/services/markersDecorationService.js';\nimport { MarkerDecorationsService } from '../../common/services/markerDecorationsServiceImpl.js';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nimport { BrowserAccessibilityService } from '../../../platform/accessibility/common/accessibilityService.js';\nimport { ILayoutService } from '../../../platform/layout/browser/layoutService.js';\nimport { getSingletonServiceDescriptors } from '../../../platform/instantiation/common/extensions.js';\nexport var StaticServices;\n\n(function (StaticServices) {\n  var _serviceCollection = new ServiceCollection();\n\n  var LazyStaticService =\n  /** @class */\n  function () {\n    function LazyStaticService(serviceId, factory) {\n      this._serviceId = serviceId;\n      this._factory = factory;\n      this._value = null;\n    }\n\n    Object.defineProperty(LazyStaticService.prototype, \"id\", {\n      get: function () {\n        return this._serviceId;\n      },\n      enumerable: true,\n      configurable: true\n    });\n\n    LazyStaticService.prototype.get = function (overrides) {\n      if (!this._value) {\n        if (overrides) {\n          this._value = overrides[this._serviceId.toString()];\n        }\n\n        if (!this._value) {\n          this._value = this._factory(overrides);\n        }\n\n        if (!this._value) {\n          throw new Error('Service ' + this._serviceId + ' is missing!');\n        }\n\n        _serviceCollection.set(this._serviceId, this._value);\n      }\n\n      return this._value;\n    };\n\n    return LazyStaticService;\n  }();\n\n  StaticServices.LazyStaticService = LazyStaticService;\n  var _all = [];\n\n  function define(serviceId, factory) {\n    var r = new LazyStaticService(serviceId, factory);\n\n    _all.push(r);\n\n    return r;\n  }\n\n  function init(overrides) {\n    // Create a fresh service collection\n    var result = new ServiceCollection(); // make sure to add all services that use `registerSingleton`\n\n    for (var _i = 0, _a = getSingletonServiceDescriptors(); _i < _a.length; _i++) {\n      var _b = _a[_i],\n          id = _b[0],\n          descriptor = _b[1];\n      result.set(id, descriptor);\n    } // Initialize the service collection with the overrides\n\n\n    for (var serviceId in overrides) {\n      if (overrides.hasOwnProperty(serviceId)) {\n        result.set(createDecorator(serviceId), overrides[serviceId]);\n      }\n    } // Make sure the same static services are present in all service collections\n\n\n    _all.forEach(function (service) {\n      return result.set(service.id, service.get(overrides));\n    }); // Ensure the collection gets the correct instantiation service\n\n\n    var instantiationService = new InstantiationService(result, true);\n    result.set(IInstantiationService, instantiationService);\n    return [result, instantiationService];\n  }\n\n  StaticServices.init = init;\n  StaticServices.instantiationService = define(IInstantiationService, function () {\n    return new InstantiationService(_serviceCollection, true);\n  });\n  var configurationServiceImpl = new SimpleConfigurationService();\n  StaticServices.configurationService = define(IConfigurationService, function () {\n    return configurationServiceImpl;\n  });\n  StaticServices.resourceConfigurationService = define(ITextResourceConfigurationService, function () {\n    return new SimpleResourceConfigurationService(configurationServiceImpl);\n  });\n  StaticServices.resourcePropertiesService = define(ITextResourcePropertiesService, function () {\n    return new SimpleResourcePropertiesService(configurationServiceImpl);\n  });\n  StaticServices.contextService = define(IWorkspaceContextService, function () {\n    return new SimpleWorkspaceContextService();\n  });\n  StaticServices.labelService = define(ILabelService, function () {\n    return new SimpleUriLabelService();\n  });\n  StaticServices.telemetryService = define(ITelemetryService, function () {\n    return new StandaloneTelemetryService();\n  });\n  StaticServices.dialogService = define(IDialogService, function () {\n    return new SimpleDialogService();\n  });\n  StaticServices.notificationService = define(INotificationService, function () {\n    return new SimpleNotificationService();\n  });\n  StaticServices.markerService = define(IMarkerService, function () {\n    return new MarkerService();\n  });\n  StaticServices.modeService = define(IModeService, function (o) {\n    return new ModeServiceImpl();\n  });\n  StaticServices.modelService = define(IModelService, function (o) {\n    return new ModelServiceImpl(StaticServices.configurationService.get(o), StaticServices.resourcePropertiesService.get(o));\n  });\n  StaticServices.markerDecorationsService = define(IMarkerDecorationsService, function (o) {\n    return new MarkerDecorationsService(StaticServices.modelService.get(o), StaticServices.markerService.get(o));\n  });\n  StaticServices.standaloneThemeService = define(IStandaloneThemeService, function () {\n    return new StandaloneThemeServiceImpl();\n  });\n  StaticServices.codeEditorService = define(ICodeEditorService, function (o) {\n    return new StandaloneCodeEditorServiceImpl(StaticServices.standaloneThemeService.get(o));\n  });\n  StaticServices.editorProgressService = define(IEditorProgressService, function () {\n    return new SimpleEditorProgressService();\n  });\n  StaticServices.storageService = define(IStorageService, function () {\n    return new InMemoryStorageService();\n  });\n  StaticServices.logService = define(ILogService, function () {\n    return new NullLogService();\n  });\n  StaticServices.editorWorkerService = define(IEditorWorkerService, function (o) {\n    return new EditorWorkerServiceImpl(StaticServices.modelService.get(o), StaticServices.resourceConfigurationService.get(o), StaticServices.logService.get(o));\n  });\n})(StaticServices || (StaticServices = {}));\n\nvar DynamicStandaloneServices =\n/** @class */\nfunction (_super) {\n  __extends(DynamicStandaloneServices, _super);\n\n  function DynamicStandaloneServices(domElement, overrides) {\n    var _this = _super.call(this) || this;\n\n    var _a = StaticServices.init(overrides),\n        _serviceCollection = _a[0],\n        _instantiationService = _a[1];\n\n    _this._serviceCollection = _serviceCollection;\n    _this._instantiationService = _instantiationService;\n\n    var configurationService = _this.get(IConfigurationService);\n\n    var notificationService = _this.get(INotificationService);\n\n    var telemetryService = _this.get(ITelemetryService);\n\n    var themeService = _this.get(IThemeService);\n\n    var ensure = function (serviceId, factory) {\n      var value = null;\n\n      if (overrides) {\n        value = overrides[serviceId.toString()];\n      }\n\n      if (!value) {\n        value = factory();\n      }\n\n      _this._serviceCollection.set(serviceId, value);\n\n      return value;\n    };\n\n    var contextKeyService = ensure(IContextKeyService, function () {\n      return _this._register(new ContextKeyService(configurationService));\n    });\n    ensure(IAccessibilityService, function () {\n      return new BrowserAccessibilityService(contextKeyService, configurationService);\n    });\n    ensure(IListService, function () {\n      return new ListService(contextKeyService);\n    });\n    var commandService = ensure(ICommandService, function () {\n      return new StandaloneCommandService(_this._instantiationService);\n    });\n    var keybindingService = ensure(IKeybindingService, function () {\n      return _this._register(new StandaloneKeybindingService(contextKeyService, commandService, telemetryService, notificationService, domElement));\n    });\n    var layoutService = ensure(ILayoutService, function () {\n      return new SimpleLayoutService(domElement);\n    });\n    var contextViewService = ensure(IContextViewService, function () {\n      return _this._register(new ContextViewService(layoutService));\n    });\n    ensure(IContextMenuService, function () {\n      var contextMenuService = new ContextMenuService(telemetryService, notificationService, contextViewService, keybindingService, themeService);\n      contextMenuService.configure({\n        blockMouse: false\n      }); // we do not want that in the standalone editor\n\n      return _this._register(contextMenuService);\n    });\n    ensure(IMenuService, function () {\n      return new MenuService(commandService);\n    });\n    ensure(IBulkEditService, function () {\n      return new SimpleBulkEditService(StaticServices.modelService.get(IModelService));\n    });\n    return _this;\n  }\n\n  DynamicStandaloneServices.prototype.get = function (serviceId) {\n    var r = this._serviceCollection.get(serviceId);\n\n    if (!r) {\n      throw new Error('Missing service ' + serviceId);\n    }\n\n    return r;\n  };\n\n  DynamicStandaloneServices.prototype.set = function (serviceId, instance) {\n    this._serviceCollection.set(serviceId, instance);\n  };\n\n  DynamicStandaloneServices.prototype.has = function (serviceId) {\n    return this._serviceCollection.has(serviceId);\n  };\n\n  return DynamicStandaloneServices;\n}(Disposable);\n\nexport { DynamicStandaloneServices };","map":null,"metadata":{},"sourceType":"module"}