{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as dom from '../../../base/browser/dom.js';\nimport { CaseSensitiveCheckbox, RegexCheckbox, WholeWordsCheckbox } from '../../../base/browser/ui/findinput/findInputCheckboxes.js';\nimport { Widget } from '../../../base/browser/ui/widget.js';\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { FIND_IDS } from './findModel.js';\nimport { contrastBorder, editorWidgetBackground, inputActiveOptionBorder, inputActiveOptionBackground, widgetShadow } from '../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\n\nvar FindOptionsWidget =\n/** @class */\nfunction (_super) {\n  __extends(FindOptionsWidget, _super);\n\n  function FindOptionsWidget(editor, state, keybindingService, themeService) {\n    var _this = _super.call(this) || this;\n\n    _this._hideSoon = _this._register(new RunOnceScheduler(function () {\n      return _this._hide();\n    }, 2000));\n    _this._isVisible = false;\n    _this._editor = editor;\n    _this._state = state;\n    _this._keybindingService = keybindingService;\n    _this._domNode = document.createElement('div');\n    _this._domNode.className = 'findOptionsWidget';\n    _this._domNode.style.display = 'none';\n    _this._domNode.style.top = '10px';\n\n    _this._domNode.setAttribute('role', 'presentation');\n\n    _this._domNode.setAttribute('aria-hidden', 'true');\n\n    var inputActiveOptionBorderColor = themeService.getTheme().getColor(inputActiveOptionBorder);\n    var inputActiveOptionBackgroundColor = themeService.getTheme().getColor(inputActiveOptionBackground);\n    _this.caseSensitive = _this._register(new CaseSensitiveCheckbox({\n      appendTitle: _this._keybindingLabelFor(FIND_IDS.ToggleCaseSensitiveCommand),\n      isChecked: _this._state.matchCase,\n      inputActiveOptionBorder: inputActiveOptionBorderColor,\n      inputActiveOptionBackground: inputActiveOptionBackgroundColor\n    }));\n\n    _this._domNode.appendChild(_this.caseSensitive.domNode);\n\n    _this._register(_this.caseSensitive.onChange(function () {\n      _this._state.change({\n        matchCase: _this.caseSensitive.checked\n      }, false);\n    }));\n\n    _this.wholeWords = _this._register(new WholeWordsCheckbox({\n      appendTitle: _this._keybindingLabelFor(FIND_IDS.ToggleWholeWordCommand),\n      isChecked: _this._state.wholeWord,\n      inputActiveOptionBorder: inputActiveOptionBorderColor,\n      inputActiveOptionBackground: inputActiveOptionBackgroundColor\n    }));\n\n    _this._domNode.appendChild(_this.wholeWords.domNode);\n\n    _this._register(_this.wholeWords.onChange(function () {\n      _this._state.change({\n        wholeWord: _this.wholeWords.checked\n      }, false);\n    }));\n\n    _this.regex = _this._register(new RegexCheckbox({\n      appendTitle: _this._keybindingLabelFor(FIND_IDS.ToggleRegexCommand),\n      isChecked: _this._state.isRegex,\n      inputActiveOptionBorder: inputActiveOptionBorderColor,\n      inputActiveOptionBackground: inputActiveOptionBackgroundColor\n    }));\n\n    _this._domNode.appendChild(_this.regex.domNode);\n\n    _this._register(_this.regex.onChange(function () {\n      _this._state.change({\n        isRegex: _this.regex.checked\n      }, false);\n    }));\n\n    _this._editor.addOverlayWidget(_this);\n\n    _this._register(_this._state.onFindReplaceStateChange(function (e) {\n      var somethingChanged = false;\n\n      if (e.isRegex) {\n        _this.regex.checked = _this._state.isRegex;\n        somethingChanged = true;\n      }\n\n      if (e.wholeWord) {\n        _this.wholeWords.checked = _this._state.wholeWord;\n        somethingChanged = true;\n      }\n\n      if (e.matchCase) {\n        _this.caseSensitive.checked = _this._state.matchCase;\n        somethingChanged = true;\n      }\n\n      if (!_this._state.isRevealed && somethingChanged) {\n        _this._revealTemporarily();\n      }\n    }));\n\n    _this._register(dom.addDisposableNonBubblingMouseOutListener(_this._domNode, function (e) {\n      return _this._onMouseOut();\n    }));\n\n    _this._register(dom.addDisposableListener(_this._domNode, 'mouseover', function (e) {\n      return _this._onMouseOver();\n    }));\n\n    _this._applyTheme(themeService.getTheme());\n\n    _this._register(themeService.onThemeChange(_this._applyTheme.bind(_this)));\n\n    return _this;\n  }\n\n  FindOptionsWidget.prototype._keybindingLabelFor = function (actionId) {\n    var kb = this._keybindingService.lookupKeybinding(actionId);\n\n    if (!kb) {\n      return '';\n    }\n\n    return \" (\" + kb.getLabel() + \")\";\n  };\n\n  FindOptionsWidget.prototype.dispose = function () {\n    this._editor.removeOverlayWidget(this);\n\n    _super.prototype.dispose.call(this);\n  }; // ----- IOverlayWidget API\n\n\n  FindOptionsWidget.prototype.getId = function () {\n    return FindOptionsWidget.ID;\n  };\n\n  FindOptionsWidget.prototype.getDomNode = function () {\n    return this._domNode;\n  };\n\n  FindOptionsWidget.prototype.getPosition = function () {\n    return {\n      preference: 0\n      /* TOP_RIGHT_CORNER */\n\n    };\n  };\n\n  FindOptionsWidget.prototype.highlightFindOptions = function () {\n    this._revealTemporarily();\n  };\n\n  FindOptionsWidget.prototype._revealTemporarily = function () {\n    this._show();\n\n    this._hideSoon.schedule();\n  };\n\n  FindOptionsWidget.prototype._onMouseOut = function () {\n    this._hideSoon.schedule();\n  };\n\n  FindOptionsWidget.prototype._onMouseOver = function () {\n    this._hideSoon.cancel();\n  };\n\n  FindOptionsWidget.prototype._show = function () {\n    if (this._isVisible) {\n      return;\n    }\n\n    this._isVisible = true;\n    this._domNode.style.display = 'block';\n  };\n\n  FindOptionsWidget.prototype._hide = function () {\n    if (!this._isVisible) {\n      return;\n    }\n\n    this._isVisible = false;\n    this._domNode.style.display = 'none';\n  };\n\n  FindOptionsWidget.prototype._applyTheme = function (theme) {\n    var inputStyles = {\n      inputActiveOptionBorder: theme.getColor(inputActiveOptionBorder),\n      inputActiveOptionBackground: theme.getColor(inputActiveOptionBackground)\n    };\n    this.caseSensitive.style(inputStyles);\n    this.wholeWords.style(inputStyles);\n    this.regex.style(inputStyles);\n  };\n\n  FindOptionsWidget.ID = 'editor.contrib.findOptionsWidget';\n  return FindOptionsWidget;\n}(Widget);\n\nexport { FindOptionsWidget };\nregisterThemingParticipant(function (theme, collector) {\n  var widgetBackground = theme.getColor(editorWidgetBackground);\n\n  if (widgetBackground) {\n    collector.addRule(\".monaco-editor .findOptionsWidget { background-color: \" + widgetBackground + \"; }\");\n  }\n\n  var widgetShadowColor = theme.getColor(widgetShadow);\n\n  if (widgetShadowColor) {\n    collector.addRule(\".monaco-editor .findOptionsWidget { box-shadow: 0 2px 8px \" + widgetShadowColor + \"; }\");\n  }\n\n  var hcBorder = theme.getColor(contrastBorder);\n\n  if (hcBorder) {\n    collector.addRule(\".monaco-editor .findOptionsWidget { border: 2px solid \" + hcBorder + \"; }\");\n  }\n});","map":null,"metadata":{},"sourceType":"module"}