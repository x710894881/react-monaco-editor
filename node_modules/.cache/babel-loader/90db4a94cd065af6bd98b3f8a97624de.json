{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { FastDomNode } from '../../../base/browser/fastDomNode.js';\nimport { ViewEventHandler } from '../../common/viewModel/viewEventHandler.js';\n\nvar ViewPart =\n/** @class */\nfunction (_super) {\n  __extends(ViewPart, _super);\n\n  function ViewPart(context) {\n    var _this = _super.call(this) || this;\n\n    _this._context = context;\n\n    _this._context.addEventHandler(_this);\n\n    return _this;\n  }\n\n  ViewPart.prototype.dispose = function () {\n    this._context.removeEventHandler(this);\n\n    _super.prototype.dispose.call(this);\n  };\n\n  return ViewPart;\n}(ViewEventHandler);\n\nexport { ViewPart };\n\nvar PartFingerprints =\n/** @class */\nfunction () {\n  function PartFingerprints() {}\n\n  PartFingerprints.write = function (target, partId) {\n    if (target instanceof FastDomNode) {\n      target.setAttribute('data-mprt', String(partId));\n    } else {\n      target.setAttribute('data-mprt', String(partId));\n    }\n  };\n\n  PartFingerprints.read = function (target) {\n    var r = target.getAttribute('data-mprt');\n\n    if (r === null) {\n      return 0\n      /* None */\n      ;\n    }\n\n    return parseInt(r, 10);\n  };\n\n  PartFingerprints.collect = function (child, stopAt) {\n    var result = [],\n        resultLen = 0;\n\n    while (child && child !== document.body) {\n      if (child === stopAt) {\n        break;\n      }\n\n      if (child.nodeType === child.ELEMENT_NODE) {\n        result[resultLen++] = this.read(child);\n      }\n\n      child = child.parentElement;\n    }\n\n    var r = new Uint8Array(resultLen);\n\n    for (var i = 0; i < resultLen; i++) {\n      r[i] = result[resultLen - i - 1];\n    }\n\n    return r;\n  };\n\n  return PartFingerprints;\n}();\n\nexport { PartFingerprints };","map":null,"metadata":{},"sourceType":"module"}