{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar hasDifferentOriginAncestorFlag = false;\nvar sameOriginWindowChainCache = null;\n\nfunction getParentWindowIfSameOrigin(w) {\n  if (!w.parent || w.parent === w) {\n    return null;\n  } // Cannot really tell if we have access to the parent window unless we try to access something in it\n\n\n  try {\n    var location_1 = w.location;\n    var parentLocation = w.parent.location;\n\n    if (location_1.protocol !== parentLocation.protocol || location_1.hostname !== parentLocation.hostname || location_1.port !== parentLocation.port) {\n      hasDifferentOriginAncestorFlag = true;\n      return null;\n    }\n  } catch (e) {\n    hasDifferentOriginAncestorFlag = true;\n    return null;\n  }\n\n  return w.parent;\n}\n\nfunction findIframeElementInParentWindow(parentWindow, childWindow) {\n  var parentWindowIframes = parentWindow.document.getElementsByTagName('iframe');\n  var iframe;\n\n  for (var i = 0, len = parentWindowIframes.length; i < len; i++) {\n    iframe = parentWindowIframes[i];\n\n    if (iframe.contentWindow === childWindow) {\n      return iframe;\n    }\n  }\n\n  return null;\n}\n\nvar IframeUtils =\n/** @class */\nfunction () {\n  function IframeUtils() {}\n  /**\n   * Returns a chain of embedded windows with the same origin (which can be accessed programmatically).\n   * Having a chain of length 1 might mean that the current execution environment is running outside of an iframe or inside an iframe embedded in a window with a different origin.\n   * To distinguish if at one point the current execution environment is running inside a window with a different origin, see hasDifferentOriginAncestor()\n   */\n\n\n  IframeUtils.getSameOriginWindowChain = function () {\n    if (!sameOriginWindowChainCache) {\n      sameOriginWindowChainCache = [];\n      var w = window;\n      var parent_1;\n\n      do {\n        parent_1 = getParentWindowIfSameOrigin(w);\n\n        if (parent_1) {\n          sameOriginWindowChainCache.push({\n            window: w,\n            iframeElement: findIframeElementInParentWindow(parent_1, w)\n          });\n        } else {\n          sameOriginWindowChainCache.push({\n            window: w,\n            iframeElement: null\n          });\n        }\n\n        w = parent_1;\n      } while (w);\n    }\n\n    return sameOriginWindowChainCache.slice(0);\n  };\n  /**\n   * Returns true if the current execution environment is chained in a list of iframes which at one point ends in a window with a different origin.\n   * Returns false if the current execution environment is not running inside an iframe or if the entire chain of iframes have the same origin.\n   */\n\n\n  IframeUtils.hasDifferentOriginAncestor = function () {\n    if (!sameOriginWindowChainCache) {\n      this.getSameOriginWindowChain();\n    }\n\n    return hasDifferentOriginAncestorFlag;\n  };\n  /**\n   * Returns the position of `childWindow` relative to `ancestorWindow`\n   */\n\n\n  IframeUtils.getPositionOfChildWindowRelativeToAncestorWindow = function (childWindow, ancestorWindow) {\n    if (!ancestorWindow || childWindow === ancestorWindow) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n\n    var top = 0,\n        left = 0;\n    var windowChain = this.getSameOriginWindowChain();\n\n    for (var _i = 0, windowChain_1 = windowChain; _i < windowChain_1.length; _i++) {\n      var windowChainEl = windowChain_1[_i];\n\n      if (windowChainEl.window === ancestorWindow) {\n        break;\n      }\n\n      if (!windowChainEl.iframeElement) {\n        break;\n      }\n\n      var boundingRect = windowChainEl.iframeElement.getBoundingClientRect();\n      top += boundingRect.top;\n      left += boundingRect.left;\n    }\n\n    return {\n      top: top,\n      left: left\n    };\n  };\n\n  return IframeUtils;\n}();\n\nexport { IframeUtils };","map":null,"metadata":{},"sourceType":"module"}