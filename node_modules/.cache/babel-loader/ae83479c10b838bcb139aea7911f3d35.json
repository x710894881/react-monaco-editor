{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport './iPadShowKeyboard.css';\nimport * as browser from '../../../../base/browser/browser.js';\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\n\nvar IPadShowKeyboard =\n/** @class */\nfunction (_super) {\n  __extends(IPadShowKeyboard, _super);\n\n  function IPadShowKeyboard(editor) {\n    var _this = _super.call(this) || this;\n\n    _this.editor = editor;\n    _this.widget = null;\n\n    if (browser.isIPad) {\n      _this._register(editor.onDidChangeConfiguration(function () {\n        return _this.update();\n      }));\n\n      _this.update();\n    }\n\n    return _this;\n  }\n\n  IPadShowKeyboard.prototype.update = function () {\n    var shouldHaveWidget = !this.editor.getConfiguration().readOnly;\n\n    if (!this.widget && shouldHaveWidget) {\n      this.widget = new ShowKeyboardWidget(this.editor);\n    } else if (this.widget && !shouldHaveWidget) {\n      this.widget.dispose();\n      this.widget = null;\n    }\n  };\n\n  IPadShowKeyboard.prototype.getId = function () {\n    return IPadShowKeyboard.ID;\n  };\n\n  IPadShowKeyboard.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    if (this.widget) {\n      this.widget.dispose();\n      this.widget = null;\n    }\n  };\n\n  IPadShowKeyboard.ID = 'editor.contrib.iPadShowKeyboard';\n  return IPadShowKeyboard;\n}(Disposable);\n\nexport { IPadShowKeyboard };\n\nvar ShowKeyboardWidget =\n/** @class */\nfunction (_super) {\n  __extends(ShowKeyboardWidget, _super);\n\n  function ShowKeyboardWidget(editor) {\n    var _this = _super.call(this) || this;\n\n    _this.editor = editor;\n    _this._domNode = document.createElement('textarea');\n    _this._domNode.className = 'iPadShowKeyboard';\n\n    _this._register(dom.addDisposableListener(_this._domNode, 'touchstart', function (e) {\n      _this.editor.focus();\n    }));\n\n    _this._register(dom.addDisposableListener(_this._domNode, 'focus', function (e) {\n      _this.editor.focus();\n    }));\n\n    _this.editor.addOverlayWidget(_this);\n\n    return _this;\n  }\n\n  ShowKeyboardWidget.prototype.dispose = function () {\n    this.editor.removeOverlayWidget(this);\n\n    _super.prototype.dispose.call(this);\n  }; // ----- IOverlayWidget API\n\n\n  ShowKeyboardWidget.prototype.getId = function () {\n    return ShowKeyboardWidget.ID;\n  };\n\n  ShowKeyboardWidget.prototype.getDomNode = function () {\n    return this._domNode;\n  };\n\n  ShowKeyboardWidget.prototype.getPosition = function () {\n    return {\n      preference: 1\n      /* BOTTOM_RIGHT_CORNER */\n\n    };\n  };\n\n  ShowKeyboardWidget.ID = 'editor.contrib.ShowKeyboardWidget';\n  return ShowKeyboardWidget;\n}(Disposable);\n\nregisterEditorContribution(IPadShowKeyboard);","map":null,"metadata":{},"sourceType":"module"}