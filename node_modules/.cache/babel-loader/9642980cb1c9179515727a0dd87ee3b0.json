{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Selection } from '../../common/core/selection.js';\n\nvar InPlaceReplaceCommand =\n/** @class */\nfunction () {\n  function InPlaceReplaceCommand(editRange, originalSelection, text) {\n    this._editRange = editRange;\n    this._originalSelection = originalSelection;\n    this._text = text;\n  }\n\n  InPlaceReplaceCommand.prototype.getEditOperations = function (model, builder) {\n    builder.addTrackedEditOperation(this._editRange, this._text);\n  };\n\n  InPlaceReplaceCommand.prototype.computeCursorState = function (model, helper) {\n    var inverseEditOperations = helper.getInverseEditOperations();\n    var srcRange = inverseEditOperations[0].range;\n\n    if (!this._originalSelection.isEmpty()) {\n      // Preserve selection and extends to typed text\n      return new Selection(srcRange.endLineNumber, srcRange.endColumn - this._text.length, srcRange.endLineNumber, srcRange.endColumn);\n    }\n\n    return new Selection(srcRange.endLineNumber, Math.min(this._originalSelection.positionColumn, srcRange.endColumn), srcRange.endLineNumber, Math.min(this._originalSelection.positionColumn, srcRange.endColumn));\n  };\n\n  return InPlaceReplaceCommand;\n}();\n\nexport { InPlaceReplaceCommand };","map":null,"metadata":{},"sourceType":"module"}