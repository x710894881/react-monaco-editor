{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ArrayNavigator } from './iterator.js';\n\nvar HistoryNavigator =\n/** @class */\nfunction () {\n  function HistoryNavigator(history, limit) {\n    if (history === void 0) {\n      history = [];\n    }\n\n    if (limit === void 0) {\n      limit = 10;\n    }\n\n    this._initialize(history);\n\n    this._limit = limit;\n\n    this._onChange();\n  }\n\n  HistoryNavigator.prototype.add = function (t) {\n    this._history.delete(t);\n\n    this._history.add(t);\n\n    this._onChange();\n  };\n\n  HistoryNavigator.prototype.next = function () {\n    return this._navigator.next();\n  };\n\n  HistoryNavigator.prototype.previous = function () {\n    return this._navigator.previous();\n  };\n\n  HistoryNavigator.prototype.current = function () {\n    return this._navigator.current();\n  };\n\n  HistoryNavigator.prototype.parent = function () {\n    return null;\n  };\n\n  HistoryNavigator.prototype.first = function () {\n    return this._navigator.first();\n  };\n\n  HistoryNavigator.prototype.last = function () {\n    return this._navigator.last();\n  };\n\n  HistoryNavigator.prototype.has = function (t) {\n    return this._history.has(t);\n  };\n\n  HistoryNavigator.prototype._onChange = function () {\n    this._reduceToLimit();\n\n    this._navigator = new ArrayNavigator(this._elements, 0, this._elements.length, this._elements.length);\n  };\n\n  HistoryNavigator.prototype._reduceToLimit = function () {\n    var data = this._elements;\n\n    if (data.length > this._limit) {\n      this._initialize(data.slice(data.length - this._limit));\n    }\n  };\n\n  HistoryNavigator.prototype._initialize = function (history) {\n    this._history = new Set();\n\n    for (var _i = 0, history_1 = history; _i < history_1.length; _i++) {\n      var entry = history_1[_i];\n\n      this._history.add(entry);\n    }\n  };\n\n  Object.defineProperty(HistoryNavigator.prototype, \"_elements\", {\n    get: function () {\n      var elements = [];\n\n      this._history.forEach(function (e) {\n        return elements.push(e);\n      });\n\n      return elements;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return HistoryNavigator;\n}();\n\nexport { HistoryNavigator };","map":null,"metadata":{},"sourceType":"module"}