{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { match as matchGlobPattern } from '../../../base/common/glob.js';\nexport function score(selector, candidateUri, candidateLanguage, candidateIsSynchronized) {\n  if (Array.isArray(selector)) {\n    // array -> take max individual value\n    var ret = 0;\n\n    for (var _i = 0, selector_1 = selector; _i < selector_1.length; _i++) {\n      var filter = selector_1[_i];\n      var value = score(filter, candidateUri, candidateLanguage, candidateIsSynchronized);\n\n      if (value === 10) {\n        return value; // already at the highest\n      }\n\n      if (value > ret) {\n        ret = value;\n      }\n    }\n\n    return ret;\n  } else if (typeof selector === 'string') {\n    if (!candidateIsSynchronized) {\n      return 0;\n    } // short-hand notion, desugars to\n    // 'fooLang' -> { language: 'fooLang'}\n    // '*' -> { language: '*' }\n\n\n    if (selector === '*') {\n      return 5;\n    } else if (selector === candidateLanguage) {\n      return 10;\n    } else {\n      return 0;\n    }\n  } else if (selector) {\n    // filter -> select accordingly, use defaults for scheme\n    var language = selector.language,\n        pattern = selector.pattern,\n        scheme = selector.scheme,\n        hasAccessToAllModels = selector.hasAccessToAllModels;\n\n    if (!candidateIsSynchronized && !hasAccessToAllModels) {\n      return 0;\n    }\n\n    var ret = 0;\n\n    if (scheme) {\n      if (scheme === candidateUri.scheme) {\n        ret = 10;\n      } else if (scheme === '*') {\n        ret = 5;\n      } else {\n        return 0;\n      }\n    }\n\n    if (language) {\n      if (language === candidateLanguage) {\n        ret = 10;\n      } else if (language === '*') {\n        ret = Math.max(ret, 5);\n      } else {\n        return 0;\n      }\n    }\n\n    if (pattern) {\n      if (pattern === candidateUri.fsPath || matchGlobPattern(pattern, candidateUri.fsPath)) {\n        ret = 10;\n      } else {\n        return 0;\n      }\n    }\n\n    return ret;\n  } else {\n    return 0;\n  }\n}","map":null,"metadata":{},"sourceType":"module"}