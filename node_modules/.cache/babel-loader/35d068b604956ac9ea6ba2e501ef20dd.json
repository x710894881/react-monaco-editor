{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../base/common/strings.js';\n\nvar Viewport =\n/** @class */\nfunction () {\n  function Viewport(top, left, width, height) {\n    this.top = top | 0;\n    this.left = left | 0;\n    this.width = width | 0;\n    this.height = height | 0;\n  }\n\n  return Viewport;\n}();\n\nexport { Viewport };\n\nvar MinimapLinesRenderingData =\n/** @class */\nfunction () {\n  function MinimapLinesRenderingData(tabSize, data) {\n    this.tabSize = tabSize;\n    this.data = data;\n  }\n\n  return MinimapLinesRenderingData;\n}();\n\nexport { MinimapLinesRenderingData };\n\nvar ViewLineData =\n/** @class */\nfunction () {\n  function ViewLineData(content, continuesWithWrappedLine, minColumn, maxColumn, tokens) {\n    this.content = content;\n    this.continuesWithWrappedLine = continuesWithWrappedLine;\n    this.minColumn = minColumn;\n    this.maxColumn = maxColumn;\n    this.tokens = tokens;\n  }\n\n  return ViewLineData;\n}();\n\nexport { ViewLineData };\n\nvar ViewLineRenderingData =\n/** @class */\nfunction () {\n  function ViewLineRenderingData(minColumn, maxColumn, content, continuesWithWrappedLine, mightContainRTL, mightContainNonBasicASCII, tokens, inlineDecorations, tabSize) {\n    this.minColumn = minColumn;\n    this.maxColumn = maxColumn;\n    this.content = content;\n    this.continuesWithWrappedLine = continuesWithWrappedLine;\n    this.isBasicASCII = ViewLineRenderingData.isBasicASCII(content, mightContainNonBasicASCII);\n    this.containsRTL = ViewLineRenderingData.containsRTL(content, this.isBasicASCII, mightContainRTL);\n    this.tokens = tokens;\n    this.inlineDecorations = inlineDecorations;\n    this.tabSize = tabSize;\n  }\n\n  ViewLineRenderingData.isBasicASCII = function (lineContent, mightContainNonBasicASCII) {\n    if (mightContainNonBasicASCII) {\n      return strings.isBasicASCII(lineContent);\n    }\n\n    return true;\n  };\n\n  ViewLineRenderingData.containsRTL = function (lineContent, isBasicASCII, mightContainRTL) {\n    if (!isBasicASCII && mightContainRTL) {\n      return strings.containsRTL(lineContent);\n    }\n\n    return false;\n  };\n\n  return ViewLineRenderingData;\n}();\n\nexport { ViewLineRenderingData };\n\nvar InlineDecoration =\n/** @class */\nfunction () {\n  function InlineDecoration(range, inlineClassName, type) {\n    this.range = range;\n    this.inlineClassName = inlineClassName;\n    this.type = type;\n  }\n\n  return InlineDecoration;\n}();\n\nexport { InlineDecoration };\n\nvar ViewModelDecoration =\n/** @class */\nfunction () {\n  function ViewModelDecoration(range, options) {\n    this.range = range;\n    this.options = options;\n  }\n\n  return ViewModelDecoration;\n}();\n\nexport { ViewModelDecoration };","map":null,"metadata":{},"sourceType":"module"}