{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport * as nls from '../../../nls.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\nimport { registerEditorAction, registerEditorContribution, EditorAction, EditorCommand, registerEditorCommand } from '../../browser/editorExtensions.js';\nimport { ParameterHintsWidget } from './parameterHintsWidget.js';\nimport { Context } from './provideSignatureHelp.js';\nimport * as modes from '../../common/modes.js';\n\nvar ParameterHintsController =\n/** @class */\nfunction (_super) {\n  __extends(ParameterHintsController, _super);\n\n  function ParameterHintsController(editor, instantiationService) {\n    var _this = _super.call(this) || this;\n\n    _this.editor = editor;\n    _this.widget = _this._register(instantiationService.createInstance(ParameterHintsWidget, _this.editor));\n    return _this;\n  }\n\n  ParameterHintsController.get = function (editor) {\n    return editor.getContribution(ParameterHintsController.ID);\n  };\n\n  ParameterHintsController.prototype.getId = function () {\n    return ParameterHintsController.ID;\n  };\n\n  ParameterHintsController.prototype.cancel = function () {\n    this.widget.cancel();\n  };\n\n  ParameterHintsController.prototype.previous = function () {\n    this.widget.previous();\n  };\n\n  ParameterHintsController.prototype.next = function () {\n    this.widget.next();\n  };\n\n  ParameterHintsController.prototype.trigger = function (context) {\n    this.widget.trigger(context);\n  };\n\n  ParameterHintsController.ID = 'editor.controller.parameterHints';\n  ParameterHintsController = __decorate([__param(1, IInstantiationService)], ParameterHintsController);\n  return ParameterHintsController;\n}(Disposable);\n\nvar TriggerParameterHintsAction =\n/** @class */\nfunction (_super) {\n  __extends(TriggerParameterHintsAction, _super);\n\n  function TriggerParameterHintsAction() {\n    return _super.call(this, {\n      id: 'editor.action.triggerParameterHints',\n      label: nls.localize('parameterHints.trigger.label', \"Trigger Parameter Hints\"),\n      alias: 'Trigger Parameter Hints',\n      precondition: EditorContextKeys.hasSignatureHelpProvider,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 2048\n        /* CtrlCmd */\n        | 1024\n        /* Shift */\n        | 10\n        /* Space */\n        ,\n        weight: 100\n        /* EditorContrib */\n\n      }\n    }) || this;\n  }\n\n  TriggerParameterHintsAction.prototype.run = function (accessor, editor) {\n    var controller = ParameterHintsController.get(editor);\n\n    if (controller) {\n      controller.trigger({\n        triggerKind: modes.SignatureHelpTriggerKind.Invoke\n      });\n    }\n  };\n\n  return TriggerParameterHintsAction;\n}(EditorAction);\n\nexport { TriggerParameterHintsAction };\nregisterEditorContribution(ParameterHintsController);\nregisterEditorAction(TriggerParameterHintsAction);\nvar weight = 100\n/* EditorContrib */\n+ 75;\nvar ParameterHintsCommand = EditorCommand.bindToContribution(ParameterHintsController.get);\nregisterEditorCommand(new ParameterHintsCommand({\n  id: 'closeParameterHints',\n  precondition: Context.Visible,\n  handler: function (x) {\n    return x.cancel();\n  },\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.focus,\n    primary: 9\n    /* Escape */\n    ,\n    secondary: [1024\n    /* Shift */\n    | 9\n    /* Escape */\n    ]\n  }\n}));\nregisterEditorCommand(new ParameterHintsCommand({\n  id: 'showPrevParameterHint',\n  precondition: ContextKeyExpr.and(Context.Visible, Context.MultipleSignatures),\n  handler: function (x) {\n    return x.previous();\n  },\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.focus,\n    primary: 16\n    /* UpArrow */\n    ,\n    secondary: [512\n    /* Alt */\n    | 16\n    /* UpArrow */\n    ],\n    mac: {\n      primary: 16\n      /* UpArrow */\n      ,\n      secondary: [512\n      /* Alt */\n      | 16\n      /* UpArrow */\n      , 256\n      /* WinCtrl */\n      | 46\n      /* KEY_P */\n      ]\n    }\n  }\n}));\nregisterEditorCommand(new ParameterHintsCommand({\n  id: 'showNextParameterHint',\n  precondition: ContextKeyExpr.and(Context.Visible, Context.MultipleSignatures),\n  handler: function (x) {\n    return x.next();\n  },\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.focus,\n    primary: 18\n    /* DownArrow */\n    ,\n    secondary: [512\n    /* Alt */\n    | 18\n    /* DownArrow */\n    ],\n    mac: {\n      primary: 18\n      /* DownArrow */\n      ,\n      secondary: [512\n      /* Alt */\n      | 18\n      /* DownArrow */\n      , 256\n      /* WinCtrl */\n      | 44\n      /* KEY_N */\n      ]\n    }\n  }\n}));","map":null,"metadata":{},"sourceType":"module"}