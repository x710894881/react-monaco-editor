{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar ColorZone =\n/** @class */\nfunction () {\n  function ColorZone(from, to, colorId) {\n    this.from = from | 0;\n    this.to = to | 0;\n    this.colorId = colorId | 0;\n  }\n\n  ColorZone.compare = function (a, b) {\n    if (a.colorId === b.colorId) {\n      if (a.from === b.from) {\n        return a.to - b.to;\n      }\n\n      return a.from - b.from;\n    }\n\n    return a.colorId - b.colorId;\n  };\n\n  return ColorZone;\n}();\n\nexport { ColorZone };\n/**\n * A zone in the overview ruler\n */\n\nvar OverviewRulerZone =\n/** @class */\nfunction () {\n  function OverviewRulerZone(startLineNumber, endLineNumber, color) {\n    this.startLineNumber = startLineNumber;\n    this.endLineNumber = endLineNumber;\n    this.color = color;\n    this._colorZone = null;\n  }\n\n  OverviewRulerZone.compare = function (a, b) {\n    if (a.color === b.color) {\n      if (a.startLineNumber === b.startLineNumber) {\n        return a.endLineNumber - b.endLineNumber;\n      }\n\n      return a.startLineNumber - b.startLineNumber;\n    }\n\n    return a.color < b.color ? -1 : 1;\n  };\n\n  OverviewRulerZone.prototype.setColorZone = function (colorZone) {\n    this._colorZone = colorZone;\n  };\n\n  OverviewRulerZone.prototype.getColorZones = function () {\n    return this._colorZone;\n  };\n\n  return OverviewRulerZone;\n}();\n\nexport { OverviewRulerZone };\n\nvar OverviewZoneManager =\n/** @class */\nfunction () {\n  function OverviewZoneManager(getVerticalOffsetForLine) {\n    this._getVerticalOffsetForLine = getVerticalOffsetForLine;\n    this._zones = [];\n    this._colorZonesInvalid = false;\n    this._lineHeight = 0;\n    this._domWidth = 0;\n    this._domHeight = 0;\n    this._outerHeight = 0;\n    this._pixelRatio = 1;\n    this._lastAssignedId = 0;\n    this._color2Id = Object.create(null);\n    this._id2Color = [];\n  }\n\n  OverviewZoneManager.prototype.getId2Color = function () {\n    return this._id2Color;\n  };\n\n  OverviewZoneManager.prototype.setZones = function (newZones) {\n    this._zones = newZones;\n\n    this._zones.sort(OverviewRulerZone.compare);\n  };\n\n  OverviewZoneManager.prototype.setLineHeight = function (lineHeight) {\n    if (this._lineHeight === lineHeight) {\n      return false;\n    }\n\n    this._lineHeight = lineHeight;\n    this._colorZonesInvalid = true;\n    return true;\n  };\n\n  OverviewZoneManager.prototype.setPixelRatio = function (pixelRatio) {\n    this._pixelRatio = pixelRatio;\n    this._colorZonesInvalid = true;\n  };\n\n  OverviewZoneManager.prototype.getDOMWidth = function () {\n    return this._domWidth;\n  };\n\n  OverviewZoneManager.prototype.getCanvasWidth = function () {\n    return this._domWidth * this._pixelRatio;\n  };\n\n  OverviewZoneManager.prototype.setDOMWidth = function (width) {\n    if (this._domWidth === width) {\n      return false;\n    }\n\n    this._domWidth = width;\n    this._colorZonesInvalid = true;\n    return true;\n  };\n\n  OverviewZoneManager.prototype.getDOMHeight = function () {\n    return this._domHeight;\n  };\n\n  OverviewZoneManager.prototype.getCanvasHeight = function () {\n    return this._domHeight * this._pixelRatio;\n  };\n\n  OverviewZoneManager.prototype.setDOMHeight = function (height) {\n    if (this._domHeight === height) {\n      return false;\n    }\n\n    this._domHeight = height;\n    this._colorZonesInvalid = true;\n    return true;\n  };\n\n  OverviewZoneManager.prototype.getOuterHeight = function () {\n    return this._outerHeight;\n  };\n\n  OverviewZoneManager.prototype.setOuterHeight = function (outerHeight) {\n    if (this._outerHeight === outerHeight) {\n      return false;\n    }\n\n    this._outerHeight = outerHeight;\n    this._colorZonesInvalid = true;\n    return true;\n  };\n\n  OverviewZoneManager.prototype.resolveColorZones = function () {\n    var colorZonesInvalid = this._colorZonesInvalid;\n    var lineHeight = Math.floor(this._lineHeight); // @perf\n\n    var totalHeight = Math.floor(this.getCanvasHeight()); // @perf\n\n    var outerHeight = Math.floor(this._outerHeight); // @perf\n\n    var heightRatio = totalHeight / outerHeight;\n    var halfMinimumHeight = Math.floor(4\n    /* MINIMUM_HEIGHT */\n    * this._pixelRatio / 2);\n    var allColorZones = [];\n\n    for (var i = 0, len = this._zones.length; i < len; i++) {\n      var zone = this._zones[i];\n\n      if (!colorZonesInvalid) {\n        var colorZone_1 = zone.getColorZones();\n\n        if (colorZone_1) {\n          allColorZones.push(colorZone_1);\n          continue;\n        }\n      }\n\n      var y1 = Math.floor(heightRatio * this._getVerticalOffsetForLine(zone.startLineNumber));\n      var y2 = Math.floor(heightRatio * (this._getVerticalOffsetForLine(zone.endLineNumber) + lineHeight));\n      var ycenter = Math.floor((y1 + y2) / 2);\n      var halfHeight = y2 - ycenter;\n\n      if (halfHeight < halfMinimumHeight) {\n        halfHeight = halfMinimumHeight;\n      }\n\n      if (ycenter - halfHeight < 0) {\n        ycenter = halfHeight;\n      }\n\n      if (ycenter + halfHeight > totalHeight) {\n        ycenter = totalHeight - halfHeight;\n      }\n\n      var color = zone.color;\n      var colorId = this._color2Id[color];\n\n      if (!colorId) {\n        colorId = ++this._lastAssignedId;\n        this._color2Id[color] = colorId;\n        this._id2Color[colorId] = color;\n      }\n\n      var colorZone = new ColorZone(ycenter - halfHeight, ycenter + halfHeight, colorId);\n      zone.setColorZone(colorZone);\n      allColorZones.push(colorZone);\n    }\n\n    this._colorZonesInvalid = false;\n    allColorZones.sort(ColorZone.compare);\n    return allColorZones;\n  };\n\n  return OverviewZoneManager;\n}();\n\nexport { OverviewZoneManager };","map":null,"metadata":{},"sourceType":"module"}