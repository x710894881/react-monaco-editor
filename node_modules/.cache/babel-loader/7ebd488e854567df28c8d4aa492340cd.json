{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { EditorCommand, registerEditorCommand } from '../../browser/editorExtensions.js';\nimport { ReplaceCommand } from '../../common/commands/replaceCommand.js';\nimport { CursorState } from '../../common/controller/cursorCommon.js';\nimport { WordOperations } from '../../common/controller/cursorWordOperations.js';\nimport { getMapForWordSeparators } from '../../common/controller/wordCharacterClassifier.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { Selection } from '../../common/core/selection.js';\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\nimport { CONTEXT_ACCESSIBILITY_MODE_ENABLED } from '../../../platform/accessibility/common/accessibility.js';\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\nimport { EDITOR_DEFAULTS } from '../../common/config/editorOptions.js';\n\nvar MoveWordCommand =\n/** @class */\nfunction (_super) {\n  __extends(MoveWordCommand, _super);\n\n  function MoveWordCommand(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this._inSelectionMode = opts.inSelectionMode;\n    _this._wordNavigationType = opts.wordNavigationType;\n    return _this;\n  }\n\n  MoveWordCommand.prototype.runEditorCommand = function (accessor, editor, args) {\n    var _this = this;\n\n    if (!editor.hasModel()) {\n      return;\n    }\n\n    var config = editor.getConfiguration();\n    var wordSeparators = getMapForWordSeparators(config.wordSeparators);\n    var model = editor.getModel();\n    var selections = editor.getSelections();\n    var result = selections.map(function (sel) {\n      var inPosition = new Position(sel.positionLineNumber, sel.positionColumn);\n\n      var outPosition = _this._move(wordSeparators, model, inPosition, _this._wordNavigationType);\n\n      return _this._moveTo(sel, outPosition, _this._inSelectionMode);\n    });\n\n    editor._getCursors().setStates('moveWordCommand', 0\n    /* NotSet */\n    , result.map(function (r) {\n      return CursorState.fromModelSelection(r);\n    }));\n\n    if (result.length === 1) {\n      var pos = new Position(result[0].positionLineNumber, result[0].positionColumn);\n      editor.revealPosition(pos, 0\n      /* Smooth */\n      );\n    }\n  };\n\n  MoveWordCommand.prototype._moveTo = function (from, to, inSelectionMode) {\n    if (inSelectionMode) {\n      // move just position\n      return new Selection(from.selectionStartLineNumber, from.selectionStartColumn, to.lineNumber, to.column);\n    } else {\n      // move everything\n      return new Selection(to.lineNumber, to.column, to.lineNumber, to.column);\n    }\n  };\n\n  return MoveWordCommand;\n}(EditorCommand);\n\nexport { MoveWordCommand };\n\nvar WordLeftCommand =\n/** @class */\nfunction (_super) {\n  __extends(WordLeftCommand, _super);\n\n  function WordLeftCommand() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  WordLeftCommand.prototype._move = function (wordSeparators, model, position, wordNavigationType) {\n    return WordOperations.moveWordLeft(wordSeparators, model, position, wordNavigationType);\n  };\n\n  return WordLeftCommand;\n}(MoveWordCommand);\n\nexport { WordLeftCommand };\n\nvar WordRightCommand =\n/** @class */\nfunction (_super) {\n  __extends(WordRightCommand, _super);\n\n  function WordRightCommand() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  WordRightCommand.prototype._move = function (wordSeparators, model, position, wordNavigationType) {\n    return WordOperations.moveWordRight(wordSeparators, model, position, wordNavigationType);\n  };\n\n  return WordRightCommand;\n}(MoveWordCommand);\n\nexport { WordRightCommand };\n\nvar CursorWordStartLeft =\n/** @class */\nfunction (_super) {\n  __extends(CursorWordStartLeft, _super);\n\n  function CursorWordStartLeft() {\n    return _super.call(this, {\n      inSelectionMode: false,\n      wordNavigationType: 0\n      /* WordStart */\n      ,\n      id: 'cursorWordStartLeft',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 2048\n        /* CtrlCmd */\n        | 15\n        /* LeftArrow */\n        ,\n        mac: {\n          primary: 512\n          /* Alt */\n          | 15\n          /* LeftArrow */\n\n        },\n        weight: 100\n        /* EditorContrib */\n\n      }\n    }) || this;\n  }\n\n  return CursorWordStartLeft;\n}(WordLeftCommand);\n\nexport { CursorWordStartLeft };\n\nvar CursorWordEndLeft =\n/** @class */\nfunction (_super) {\n  __extends(CursorWordEndLeft, _super);\n\n  function CursorWordEndLeft() {\n    return _super.call(this, {\n      inSelectionMode: false,\n      wordNavigationType: 2\n      /* WordEnd */\n      ,\n      id: 'cursorWordEndLeft',\n      precondition: undefined\n    }) || this;\n  }\n\n  return CursorWordEndLeft;\n}(WordLeftCommand);\n\nexport { CursorWordEndLeft };\n\nvar CursorWordLeft =\n/** @class */\nfunction (_super) {\n  __extends(CursorWordLeft, _super);\n\n  function CursorWordLeft() {\n    return _super.call(this, {\n      inSelectionMode: false,\n      wordNavigationType: 1\n      /* WordStartFast */\n      ,\n      id: 'cursorWordLeft',\n      precondition: undefined\n    }) || this;\n  }\n\n  return CursorWordLeft;\n}(WordLeftCommand);\n\nexport { CursorWordLeft };\n\nvar CursorWordStartLeftSelect =\n/** @class */\nfunction (_super) {\n  __extends(CursorWordStartLeftSelect, _super);\n\n  function CursorWordStartLeftSelect() {\n    return _super.call(this, {\n      inSelectionMode: true,\n      wordNavigationType: 0\n      /* WordStart */\n      ,\n      id: 'cursorWordStartLeftSelect',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 2048\n        /* CtrlCmd */\n        | 1024\n        /* Shift */\n        | 15\n        /* LeftArrow */\n        ,\n        mac: {\n          primary: 512\n          /* Alt */\n          | 1024\n          /* Shift */\n          | 15\n          /* LeftArrow */\n\n        },\n        weight: 100\n        /* EditorContrib */\n\n      }\n    }) || this;\n  }\n\n  return CursorWordStartLeftSelect;\n}(WordLeftCommand);\n\nexport { CursorWordStartLeftSelect };\n\nvar CursorWordEndLeftSelect =\n/** @class */\nfunction (_super) {\n  __extends(CursorWordEndLeftSelect, _super);\n\n  function CursorWordEndLeftSelect() {\n    return _super.call(this, {\n      inSelectionMode: true,\n      wordNavigationType: 2\n      /* WordEnd */\n      ,\n      id: 'cursorWordEndLeftSelect',\n      precondition: undefined\n    }) || this;\n  }\n\n  return CursorWordEndLeftSelect;\n}(WordLeftCommand);\n\nexport { CursorWordEndLeftSelect };\n\nvar CursorWordLeftSelect =\n/** @class */\nfunction (_super) {\n  __extends(CursorWordLeftSelect, _super);\n\n  function CursorWordLeftSelect() {\n    return _super.call(this, {\n      inSelectionMode: true,\n      wordNavigationType: 1\n      /* WordStartFast */\n      ,\n      id: 'cursorWordLeftSelect',\n      precondition: undefined\n    }) || this;\n  }\n\n  return CursorWordLeftSelect;\n}(WordLeftCommand);\n\nexport { CursorWordLeftSelect };\n\nvar CursorWordAccessibilityLeft =\n/** @class */\nfunction (_super) {\n  __extends(CursorWordAccessibilityLeft, _super);\n\n  function CursorWordAccessibilityLeft() {\n    return _super.call(this, {\n      inSelectionMode: false,\n      wordNavigationType: 3\n      /* WordAccessibility */\n      ,\n      id: 'cursorWordAccessibilityLeft',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.textInputFocus, CONTEXT_ACCESSIBILITY_MODE_ENABLED),\n        primary: 2048\n        /* CtrlCmd */\n        | 15\n        /* LeftArrow */\n        ,\n        mac: {\n          primary: 512\n          /* Alt */\n          | 15\n          /* LeftArrow */\n\n        },\n        weight: 100\n        /* EditorContrib */\n        + 1\n      }\n    }) || this;\n  }\n\n  CursorWordAccessibilityLeft.prototype._move = function (_, model, position, wordNavigationType) {\n    return _super.prototype._move.call(this, getMapForWordSeparators(EDITOR_DEFAULTS.wordSeparators), model, position, wordNavigationType);\n  };\n\n  return CursorWordAccessibilityLeft;\n}(WordLeftCommand);\n\nexport { CursorWordAccessibilityLeft };\n\nvar CursorWordAccessibilityLeftSelect =\n/** @class */\nfunction (_super) {\n  __extends(CursorWordAccessibilityLeftSelect, _super);\n\n  function CursorWordAccessibilityLeftSelect() {\n    return _super.call(this, {\n      inSelectionMode: true,\n      wordNavigationType: 3\n      /* WordAccessibility */\n      ,\n      id: 'cursorWordAccessibilityLeftSelect',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.textInputFocus, CONTEXT_ACCESSIBILITY_MODE_ENABLED),\n        primary: 2048\n        /* CtrlCmd */\n        | 1024\n        /* Shift */\n        | 15\n        /* LeftArrow */\n        ,\n        mac: {\n          primary: 512\n          /* Alt */\n          | 1024\n          /* Shift */\n          | 15\n          /* LeftArrow */\n\n        },\n        weight: 100\n        /* EditorContrib */\n        + 1\n      }\n    }) || this;\n  }\n\n  CursorWordAccessibilityLeftSelect.prototype._move = function (_, model, position, wordNavigationType) {\n    return _super.prototype._move.call(this, getMapForWordSeparators(EDITOR_DEFAULTS.wordSeparators), model, position, wordNavigationType);\n  };\n\n  return CursorWordAccessibilityLeftSelect;\n}(WordLeftCommand);\n\nexport { CursorWordAccessibilityLeftSelect };\n\nvar CursorWordStartRight =\n/** @class */\nfunction (_super) {\n  __extends(CursorWordStartRight, _super);\n\n  function CursorWordStartRight() {\n    return _super.call(this, {\n      inSelectionMode: false,\n      wordNavigationType: 0\n      /* WordStart */\n      ,\n      id: 'cursorWordStartRight',\n      precondition: undefined\n    }) || this;\n  }\n\n  return CursorWordStartRight;\n}(WordRightCommand);\n\nexport { CursorWordStartRight };\n\nvar CursorWordEndRight =\n/** @class */\nfunction (_super) {\n  __extends(CursorWordEndRight, _super);\n\n  function CursorWordEndRight() {\n    return _super.call(this, {\n      inSelectionMode: false,\n      wordNavigationType: 2\n      /* WordEnd */\n      ,\n      id: 'cursorWordEndRight',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 2048\n        /* CtrlCmd */\n        | 17\n        /* RightArrow */\n        ,\n        mac: {\n          primary: 512\n          /* Alt */\n          | 17\n          /* RightArrow */\n\n        },\n        weight: 100\n        /* EditorContrib */\n\n      }\n    }) || this;\n  }\n\n  return CursorWordEndRight;\n}(WordRightCommand);\n\nexport { CursorWordEndRight };\n\nvar CursorWordRight =\n/** @class */\nfunction (_super) {\n  __extends(CursorWordRight, _super);\n\n  function CursorWordRight() {\n    return _super.call(this, {\n      inSelectionMode: false,\n      wordNavigationType: 2\n      /* WordEnd */\n      ,\n      id: 'cursorWordRight',\n      precondition: undefined\n    }) || this;\n  }\n\n  return CursorWordRight;\n}(WordRightCommand);\n\nexport { CursorWordRight };\n\nvar CursorWordStartRightSelect =\n/** @class */\nfunction (_super) {\n  __extends(CursorWordStartRightSelect, _super);\n\n  function CursorWordStartRightSelect() {\n    return _super.call(this, {\n      inSelectionMode: true,\n      wordNavigationType: 0\n      /* WordStart */\n      ,\n      id: 'cursorWordStartRightSelect',\n      precondition: undefined\n    }) || this;\n  }\n\n  return CursorWordStartRightSelect;\n}(WordRightCommand);\n\nexport { CursorWordStartRightSelect };\n\nvar CursorWordEndRightSelect =\n/** @class */\nfunction (_super) {\n  __extends(CursorWordEndRightSelect, _super);\n\n  function CursorWordEndRightSelect() {\n    return _super.call(this, {\n      inSelectionMode: true,\n      wordNavigationType: 2\n      /* WordEnd */\n      ,\n      id: 'cursorWordEndRightSelect',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 2048\n        /* CtrlCmd */\n        | 1024\n        /* Shift */\n        | 17\n        /* RightArrow */\n        ,\n        mac: {\n          primary: 512\n          /* Alt */\n          | 1024\n          /* Shift */\n          | 17\n          /* RightArrow */\n\n        },\n        weight: 100\n        /* EditorContrib */\n\n      }\n    }) || this;\n  }\n\n  return CursorWordEndRightSelect;\n}(WordRightCommand);\n\nexport { CursorWordEndRightSelect };\n\nvar CursorWordRightSelect =\n/** @class */\nfunction (_super) {\n  __extends(CursorWordRightSelect, _super);\n\n  function CursorWordRightSelect() {\n    return _super.call(this, {\n      inSelectionMode: true,\n      wordNavigationType: 2\n      /* WordEnd */\n      ,\n      id: 'cursorWordRightSelect',\n      precondition: undefined\n    }) || this;\n  }\n\n  return CursorWordRightSelect;\n}(WordRightCommand);\n\nexport { CursorWordRightSelect };\n\nvar CursorWordAccessibilityRight =\n/** @class */\nfunction (_super) {\n  __extends(CursorWordAccessibilityRight, _super);\n\n  function CursorWordAccessibilityRight() {\n    return _super.call(this, {\n      inSelectionMode: false,\n      wordNavigationType: 3\n      /* WordAccessibility */\n      ,\n      id: 'cursorWordAccessibilityRight',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.textInputFocus, CONTEXT_ACCESSIBILITY_MODE_ENABLED),\n        primary: 2048\n        /* CtrlCmd */\n        | 17\n        /* RightArrow */\n        ,\n        mac: {\n          primary: 512\n          /* Alt */\n          | 17\n          /* RightArrow */\n\n        },\n        weight: 100\n        /* EditorContrib */\n        + 1\n      }\n    }) || this;\n  }\n\n  CursorWordAccessibilityRight.prototype._move = function (_, model, position, wordNavigationType) {\n    return _super.prototype._move.call(this, getMapForWordSeparators(EDITOR_DEFAULTS.wordSeparators), model, position, wordNavigationType);\n  };\n\n  return CursorWordAccessibilityRight;\n}(WordRightCommand);\n\nexport { CursorWordAccessibilityRight };\n\nvar CursorWordAccessibilityRightSelect =\n/** @class */\nfunction (_super) {\n  __extends(CursorWordAccessibilityRightSelect, _super);\n\n  function CursorWordAccessibilityRightSelect() {\n    return _super.call(this, {\n      inSelectionMode: true,\n      wordNavigationType: 3\n      /* WordAccessibility */\n      ,\n      id: 'cursorWordAccessibilityRightSelect',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.textInputFocus, CONTEXT_ACCESSIBILITY_MODE_ENABLED),\n        primary: 2048\n        /* CtrlCmd */\n        | 1024\n        /* Shift */\n        | 17\n        /* RightArrow */\n        ,\n        mac: {\n          primary: 512\n          /* Alt */\n          | 1024\n          /* Shift */\n          | 17\n          /* RightArrow */\n\n        },\n        weight: 100\n        /* EditorContrib */\n        + 1\n      }\n    }) || this;\n  }\n\n  CursorWordAccessibilityRightSelect.prototype._move = function (_, model, position, wordNavigationType) {\n    return _super.prototype._move.call(this, getMapForWordSeparators(EDITOR_DEFAULTS.wordSeparators), model, position, wordNavigationType);\n  };\n\n  return CursorWordAccessibilityRightSelect;\n}(WordRightCommand);\n\nexport { CursorWordAccessibilityRightSelect };\n\nvar DeleteWordCommand =\n/** @class */\nfunction (_super) {\n  __extends(DeleteWordCommand, _super);\n\n  function DeleteWordCommand(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this._whitespaceHeuristics = opts.whitespaceHeuristics;\n    _this._wordNavigationType = opts.wordNavigationType;\n    return _this;\n  }\n\n  DeleteWordCommand.prototype.runEditorCommand = function (accessor, editor, args) {\n    var _this = this;\n\n    if (!editor.hasModel()) {\n      return;\n    }\n\n    var config = editor.getConfiguration();\n    var wordSeparators = getMapForWordSeparators(config.wordSeparators);\n    var model = editor.getModel();\n    var selections = editor.getSelections();\n    var commands = selections.map(function (sel) {\n      var deleteRange = _this._delete(wordSeparators, model, sel, _this._whitespaceHeuristics, _this._wordNavigationType);\n\n      return new ReplaceCommand(deleteRange, '');\n    });\n    editor.pushUndoStop();\n    editor.executeCommands(this.id, commands);\n    editor.pushUndoStop();\n  };\n\n  return DeleteWordCommand;\n}(EditorCommand);\n\nexport { DeleteWordCommand };\n\nvar DeleteWordLeftCommand =\n/** @class */\nfunction (_super) {\n  __extends(DeleteWordLeftCommand, _super);\n\n  function DeleteWordLeftCommand() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  DeleteWordLeftCommand.prototype._delete = function (wordSeparators, model, selection, whitespaceHeuristics, wordNavigationType) {\n    var r = WordOperations.deleteWordLeft(wordSeparators, model, selection, whitespaceHeuristics, wordNavigationType);\n\n    if (r) {\n      return r;\n    }\n\n    return new Range(1, 1, 1, 1);\n  };\n\n  return DeleteWordLeftCommand;\n}(DeleteWordCommand);\n\nexport { DeleteWordLeftCommand };\n\nvar DeleteWordRightCommand =\n/** @class */\nfunction (_super) {\n  __extends(DeleteWordRightCommand, _super);\n\n  function DeleteWordRightCommand() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  DeleteWordRightCommand.prototype._delete = function (wordSeparators, model, selection, whitespaceHeuristics, wordNavigationType) {\n    var r = WordOperations.deleteWordRight(wordSeparators, model, selection, whitespaceHeuristics, wordNavigationType);\n\n    if (r) {\n      return r;\n    }\n\n    var lineCount = model.getLineCount();\n    var maxColumn = model.getLineMaxColumn(lineCount);\n    return new Range(lineCount, maxColumn, lineCount, maxColumn);\n  };\n\n  return DeleteWordRightCommand;\n}(DeleteWordCommand);\n\nexport { DeleteWordRightCommand };\n\nvar DeleteWordStartLeft =\n/** @class */\nfunction (_super) {\n  __extends(DeleteWordStartLeft, _super);\n\n  function DeleteWordStartLeft() {\n    return _super.call(this, {\n      whitespaceHeuristics: false,\n      wordNavigationType: 0\n      /* WordStart */\n      ,\n      id: 'deleteWordStartLeft',\n      precondition: EditorContextKeys.writable\n    }) || this;\n  }\n\n  return DeleteWordStartLeft;\n}(DeleteWordLeftCommand);\n\nexport { DeleteWordStartLeft };\n\nvar DeleteWordEndLeft =\n/** @class */\nfunction (_super) {\n  __extends(DeleteWordEndLeft, _super);\n\n  function DeleteWordEndLeft() {\n    return _super.call(this, {\n      whitespaceHeuristics: false,\n      wordNavigationType: 2\n      /* WordEnd */\n      ,\n      id: 'deleteWordEndLeft',\n      precondition: EditorContextKeys.writable\n    }) || this;\n  }\n\n  return DeleteWordEndLeft;\n}(DeleteWordLeftCommand);\n\nexport { DeleteWordEndLeft };\n\nvar DeleteWordLeft =\n/** @class */\nfunction (_super) {\n  __extends(DeleteWordLeft, _super);\n\n  function DeleteWordLeft() {\n    return _super.call(this, {\n      whitespaceHeuristics: true,\n      wordNavigationType: 0\n      /* WordStart */\n      ,\n      id: 'deleteWordLeft',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 2048\n        /* CtrlCmd */\n        | 1\n        /* Backspace */\n        ,\n        mac: {\n          primary: 512\n          /* Alt */\n          | 1\n          /* Backspace */\n\n        },\n        weight: 100\n        /* EditorContrib */\n\n      }\n    }) || this;\n  }\n\n  return DeleteWordLeft;\n}(DeleteWordLeftCommand);\n\nexport { DeleteWordLeft };\n\nvar DeleteWordStartRight =\n/** @class */\nfunction (_super) {\n  __extends(DeleteWordStartRight, _super);\n\n  function DeleteWordStartRight() {\n    return _super.call(this, {\n      whitespaceHeuristics: false,\n      wordNavigationType: 0\n      /* WordStart */\n      ,\n      id: 'deleteWordStartRight',\n      precondition: EditorContextKeys.writable\n    }) || this;\n  }\n\n  return DeleteWordStartRight;\n}(DeleteWordRightCommand);\n\nexport { DeleteWordStartRight };\n\nvar DeleteWordEndRight =\n/** @class */\nfunction (_super) {\n  __extends(DeleteWordEndRight, _super);\n\n  function DeleteWordEndRight() {\n    return _super.call(this, {\n      whitespaceHeuristics: false,\n      wordNavigationType: 2\n      /* WordEnd */\n      ,\n      id: 'deleteWordEndRight',\n      precondition: EditorContextKeys.writable\n    }) || this;\n  }\n\n  return DeleteWordEndRight;\n}(DeleteWordRightCommand);\n\nexport { DeleteWordEndRight };\n\nvar DeleteWordRight =\n/** @class */\nfunction (_super) {\n  __extends(DeleteWordRight, _super);\n\n  function DeleteWordRight() {\n    return _super.call(this, {\n      whitespaceHeuristics: true,\n      wordNavigationType: 2\n      /* WordEnd */\n      ,\n      id: 'deleteWordRight',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 2048\n        /* CtrlCmd */\n        | 20\n        /* Delete */\n        ,\n        mac: {\n          primary: 512\n          /* Alt */\n          | 20\n          /* Delete */\n\n        },\n        weight: 100\n        /* EditorContrib */\n\n      }\n    }) || this;\n  }\n\n  return DeleteWordRight;\n}(DeleteWordRightCommand);\n\nexport { DeleteWordRight };\nregisterEditorCommand(new CursorWordStartLeft());\nregisterEditorCommand(new CursorWordEndLeft());\nregisterEditorCommand(new CursorWordLeft());\nregisterEditorCommand(new CursorWordStartLeftSelect());\nregisterEditorCommand(new CursorWordEndLeftSelect());\nregisterEditorCommand(new CursorWordLeftSelect());\nregisterEditorCommand(new CursorWordStartRight());\nregisterEditorCommand(new CursorWordEndRight());\nregisterEditorCommand(new CursorWordRight());\nregisterEditorCommand(new CursorWordStartRightSelect());\nregisterEditorCommand(new CursorWordEndRightSelect());\nregisterEditorCommand(new CursorWordRightSelect());\nregisterEditorCommand(new CursorWordAccessibilityLeft());\nregisterEditorCommand(new CursorWordAccessibilityLeftSelect());\nregisterEditorCommand(new CursorWordAccessibilityRight());\nregisterEditorCommand(new CursorWordAccessibilityRightSelect());\nregisterEditorCommand(new DeleteWordStartLeft());\nregisterEditorCommand(new DeleteWordEndLeft());\nregisterEditorCommand(new DeleteWordLeft());\nregisterEditorCommand(new DeleteWordStartRight());\nregisterEditorCommand(new DeleteWordEndRight());\nregisterEditorCommand(new DeleteWordRight());","map":null,"metadata":{},"sourceType":"module"}