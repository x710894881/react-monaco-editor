{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { equals, flatten, isNonEmptyArray, mergeSort } from '../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { illegalArgument, isPromiseCanceledError, onUnexpectedExternalError } from '../../../base/common/errors.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { registerLanguageCommand } from '../../browser/editorExtensions.js';\nimport { Range } from '../../common/core/range.js';\nimport { Selection } from '../../common/core/selection.js';\nimport { CodeActionProviderRegistry } from '../../common/modes.js';\nimport { IModelService } from '../../common/services/modelService.js';\nimport { CodeActionKind, filtersAction, mayIncludeActionsOfKind } from './codeActionTrigger.js';\nimport { TextModelCancellationTokenSource } from '../../browser/core/editorState.js';\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\n\nvar ManagedCodeActionSet =\n/** @class */\nfunction (_super) {\n  __extends(ManagedCodeActionSet, _super);\n\n  function ManagedCodeActionSet(actions, disposables) {\n    var _this = _super.call(this) || this;\n\n    _this._register(disposables);\n\n    _this.actions = mergeSort(actions.slice(), ManagedCodeActionSet.codeActionsComparator);\n    return _this;\n  }\n\n  ManagedCodeActionSet.codeActionsComparator = function (a, b) {\n    if (isNonEmptyArray(a.diagnostics)) {\n      if (isNonEmptyArray(b.diagnostics)) {\n        return a.diagnostics[0].message.localeCompare(b.diagnostics[0].message);\n      } else {\n        return -1;\n      }\n    } else if (isNonEmptyArray(b.diagnostics)) {\n      return 1;\n    } else {\n      return 0; // both have no diagnostics\n    }\n  };\n\n  Object.defineProperty(ManagedCodeActionSet.prototype, \"hasAutoFix\", {\n    get: function () {\n      return this.actions.some(function (fix) {\n        return !!fix.kind && CodeActionKind.QuickFix.contains(new CodeActionKind(fix.kind)) && !!fix.isPreferred;\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return ManagedCodeActionSet;\n}(Disposable);\n\nexport function getCodeActions(model, rangeOrSelection, trigger, token) {\n  var filter = trigger.filter || {};\n  var codeActionContext = {\n    only: filter.kind ? filter.kind.value : undefined,\n    trigger: trigger.type === 'manual' ? 2\n    /* Manual */\n    : 1\n    /* Automatic */\n\n  };\n  var cts = new TextModelCancellationTokenSource(model, token);\n  var providers = getCodeActionProviders(model, filter);\n  var disposables = new DisposableStore();\n  var promises = providers.map(function (provider) {\n    return Promise.resolve(provider.provideCodeActions(model, rangeOrSelection, codeActionContext, cts.token)).then(function (providedCodeActions) {\n      if (cts.token.isCancellationRequested || !providedCodeActions) {\n        return [];\n      }\n\n      disposables.add(providedCodeActions);\n      return providedCodeActions.actions.filter(function (action) {\n        return action && filtersAction(filter, action);\n      });\n    }, function (err) {\n      if (isPromiseCanceledError(err)) {\n        throw err;\n      }\n\n      onUnexpectedExternalError(err);\n      return [];\n    });\n  });\n  var listener = CodeActionProviderRegistry.onDidChange(function () {\n    var newProviders = CodeActionProviderRegistry.all(model);\n\n    if (!equals(newProviders, providers)) {\n      cts.cancel();\n    }\n  });\n  return Promise.all(promises).then(flatten).then(function (actions) {\n    return new ManagedCodeActionSet(actions, disposables);\n  }).finally(function () {\n    listener.dispose();\n    cts.dispose();\n  });\n}\n\nfunction getCodeActionProviders(model, filter) {\n  return CodeActionProviderRegistry.all(model) // Don't include providers that we know will not return code actions of interest\n  .filter(function (provider) {\n    if (!provider.providedCodeActionKinds) {\n      // We don't know what type of actions this provider will return.\n      return true;\n    }\n\n    return provider.providedCodeActionKinds.some(function (kind) {\n      return mayIncludeActionsOfKind(filter, new CodeActionKind(kind));\n    });\n  });\n}\n\nregisterLanguageCommand('_executeCodeActionProvider', function (accessor, args) {\n  return __awaiter(this, void 0, void 0, function () {\n    var resource, rangeOrSelection, kind, model, validatedRangeOrSelection, codeActionSet;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          resource = args.resource, rangeOrSelection = args.rangeOrSelection, kind = args.kind;\n\n          if (!(resource instanceof URI)) {\n            throw illegalArgument();\n          }\n\n          model = accessor.get(IModelService).getModel(resource);\n\n          if (!model) {\n            throw illegalArgument();\n          }\n\n          validatedRangeOrSelection = Selection.isISelection(rangeOrSelection) ? Selection.liftSelection(rangeOrSelection) : Range.isIRange(rangeOrSelection) ? model.validateRange(rangeOrSelection) : undefined;\n\n          if (!validatedRangeOrSelection) {\n            throw illegalArgument();\n          }\n\n          return [4\n          /*yield*/\n          , getCodeActions(model, validatedRangeOrSelection, {\n            type: 'manual',\n            filter: {\n              includeSourceActions: true,\n              kind: kind && kind.value ? new CodeActionKind(kind.value) : undefined\n            }\n          }, CancellationToken.None)];\n\n        case 1:\n          codeActionSet = _a.sent();\n          setTimeout(function () {\n            return codeActionSet.dispose();\n          }, 100);\n          return [2\n          /*return*/\n          , codeActionSet.actions];\n      }\n    });\n  });\n});","map":null,"metadata":{},"sourceType":"module"}