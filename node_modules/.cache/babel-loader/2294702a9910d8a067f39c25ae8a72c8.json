{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Dimension } from '../../../../base/browser/dom.js';\nimport { QuickOpenWidget } from '../../../../base/parts/quickopen/browser/quickOpenWidget.js';\nimport { foreground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { attachQuickOpenStyler } from '../../../../platform/theme/common/styler.js';\n\nvar QuickOpenEditorWidget =\n/** @class */\nfunction () {\n  function QuickOpenEditorWidget(codeEditor, onOk, onCancel, onType, configuration, themeService) {\n    this.codeEditor = codeEditor;\n    this.themeService = themeService;\n    this.create(onOk, onCancel, onType, configuration);\n  }\n\n  QuickOpenEditorWidget.prototype.create = function (onOk, onCancel, onType, configuration) {\n    this.domNode = document.createElement('div');\n    this.quickOpenWidget = new QuickOpenWidget(this.domNode, {\n      onOk: onOk,\n      onCancel: onCancel,\n      onType: onType\n    }, {\n      inputPlaceHolder: undefined,\n      inputAriaLabel: configuration.inputAriaLabel,\n      keyboardSupport: true\n    });\n    this.styler = attachQuickOpenStyler(this.quickOpenWidget, this.themeService, {\n      pickerGroupForeground: foreground\n    });\n    this.quickOpenWidget.create();\n    this.codeEditor.addOverlayWidget(this);\n  };\n\n  QuickOpenEditorWidget.prototype.setInput = function (model, focus) {\n    this.quickOpenWidget.setInput(model, focus);\n  };\n\n  QuickOpenEditorWidget.prototype.getId = function () {\n    return QuickOpenEditorWidget.ID;\n  };\n\n  QuickOpenEditorWidget.prototype.getDomNode = function () {\n    return this.domNode;\n  };\n\n  QuickOpenEditorWidget.prototype.destroy = function () {\n    this.codeEditor.removeOverlayWidget(this);\n    this.quickOpenWidget.dispose();\n    this.styler.dispose();\n  };\n\n  QuickOpenEditorWidget.prototype.show = function (value) {\n    this.visible = true;\n    var editorLayout = this.codeEditor.getLayoutInfo();\n\n    if (editorLayout) {\n      this.quickOpenWidget.layout(new Dimension(editorLayout.width, editorLayout.height));\n    }\n\n    this.quickOpenWidget.show(value);\n    this.codeEditor.layoutOverlayWidget(this);\n  };\n\n  QuickOpenEditorWidget.prototype.getPosition = function () {\n    if (this.visible) {\n      return {\n        preference: 2\n        /* TOP_CENTER */\n\n      };\n    }\n\n    return null;\n  };\n\n  QuickOpenEditorWidget.ID = 'editor.contrib.quickOpenEditorWidget';\n  return QuickOpenEditorWidget;\n}();\n\nexport { QuickOpenEditorWidget };","map":null,"metadata":{},"sourceType":"module"}