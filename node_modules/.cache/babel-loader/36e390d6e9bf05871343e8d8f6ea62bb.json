{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createScanner } from '../parser/htmlScanner.js';\nimport { DocumentHighlightKind } from '../../vscode-languageserver-types/main.js';\nimport { TokenType } from '../htmlLanguageTypes.js';\nexport function findDocumentHighlights(document, position, htmlDocument) {\n  var offset = document.offsetAt(position);\n  var node = htmlDocument.findNodeAt(offset);\n\n  if (!node.tag) {\n    return [];\n  }\n\n  var result = [];\n  var startTagRange = getTagNameRange(TokenType.StartTag, document, node.start);\n  var endTagRange = typeof node.endTagStart === 'number' && getTagNameRange(TokenType.EndTag, document, node.endTagStart);\n\n  if (startTagRange && covers(startTagRange, position) || endTagRange && covers(endTagRange, position)) {\n    if (startTagRange) {\n      result.push({\n        kind: DocumentHighlightKind.Read,\n        range: startTagRange\n      });\n    }\n\n    if (endTagRange) {\n      result.push({\n        kind: DocumentHighlightKind.Read,\n        range: endTagRange\n      });\n    }\n  }\n\n  return result;\n}\n\nfunction isBeforeOrEqual(pos1, pos2) {\n  return pos1.line < pos2.line || pos1.line === pos2.line && pos1.character <= pos2.character;\n}\n\nfunction covers(range, position) {\n  return isBeforeOrEqual(range.start, position) && isBeforeOrEqual(position, range.end);\n}\n\nfunction getTagNameRange(tokenType, document, startOffset) {\n  var scanner = createScanner(document.getText(), startOffset);\n  var token = scanner.scan();\n\n  while (token !== TokenType.EOS && token !== tokenType) {\n    token = scanner.scan();\n  }\n\n  if (token !== TokenType.EOS) {\n    return {\n      start: document.positionAt(scanner.getTokenOffset()),\n      end: document.positionAt(scanner.getTokenEnd())\n    };\n  }\n\n  return null;\n}","map":null,"metadata":{},"sourceType":"module"}