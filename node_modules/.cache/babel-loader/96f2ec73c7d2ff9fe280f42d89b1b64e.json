{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar IndentRulesSupport =\n/** @class */\nfunction () {\n  function IndentRulesSupport(indentationRules) {\n    this._indentationRules = indentationRules;\n  }\n\n  IndentRulesSupport.prototype.shouldIncrease = function (text) {\n    if (this._indentationRules) {\n      if (this._indentationRules.increaseIndentPattern && this._indentationRules.increaseIndentPattern.test(text)) {\n        return true;\n      } // if (this._indentationRules.indentNextLinePattern && this._indentationRules.indentNextLinePattern.test(text)) {\n      // \treturn true;\n      // }\n\n    }\n\n    return false;\n  };\n\n  IndentRulesSupport.prototype.shouldDecrease = function (text) {\n    if (this._indentationRules && this._indentationRules.decreaseIndentPattern && this._indentationRules.decreaseIndentPattern.test(text)) {\n      return true;\n    }\n\n    return false;\n  };\n\n  IndentRulesSupport.prototype.shouldIndentNextLine = function (text) {\n    if (this._indentationRules && this._indentationRules.indentNextLinePattern && this._indentationRules.indentNextLinePattern.test(text)) {\n      return true;\n    }\n\n    return false;\n  };\n\n  IndentRulesSupport.prototype.shouldIgnore = function (text) {\n    // the text matches `unIndentedLinePattern`\n    if (this._indentationRules && this._indentationRules.unIndentedLinePattern && this._indentationRules.unIndentedLinePattern.test(text)) {\n      return true;\n    }\n\n    return false;\n  };\n\n  IndentRulesSupport.prototype.getIndentMetadata = function (text) {\n    var ret = 0;\n\n    if (this.shouldIncrease(text)) {\n      ret += 1\n      /* INCREASE_MASK */\n      ;\n    }\n\n    if (this.shouldDecrease(text)) {\n      ret += 2\n      /* DECREASE_MASK */\n      ;\n    }\n\n    if (this.shouldIndentNextLine(text)) {\n      ret += 4\n      /* INDENT_NEXTLINE_MASK */\n      ;\n    }\n\n    if (this.shouldIgnore(text)) {\n      ret += 8\n      /* UNINDENT_MASK */\n      ;\n    }\n\n    return ret;\n  };\n\n  return IndentRulesSupport;\n}();\n\nexport { IndentRulesSupport };","map":null,"metadata":{},"sourceType":"module"}