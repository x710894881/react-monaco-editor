{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\n\nvar AbstractCodeEditorService =\n/** @class */\nfunction (_super) {\n  __extends(AbstractCodeEditorService, _super);\n\n  function AbstractCodeEditorService() {\n    var _this = _super.call(this) || this;\n\n    _this._onCodeEditorAdd = _this._register(new Emitter());\n    _this.onCodeEditorAdd = _this._onCodeEditorAdd.event;\n    _this._onCodeEditorRemove = _this._register(new Emitter());\n    _this.onCodeEditorRemove = _this._onCodeEditorRemove.event;\n    _this._onDiffEditorAdd = _this._register(new Emitter());\n    _this._onDiffEditorRemove = _this._register(new Emitter());\n    _this._codeEditors = Object.create(null);\n    _this._diffEditors = Object.create(null);\n    return _this;\n  }\n\n  AbstractCodeEditorService.prototype.addCodeEditor = function (editor) {\n    this._codeEditors[editor.getId()] = editor;\n\n    this._onCodeEditorAdd.fire(editor);\n  };\n\n  AbstractCodeEditorService.prototype.removeCodeEditor = function (editor) {\n    if (delete this._codeEditors[editor.getId()]) {\n      this._onCodeEditorRemove.fire(editor);\n    }\n  };\n\n  AbstractCodeEditorService.prototype.listCodeEditors = function () {\n    var _this = this;\n\n    return Object.keys(this._codeEditors).map(function (id) {\n      return _this._codeEditors[id];\n    });\n  };\n\n  AbstractCodeEditorService.prototype.addDiffEditor = function (editor) {\n    this._diffEditors[editor.getId()] = editor;\n\n    this._onDiffEditorAdd.fire(editor);\n  };\n\n  AbstractCodeEditorService.prototype.removeDiffEditor = function (editor) {\n    if (delete this._diffEditors[editor.getId()]) {\n      this._onDiffEditorRemove.fire(editor);\n    }\n  };\n\n  AbstractCodeEditorService.prototype.listDiffEditors = function () {\n    var _this = this;\n\n    return Object.keys(this._diffEditors).map(function (id) {\n      return _this._diffEditors[id];\n    });\n  };\n\n  AbstractCodeEditorService.prototype.getFocusedCodeEditor = function () {\n    var editorWithWidgetFocus = null;\n    var editors = this.listCodeEditors();\n\n    for (var _i = 0, editors_1 = editors; _i < editors_1.length; _i++) {\n      var editor = editors_1[_i];\n\n      if (editor.hasTextFocus()) {\n        // bingo!\n        return editor;\n      }\n\n      if (editor.hasWidgetFocus()) {\n        editorWithWidgetFocus = editor;\n      }\n    }\n\n    return editorWithWidgetFocus;\n  };\n\n  return AbstractCodeEditorService;\n}(Disposable);\n\nexport { AbstractCodeEditorService };","map":null,"metadata":{},"sourceType":"module"}