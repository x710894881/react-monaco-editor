{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { binarySearch, isFalsyOrEmpty } from '../../../base/common/arrays.js';\nimport { Range } from '../../common/core/range.js';\nimport { BracketSelectionRangeProvider } from '../smartSelect/bracketSelections.js';\n\nvar WordDistance =\n/** @class */\nfunction () {\n  function WordDistance() {}\n\n  WordDistance.create = function (service, editor) {\n    if (!editor.getConfiguration().contribInfo.suggest.localityBonus) {\n      return Promise.resolve(WordDistance.None);\n    }\n\n    if (!editor.hasModel()) {\n      return Promise.resolve(WordDistance.None);\n    }\n\n    var model = editor.getModel();\n    var position = editor.getPosition();\n\n    if (!service.canComputeWordRanges(model.uri)) {\n      return Promise.resolve(WordDistance.None);\n    }\n\n    return new BracketSelectionRangeProvider().provideSelectionRanges(model, [position]).then(function (ranges) {\n      if (!ranges || ranges.length === 0 || ranges[0].length === 0) {\n        return WordDistance.None;\n      }\n\n      return service.computeWordRanges(model.uri, ranges[0][0].range).then(function (wordRanges) {\n        return new (\n        /** @class */\n        function (_super) {\n          __extends(class_1, _super);\n\n          function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n          }\n\n          class_1.prototype.distance = function (anchor, suggestion) {\n            if (!wordRanges || !position.equals(editor.getPosition())) {\n              return 0;\n            }\n\n            if (suggestion.kind === 17\n            /* Keyword */\n            ) {\n                return 2 << 20;\n              }\n\n            var word = suggestion.label;\n            var wordLines = wordRanges[word];\n\n            if (isFalsyOrEmpty(wordLines)) {\n              return 2 << 20;\n            }\n\n            var idx = binarySearch(wordLines, Range.fromPositions(anchor), Range.compareRangesUsingStarts);\n            var bestWordRange = idx >= 0 ? wordLines[idx] : wordLines[Math.max(0, ~idx - 1)];\n            var blockDistance = ranges.length;\n\n            for (var _i = 0, _a = ranges[0]; _i < _a.length; _i++) {\n              var range = _a[_i];\n\n              if (!Range.containsRange(range.range, bestWordRange)) {\n                break;\n              }\n\n              blockDistance -= 1;\n            }\n\n            return blockDistance;\n          };\n\n          return class_1;\n        }(WordDistance))();\n      });\n    });\n  };\n\n  WordDistance.None = new (\n  /** @class */\n  function (_super) {\n    __extends(class_2, _super);\n\n    function class_2() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    class_2.prototype.distance = function () {\n      return 0;\n    };\n\n    return class_2;\n  }(WordDistance))();\n  return WordDistance;\n}();\n\nexport { WordDistance };","map":null,"metadata":{},"sourceType":"module"}