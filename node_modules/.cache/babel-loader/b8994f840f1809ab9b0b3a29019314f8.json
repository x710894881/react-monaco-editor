{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as nls from '../../../nls.js';\nimport { isHighSurrogate, isLowSurrogate } from '../../../base/common/strings.js';\nimport { EditorAction, registerEditorAction } from '../../browser/editorExtensions.js';\nimport { ReplaceCommand } from '../../common/commands/replaceCommand.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\n\nvar TransposeLettersAction =\n/** @class */\nfunction (_super) {\n  __extends(TransposeLettersAction, _super);\n\n  function TransposeLettersAction() {\n    return _super.call(this, {\n      id: 'editor.action.transposeLetters',\n      label: nls.localize('transposeLetters.label', \"Transpose Letters\"),\n      alias: 'Transpose Letters',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 0,\n        mac: {\n          primary: 256\n          /* WinCtrl */\n          | 50\n          /* KEY_T */\n\n        },\n        weight: 100\n        /* EditorContrib */\n\n      }\n    }) || this;\n  }\n\n  TransposeLettersAction.prototype.positionLeftOf = function (start, model) {\n    var column = start.column;\n    var lineNumber = start.lineNumber;\n\n    if (column > model.getLineMinColumn(lineNumber)) {\n      if (isLowSurrogate(model.getLineContent(lineNumber).charCodeAt(column - 2))) {\n        // character before column is a low surrogate\n        column = column - 2;\n      } else {\n        column = column - 1;\n      }\n    } else if (lineNumber > 1) {\n      lineNumber = lineNumber - 1;\n      column = model.getLineMaxColumn(lineNumber);\n    }\n\n    return new Position(lineNumber, column);\n  };\n\n  TransposeLettersAction.prototype.positionRightOf = function (start, model) {\n    var column = start.column;\n    var lineNumber = start.lineNumber;\n\n    if (column < model.getLineMaxColumn(lineNumber)) {\n      if (isHighSurrogate(model.getLineContent(lineNumber).charCodeAt(column - 1))) {\n        // character after column is a high surrogate\n        column = column + 2;\n      } else {\n        column = column + 1;\n      }\n    } else if (lineNumber < model.getLineCount()) {\n      lineNumber = lineNumber + 1;\n      column = 0;\n    }\n\n    return new Position(lineNumber, column);\n  };\n\n  TransposeLettersAction.prototype.run = function (accessor, editor) {\n    if (!editor.hasModel()) {\n      return;\n    }\n\n    var model = editor.getModel();\n    var commands = [];\n    var selections = editor.getSelections();\n\n    for (var _i = 0, selections_1 = selections; _i < selections_1.length; _i++) {\n      var selection = selections_1[_i];\n\n      if (!selection.isEmpty()) {\n        continue;\n      }\n\n      var lineNumber = selection.startLineNumber;\n      var column = selection.startColumn;\n      var lastColumn = model.getLineMaxColumn(lineNumber);\n\n      if (lineNumber === 1 && (column === 1 || column === 2 && lastColumn === 2)) {\n        // at beginning of file, nothing to do\n        continue;\n      } // handle special case: when at end of line, transpose left two chars\n      // otherwise, transpose left and right chars\n\n\n      var endPosition = column === lastColumn ? selection.getPosition() : this.positionRightOf(selection.getPosition(), model);\n      var middlePosition = this.positionLeftOf(endPosition, model);\n      var beginPosition = this.positionLeftOf(middlePosition, model);\n      var leftChar = model.getValueInRange(Range.fromPositions(beginPosition, middlePosition));\n      var rightChar = model.getValueInRange(Range.fromPositions(middlePosition, endPosition));\n      var replaceRange = Range.fromPositions(beginPosition, endPosition);\n      commands.push(new ReplaceCommand(replaceRange, rightChar + leftChar));\n    }\n\n    if (commands.length > 0) {\n      editor.pushUndoStop();\n      editor.executeCommands(this.id, commands);\n      editor.pushUndoStop();\n    }\n  };\n\n  return TransposeLettersAction;\n}(EditorAction);\n\nregisterEditorAction(TransposeLettersAction);","map":null,"metadata":{},"sourceType":"module"}