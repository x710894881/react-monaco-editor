{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { IStandaloneThemeService } from '../../common/standaloneThemeService.js';\nimport { ToggleHighContrastNLS } from '../../../common/standaloneStrings.js';\n\nvar ToggleHighContrast =\n/** @class */\nfunction (_super) {\n  __extends(ToggleHighContrast, _super);\n\n  function ToggleHighContrast() {\n    var _this = _super.call(this, {\n      id: 'editor.action.toggleHighContrast',\n      label: ToggleHighContrastNLS.toggleHighContrast,\n      alias: 'Toggle High Contrast Theme',\n      precondition: undefined\n    }) || this;\n\n    _this._originalThemeName = null;\n    return _this;\n  }\n\n  ToggleHighContrast.prototype.run = function (accessor, editor) {\n    var standaloneThemeService = accessor.get(IStandaloneThemeService);\n\n    if (this._originalThemeName) {\n      // We must toggle back to the integrator's theme\n      standaloneThemeService.setTheme(this._originalThemeName);\n      this._originalThemeName = null;\n    } else {\n      this._originalThemeName = standaloneThemeService.getTheme().themeName;\n      standaloneThemeService.setTheme('hc-black');\n    }\n  };\n\n  return ToggleHighContrast;\n}(EditorAction);\n\nregisterEditorAction(ToggleHighContrast);","map":null,"metadata":{},"sourceType":"module"}