{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as nls from '../../../nls.js';\nimport { EditorAction, registerEditorAction } from '../../browser/editorExtensions.js';\nimport { EditorZoom } from '../../common/config/editorZoom.js';\n\nvar EditorFontZoomIn =\n/** @class */\nfunction (_super) {\n  __extends(EditorFontZoomIn, _super);\n\n  function EditorFontZoomIn() {\n    return _super.call(this, {\n      id: 'editor.action.fontZoomIn',\n      label: nls.localize('EditorFontZoomIn.label', \"Editor Font Zoom In\"),\n      alias: 'Editor Font Zoom In',\n      precondition: undefined\n    }) || this;\n  }\n\n  EditorFontZoomIn.prototype.run = function (accessor, editor) {\n    EditorZoom.setZoomLevel(EditorZoom.getZoomLevel() + 1);\n  };\n\n  return EditorFontZoomIn;\n}(EditorAction);\n\nvar EditorFontZoomOut =\n/** @class */\nfunction (_super) {\n  __extends(EditorFontZoomOut, _super);\n\n  function EditorFontZoomOut() {\n    return _super.call(this, {\n      id: 'editor.action.fontZoomOut',\n      label: nls.localize('EditorFontZoomOut.label', \"Editor Font Zoom Out\"),\n      alias: 'Editor Font Zoom Out',\n      precondition: undefined\n    }) || this;\n  }\n\n  EditorFontZoomOut.prototype.run = function (accessor, editor) {\n    EditorZoom.setZoomLevel(EditorZoom.getZoomLevel() - 1);\n  };\n\n  return EditorFontZoomOut;\n}(EditorAction);\n\nvar EditorFontZoomReset =\n/** @class */\nfunction (_super) {\n  __extends(EditorFontZoomReset, _super);\n\n  function EditorFontZoomReset() {\n    return _super.call(this, {\n      id: 'editor.action.fontZoomReset',\n      label: nls.localize('EditorFontZoomReset.label', \"Editor Font Zoom Reset\"),\n      alias: 'Editor Font Zoom Reset',\n      precondition: undefined\n    }) || this;\n  }\n\n  EditorFontZoomReset.prototype.run = function (accessor, editor) {\n    EditorZoom.setZoomLevel(0);\n  };\n\n  return EditorFontZoomReset;\n}(EditorAction);\n\nregisterEditorAction(EditorFontZoomIn);\nregisterEditorAction(EditorFontZoomOut);\nregisterEditorAction(EditorFontZoomReset);","map":null,"metadata":{},"sourceType":"module"}