{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nexport var OverviewRulerLane;\n\n(function (OverviewRulerLane) {\n  OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\n  OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\n  OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\n  OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\n})(OverviewRulerLane || (OverviewRulerLane = {}));\n/**\n * Position in the minimap to render the decoration.\n */\n\n\nexport var MinimapPosition;\n\n(function (MinimapPosition) {\n  MinimapPosition[MinimapPosition[\"Inline\"] = 1] = \"Inline\";\n})(MinimapPosition || (MinimapPosition = {}));\n\nvar TextModelResolvedOptions =\n/** @class */\nfunction () {\n  /**\n   * @internal\n   */\n  function TextModelResolvedOptions(src) {\n    this.tabSize = src.tabSize | 0;\n    this.indentSize = src.tabSize | 0;\n    this.insertSpaces = Boolean(src.insertSpaces);\n    this.defaultEOL = src.defaultEOL | 0;\n    this.trimAutoWhitespace = Boolean(src.trimAutoWhitespace);\n  }\n  /**\n   * @internal\n   */\n\n\n  TextModelResolvedOptions.prototype.equals = function (other) {\n    return this.tabSize === other.tabSize && this.indentSize === other.indentSize && this.insertSpaces === other.insertSpaces && this.defaultEOL === other.defaultEOL && this.trimAutoWhitespace === other.trimAutoWhitespace;\n  };\n  /**\n   * @internal\n   */\n\n\n  TextModelResolvedOptions.prototype.createChangeEvent = function (newOpts) {\n    return {\n      tabSize: this.tabSize !== newOpts.tabSize,\n      indentSize: this.indentSize !== newOpts.indentSize,\n      insertSpaces: this.insertSpaces !== newOpts.insertSpaces,\n      trimAutoWhitespace: this.trimAutoWhitespace !== newOpts.trimAutoWhitespace\n    };\n  };\n\n  return TextModelResolvedOptions;\n}();\n\nexport { TextModelResolvedOptions };\n\nvar FindMatch =\n/** @class */\nfunction () {\n  /**\n   * @internal\n   */\n  function FindMatch(range, matches) {\n    this.range = range;\n    this.matches = matches;\n  }\n\n  return FindMatch;\n}();\n\nexport { FindMatch };\n/**\n * @internal\n */\n\nvar ApplyEditsResult =\n/** @class */\nfunction () {\n  function ApplyEditsResult(reverseEdits, changes, trimAutoWhitespaceLineNumbers) {\n    this.reverseEdits = reverseEdits;\n    this.changes = changes;\n    this.trimAutoWhitespaceLineNumbers = trimAutoWhitespaceLineNumbers;\n  }\n\n  return ApplyEditsResult;\n}();\n\nexport { ApplyEditsResult };","map":null,"metadata":{},"sourceType":"module"}