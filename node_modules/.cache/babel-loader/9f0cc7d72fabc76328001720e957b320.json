{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport { Range } from '../../vscode-languageserver-types/main.js';\nimport { NodeType } from '../parser/cssNodes.js';\nimport { SelectionRangeKind } from '../cssLanguageTypes.js';\nexport function getSelectionRanges(document, positions, stylesheet) {\n  function getSelectionRange(position) {\n    var applicableRanges = getApplicableRanges(position);\n    var ranges = applicableRanges.map(function (pair) {\n      return {\n        range: Range.create(document.positionAt(pair[0]), document.positionAt(pair[1])),\n        kind: SelectionRangeKind.Statement\n      };\n    });\n    return ranges;\n  }\n\n  return positions.map(getSelectionRange);\n\n  function getApplicableRanges(position) {\n    var currNode = stylesheet.findChildAtOffset(document.offsetAt(position), true);\n\n    if (!currNode) {\n      return [];\n    }\n\n    var result = [];\n\n    while (currNode) {\n      if (currNode.parent && currNode.offset === currNode.parent.offset && currNode.end === currNode.parent.end) {\n        currNode = currNode.parent;\n        continue;\n      }\n\n      if (currNode.type === NodeType.Declarations) {\n        result.push([currNode.offset + 1, currNode.end - 1]);\n      } else {\n        result.push([currNode.offset, currNode.end]);\n      }\n\n      currNode = currNode.parent;\n    }\n\n    return result;\n  }\n}","map":null,"metadata":{},"sourceType":"module"}